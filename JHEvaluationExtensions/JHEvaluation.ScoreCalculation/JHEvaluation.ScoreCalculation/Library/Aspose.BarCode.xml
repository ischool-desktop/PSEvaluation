<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Aspose.BarCode</name>
    </assembly>
    <members>
        <member name="T:Aspose.BarCode.AztecEncoder">
            <summary>
            Summary description for AztecEncoder.
            </summary>
        </member>
        <member name="T:Aspose.BarCode.DataMatrixEncoder">
            <summary>
            Summary description for DataMatrixEncoder.
            </summary>
        </member>
        <member name="T:Aspose.BarCode.QREncoder">
            <summary>
            Summary description for QREncoder.
            </summary>
        </member>
        <member name="T:Aspose.BarCode.Alignment">
            <summary>
            Caption or Barcode image's alignment style
            </summary>
        </member>
        <member name="F:Aspose.BarCode.Alignment.Middle">
            <summary>
             in the middle
            </summary>
        </member>
        <member name="F:Aspose.BarCode.Alignment.Left">
            <summary>
            at the left side
            </summary>
        </member>
        <member name="F:Aspose.BarCode.Alignment.Right">
            <summary>
            at the right side
            </summary>
        </member>
        <member name="F:Aspose.BarCode.Alignment.Top">
            <summary>
            top  middle
            </summary>
        </member>
        <member name="F:Aspose.BarCode.Alignment.Bottom">
            <summary>
            bottom middle
            </summary>
        </member>
        <member name="F:Aspose.BarCode.Alignment.TopLeft">
            <summary>
             at the top left corner
            </summary>
        </member>
        <member name="F:Aspose.BarCode.Alignment.TopRight">
            <summary>
            at the top right corner
            </summary>
        </member>
        <member name="F:Aspose.BarCode.Alignment.BottomLeft">
            <summary>
            at the left bottom corner
            </summary>
        </member>
        <member name="F:Aspose.BarCode.Alignment.BottomRight">
            <summary>
            at the bottom right corner
            </summary>
        </member>
        <member name="F:Aspose.BarCode.Alignment.Auto">
            <summary>
            auto alignment
            </summary>
        </member>
        <member name="T:Aspose.BarCode.BarCodeBuilder">
             <summary>
             BarCodeBuilder for backend barcode images generation. 
             See <see cref="T:Aspose.BarCode.Windows.Forms.BarCodeControl"/>.
             See <see cref="T:Aspose.BarCode.Web.UI.BarCodeWebControl"/>.
             
             supported symbology: 
             1D:
             Codabar, Code11, Code128, Code39Standard, Code39Extended
             Code93Standard, Code93Extended, EAN13, EAN8, Interleaved2of5, 
             MSI, Standard2of5, UPCA, UPCE, BooklandEAN, EAN128, Postnet, Planet
             EAN14(SCC14), SSCC18, ITF14
             2D:
             DataMatrix, PDf417, QR code
             
             </summary>
             <example>
            	 Create and save a BarCode image
             <code>
             [C#]
            	  Aspose.BarCode.BarCode b = new BarCodeBuilder();
            	  b.SymbologyType = Aspose.BarCode.SymbologyType.Codabar;
            	  b.CodeText = "12345678";
            	  b.BarCodeImage.Save("test.bmp");
            </code>
            	  
            [VB.NET]
            <code>
            	  Dim b as Aspose.BarCode.BarCodeBuilder
            	  b = new BarCodeBuilder()
            	  b.CodeText = "12345678"
            	  b.BarCodeImage.Save("test.bmp")
            </code>
             </example>
        </member>
        <member name="T:Aspose.BarCode.IBarCodeControl">
            <summary>
            IBarCodeControl
            </summary>
        </member>
        <member name="M:Aspose.BarCode.IBarCodeControl.Rotate">
            <summary>
            Rotate
            </summary>
        </member>
        <member name="M:Aspose.BarCode.IBarCodeControl.Rotate(Aspose.BarCode.RotationAngle)">
            <summary>
            Rotate
            </summary>
            <param name="angle"></param>
        </member>
        <member name="M:Aspose.BarCode.IBarCodeControl.Rotate(System.Single)">
            <summary>
            Rotate
            </summary>
            <param name="angle"></param>
        </member>
        <member name="M:Aspose.BarCode.IBarCodeControl.Rotate(Aspose.BarCode.RotationDirection,System.Single)">
            <summary>
            Rotate
            </summary>
            <param name="direction"></param>
            <param name="angle"></param>
        </member>
        <member name="M:Aspose.BarCode.IBarCodeControl.Rotate(Aspose.BarCode.RotationDirection,Aspose.BarCode.RotationAngle)">
            <summary>
            Rotate
            </summary>
            <param name="direction"></param>
            <param name="angle"></param>
        </member>
        <member name="M:Aspose.BarCode.IBarCodeControl.Save(System.String)">
            <summary>
            Rotate
            </summary>
            <param name="filename"></param>
        </member>
        <member name="M:Aspose.BarCode.IBarCodeControl.Save(System.IO.Stream,System.Drawing.Imaging.ImageFormat)">
            <summary>
            Rotate
            </summary>
            <param name="stream"></param>
            <param name="format"></param>
        </member>
        <member name="M:Aspose.BarCode.IBarCodeControl.Save(System.String,System.Drawing.Imaging.ImageFormat)">
            <summary>
            Rotate
            </summary>
            <param name="filename"></param>
            <param name="format"></param>
        </member>
        <member name="P:Aspose.BarCode.IBarCodeControl.SymbologyType">
            <summary>
            IBarCodeControl
            </summary>
        </member>
        <member name="P:Aspose.BarCode.IBarCodeControl.ImageWidth">
            <summary>
            ImageWidth
            </summary>
        </member>
        <member name="P:Aspose.BarCode.IBarCodeControl.ImageHeight">
            <summary>
            ImageHeight
            </summary>
        </member>
        <member name="P:Aspose.BarCode.IBarCodeControl.BarCodeImage">
            <summary>
            BarCodeImage
            </summary>
        </member>
        <member name="P:Aspose.BarCode.IBarCodeControl.xDimension">
            <summary>
            xDimension
            </summary>
        </member>
        <member name="P:Aspose.BarCode.IBarCodeControl.yDimension">
            <summary>
            yDimension
            </summary>
        </member>
        <member name="P:Aspose.BarCode.IBarCodeControl.BackColor">
            <summary>
            BackColor
            </summary>
        </member>
        <member name="P:Aspose.BarCode.IBarCodeControl.ForeColor">
            <summary>
            ForeColor
            </summary>
        </member>
        <member name="P:Aspose.BarCode.IBarCodeControl.AutoSize">
            <summary>
            AutoSize
            </summary>
        </member>
        <member name="P:Aspose.BarCode.IBarCodeControl.RotationAngleF">
            <summary>
            RotationAngleF
            </summary>
        </member>
        <member name="P:Aspose.BarCode.IBarCodeControl.GraphicsUnit">
            <summary>
            GraphicsUnit
            </summary>
        </member>
        <member name="P:Aspose.BarCode.IBarCodeControl.BorderVisible">
            <summary>
            BorderVisible
            </summary>
        </member>
        <member name="P:Aspose.BarCode.IBarCodeControl.BorderDashStyle">
            <summary>
            BorderDashStyle
            </summary>
        </member>
        <member name="P:Aspose.BarCode.IBarCodeControl.BorderWidth">
            <summary>
            BorderWidth
            </summary>
        </member>
        <member name="P:Aspose.BarCode.IBarCodeControl.BorderColor">
            <summary>
            BorderColor
            </summary>
        </member>
        <member name="P:Aspose.BarCode.IBarCodeControl.CaptionAbove">
            <summary>
            CaptionAbove
            </summary>
        </member>
        <member name="P:Aspose.BarCode.IBarCodeControl.CaptionBelow">
            <summary>
            CaptionBelow
            </summary>
        </member>
        <member name="P:Aspose.BarCode.IBarCodeControl.Margins">
            <summary>
            Margins
            </summary>
        </member>
        <member name="P:Aspose.BarCode.IBarCodeControl.Resolution">
            <summary>
            Resolution
            </summary>
        </member>
        <member name="P:Aspose.BarCode.IBarCodeControl.CodeText">
            <summary>
            CodeText
            </summary>
        </member>
        <member name="P:Aspose.BarCode.IBarCodeControl.Pdf417Truncate">
            <summary>
            Pdf417Truncate
            </summary>
        </member>
        <member name="P:Aspose.BarCode.IBarCodeControl.Pdf417ErrorLevel">
            <summary>
            Pdf417ErrorLevel
            </summary>
        </member>
        <member name="P:Aspose.BarCode.IBarCodeControl.Pdf417CompactionMode">
            <summary>
            Pdf417CompactionMode
            </summary>
        </member>
        <member name="P:Aspose.BarCode.IBarCodeControl.AspectRatio">
            <summary>
            AspectRatio
            </summary>
        </member>
        <member name="P:Aspose.BarCode.IBarCodeControl.Columns">
            <summary>
            Columns
            </summary>
        </member>
        <member name="P:Aspose.BarCode.IBarCodeControl.EnableEscape">
            <summary>
            EnableEscape
            </summary>
        </member>
        <member name="P:Aspose.BarCode.IBarCodeControl.EnableChecksum">
            <summary>
            EnableChecksum
            </summary>
        </member>
        <member name="P:Aspose.BarCode.IBarCodeControl.Code128CodeSet">
            <summary>
            Code128CodeSet
            </summary>
        </member>
        <member name="P:Aspose.BarCode.IBarCodeControl.BarHeight">
            <summary>
            BarHeight
            </summary>
        </member>
        <member name="P:Aspose.BarCode.IBarCodeControl.WideNarrowRatio">
            <summary>
            WideNarrowRatio
            </summary>
        </member>
        <member name="P:Aspose.BarCode.IBarCodeControl.CodeTextColor">
            <summary>
            CodeTextColor
            </summary>
        </member>
        <member name="P:Aspose.BarCode.IBarCodeControl.CodeLocation">
            <summary>
            CodeLocation
            </summary>
        </member>
        <member name="P:Aspose.BarCode.IBarCodeControl.CodeTextAlignment">
            <summary>
            CodeTextAlignment
            </summary>
        </member>
        <member name="P:Aspose.BarCode.IBarCodeControl.CodeTextSpace">
            <summary>
            CodeTextSpace
            </summary>
        </member>
        <member name="P:Aspose.BarCode.IBarCodeControl.CodabarStartSymbol">
            <summary>
            CodabarStartSymbol
            </summary>
        </member>
        <member name="P:Aspose.BarCode.IBarCodeControl.CodabarStopSymbol">
            <summary>
            CodabarStopSymbol
            </summary>
        </member>
        <member name="P:Aspose.BarCode.IBarCodeControl.CodeTextFont">
            <summary>
            CodeTextFont
            </summary>
        </member>
        <member name="P:Aspose.BarCode.IBarCodeControl.SupplementData">
            <summary>
            SupplementData
            </summary>
        </member>
        <member name="P:Aspose.BarCode.IBarCodeControl.SupplementSpace">
            <summary>
            SupplementSpace
            </summary>
        </member>
        <member name="P:Aspose.BarCode.IBarCodeControl.ImageQuality">
            <summary>
            ImageQuality
            </summary>
        </member>
        <member name="P:Aspose.BarCode.IBarCodeControl.PostnetShortBarHeight">
            <summary>
            PostnetShortBarHeight
            </summary>
        </member>
        <member name="P:Aspose.BarCode.IBarCodeControl.PlanetShortBarHeight">
            <summary>
            PlanetShortBarHeight
            </summary>
        </member>
        <member name="F:Aspose.BarCode.BarCodeBuilder.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Aspose.BarCode.BarCodeBuilder.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Aspose.BarCode.BarCodeBuilder.SaveImageAs(System.String)">
            <summary>
            Save the barcode image
            </summary>
            <param name="filename">Full path of the target image file</param>
        </member>
        <member name="M:Aspose.BarCode.BarCodeBuilder.SaveImageAs(System.IO.Stream,System.Drawing.Imaging.ImageFormat)">
            <summary>
            Save the barcode image
            </summary>
            <param name="stream">A Stream that use to output the image.</param>
            <param name="format">The image format.</param>
        </member>
        <member name="M:Aspose.BarCode.BarCodeBuilder.SaveImageAs(System.String,System.Drawing.Imaging.ImageFormat)">
            <summary>
            Save barcode image to local file.
            </summary>
            <param name="filename">The filename</param>
            <param name="format">The image format</param>
        </member>
        <member name="M:Aspose.BarCode.BarCodeBuilder.#ctor">
            <summary>
            BarCodeBuilder's constructer, default SymbologyType is Code128, 
            default CodeText is 12345678
            </summary>
        </member>
        <member name="M:Aspose.BarCode.BarCodeBuilder.#ctor(System.String)">
            <summary>
            BarCodeBuilder's constructer, default SymbologyType is Code128
            </summary>
            <param name="CodeText">string text data to be encoded</param>
        </member>
        <member name="M:Aspose.BarCode.BarCodeBuilder.#ctor(System.String,Aspose.BarCode.Symbology)">
            <summary>
            BarCodeBuilder's constructer
            </summary>
            <param name="CodeText">string text data to be encoded</param>
            <param name="type">BarCode's type: Aspose.BarCode.SymbologyType</param>
        </member>
        <member name="M:Aspose.BarCode.BarCodeBuilder.#ctor(System.ComponentModel.IContainer)">
            <summary>
            BarCodeBuilder's constructer, default SymbologyType is Code128, 
            default CodeText is 12345678
            </summary>
        </member>
        <member name="M:Aspose.BarCode.BarCodeBuilder.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Aspose.BarCode.BarCodeBuilder.GenerateBarCodeImage">
            <summary>
            Generate the BarCode image under current settings
            </summary>
            <returns>BarCode Image See <see cref="T:System.Drawing.Bitmap"/>.</returns>
        </member>
        <member name="M:Aspose.BarCode.BarCodeBuilder.Rotate">
            <summary>
            Rotate barcode image clockwise for 90 degrees
            </summary>
        </member>
        <member name="M:Aspose.BarCode.BarCodeBuilder.Rotate(System.Single)">
            <summary>
            Rotate barcode image clockwise
            </summary>
            <param name="angle">Rotation Angle</param>
        </member>
        <member name="M:Aspose.BarCode.BarCodeBuilder.Rotate(Aspose.BarCode.RotationDirection,System.Single)">
            <summary>
            Rotate the barcode image
            </summary>
            <param name="direction">rotation direction</param>
            <param name="angle">rotation angle</param>
        </member>
        <member name="M:Aspose.BarCode.BarCodeBuilder.Rotate(Aspose.BarCode.RotationAngle)">
            <summary>
            Rotate the barcode image
            </summary>
            <param name="angle">either 0, 90, 180 or 270 degree</param>
        </member>
        <member name="M:Aspose.BarCode.BarCodeBuilder.Rotate(Aspose.BarCode.RotationDirection,Aspose.BarCode.RotationAngle)">
            <summary>
            Rotate the barcode image
            </summary>
            <param name="direction">specify clockwise or anti-clockwise</param>
            <param name="angle">either 0, 90, 180 or 270 degree</param>
        </member>
        <member name="M:Aspose.BarCode.BarCodeBuilder.Save(System.String)">
            <summary>
            Save BarCodeImage to specific file in specific format
            </summary>
            <param name="filename">save to this file path</param>
        </member>
        <member name="M:Aspose.BarCode.BarCodeBuilder.Save(System.IO.Stream,System.Drawing.Imaging.ImageFormat)">
            <summary>
            Save BarCodeImage to specific file in specific format
            </summary>
            <param name="stream">System.IO.Stream</param>
            <param name="format">System.Drawing.Imaging.ImageFormat</param>
        </member>
        <member name="M:Aspose.BarCode.BarCodeBuilder.Save(System.String,System.Drawing.Imaging.ImageFormat)">
            <summary>
            Save BarCodeImage to specific file in specific format
            </summary>
            <param name="filename">save to this file path</param>
            <param name="format">System.Drawing.Imaging.ImageFormat</param>
        </member>
        <member name="M:Aspose.BarCode.BarCodeBuilder.Print">
            <summary>
            Print BarCodeImage
            See <see cref="P:Aspose.BarCode.BarCodeBuilder.PrinterName"/>.
            </summary>
            <example>
            <code>
            [C#]
            
            BarCodeBuilder b = new BarCodeBuilder();
            b.CodeText = "123456";
            b.SymbologyType = SymbologyType.Pdf417;
            b.Print()
            
            [VB.NET]
            
            dim b as BarCodeBuilder
            b = new BarCodeBuilder()
            b.CodeText = "123456"
            b.SymbologyType = SymbologyType.Pdf417
            b.Print()
            </code>
            </example>
        </member>
        <member name="M:Aspose.BarCode.BarCodeBuilder.ToString">
            <summary>
            overried to string method
            </summary>
            <returns>BarCode: SymbologyType: CodeText</returns>
        </member>
        <member name="P:Aspose.BarCode.BarCodeBuilder.SymbologyType">
            <summary>
            BarCode's symbology, type: Aspose.BarCode.SymbologyType See <see cref="T:Aspose.BarCode.Symbology"/>.
            supported symbology: 
            1D:
            Codabar, Code11, Code128, Code39Standard, Code39Extended
            Code93Standard, Code93Extended, EAN13, EAN8, Interleaved2of5, 
            MSI, Standard2of5, UPCA, UPCE, EAN14(SCC14), SSCC18, ITF14
            2D:
            DataMatrix, PDf417
            </summary>
            <example>
            Create and save a BarCode image
            <code>
            [C#]
              Aspose.BarCode.BarCodeBuilder b = new BarCodeBuilder();
              b.SymbologyType = Aspose.BarCode.SymbologyType.Codabar;
              b.CodeText = "12345678";
              b.BarCodeImage.Save("test.bmp");
              
              [VB.NET]
              Dim b as Aspose.BarCode.BarCodeBuilder
              b = new BarCodeBuilder()
              b.CodeText = "12345678"
              b.BarCodeImage.Save("test.bmp")
              </code>
            </example>
        </member>
        <member name="P:Aspose.BarCode.BarCodeBuilder.CodeText">
            <summary>
            Data to be encoded, different types of BarCode may have different CodeText length restrictions
            See <see cref="P:Aspose.BarCode.BarCodeBuilder.EnableEscape"/>. 
            See <see cref="P:Aspose.BarCode.BarCodeBuilder.CodeTextFont"/>.
            See <see cref="P:Aspose.BarCode.BarCodeBuilder.CodeTextColor"/>.
            See <see cref="P:Aspose.BarCode.BarCodeBuilder.CodeLocation"/>.
            See <see cref="P:Aspose.BarCode.BarCodeBuilder.CodeTextSpace"/>.
            See <see cref="P:Aspose.BarCode.BarCodeBuilder.CodeTextAlignment"/>.
            </summary>
            <example>
            Create and save a BarCode image
            <code>
            [C#]
              Aspose.BarCode.BarCodeBuilder b = new BarCodeBuilder();
              b.SymbologyType = Aspose.BarCode.SymbologyType.Codabar;
              b.CodeText = "12345678";
              b.BarCodeImage.Save("test.bmp");
              
              [VB.NET]
              Dim b as Aspose.BarCode.BarCodeBuilder
              b = new BarCodeBuilder()
              b.CodeText = "12345678"
              b.BarCodeImage.Save("test.bmp")
              </code>
            </example>
        </member>
        <member name="P:Aspose.BarCode.BarCodeBuilder.EnableEscape">
            <summary>
            Indicates whether explains the character "\" as an escape character in CodeText property.
            See <see cref="P:Aspose.BarCode.BarCodeBuilder.CodeText"/>.
            <note>If the EnableEscape is true, "\" will be explained as a special escape character. Otherwise, "\" acts as normal characters.</note>
            <remarks>Aspose.BarCode supports inputing decimal ascii code and mnemonic for ASCII control-code characters, 0 through 31. For example, \013 and \CR stands for CR.</remarks>
            </summary>
        </member>
        <member name="P:Aspose.BarCode.BarCodeBuilder.CodeTextFont">
            <summary>
             Specify the displaying CodeText's font
             See <see cref="P:Aspose.BarCode.BarCodeBuilder.CodeText"/>.
             See <see cref="T:System.Drawing.Font"/>.
             See <see cref="P:Aspose.BarCode.BarCodeBuilder.CodeTextColor"/>.
             See <see cref="P:Aspose.BarCode.BarCodeBuilder.CodeLocation"/>.
             See <see cref="P:Aspose.BarCode.BarCodeBuilder.CodeTextSpace"/>.
             See <see cref="P:Aspose.BarCode.BarCodeBuilder.CodeTextAlignment"/>.
            </summary>
        </member>
        <member name="P:Aspose.BarCode.BarCodeBuilder.CodeTextColor">
            <summary>
            Specify the displaying CodeText's Color
            See <see cref="T:System.Drawing.Color"/>.
            See <see cref="P:Aspose.BarCode.BarCodeBuilder.CodeText"/>.
            See <see cref="P:Aspose.BarCode.BarCodeBuilder.CodeTextFont"/>.
            See <see cref="P:Aspose.BarCode.BarCodeBuilder.CodeLocation"/>.
            See <see cref="P:Aspose.BarCode.BarCodeBuilder.CodeTextSpace"/>.
            See <see cref="P:Aspose.BarCode.BarCodeBuilder.CodeTextAlignment"/>.
            </summary>
        </member>
        <member name="P:Aspose.BarCode.BarCodeBuilder.CodeLocation">
            <summary>
            Specify the displaying CodeText's Location, set to CodeLocation.None to hide CodeText.
            CodeLocation will be ignored if SymbologyType is UPCE, UPCA, BooklandEAN, EAN8 or EAN13
            See <see cref="T:Aspose.BarCode.CodeLocation"/>.
            See <see cref="P:Aspose.BarCode.BarCodeBuilder.CodeText"/>.
            See <see cref="P:Aspose.BarCode.BarCodeBuilder.CodeTextFont"/>.
            See <see cref="P:Aspose.BarCode.BarCodeBuilder.CodeTextSpace"/>.
            See <see cref="P:Aspose.BarCode.BarCodeBuilder.CodeTextColor"/>
            See <see cref="P:Aspose.BarCode.BarCodeBuilder.CodeTextAlignment"/>.
            </summary>
        </member>
        <member name="P:Aspose.BarCode.BarCodeBuilder.CodeTextSpace">
            <summary>
            Space between the CodeText and the BarCode.
            Default Graphics Unit: Millimeter 
            See <see cref="P:Aspose.BarCode.BarCodeBuilder.CodeText"/>.
            See <see cref="P:Aspose.BarCode.BarCodeBuilder.CodeLocation"/>.
            See <see cref="P:Aspose.BarCode.BarCodeBuilder.CodeTextFont"/>.
            See <see cref="P:Aspose.BarCode.BarCodeBuilder.CodeTextColor"/>.
            See <see cref="P:Aspose.BarCode.BarCodeBuilder.CodeTextAlignment"/>.
            </summary>
        </member>
        <member name="P:Aspose.BarCode.BarCodeBuilder.CodeTextAlignment">
            <summary>
            Gets or sets the alignment of the code text. 
            See <see cref="T:System.Drawing.StringAlignment"/>.
            See <see cref="P:Aspose.BarCode.BarCodeBuilder.CodeText"/>.
            See <see cref="P:Aspose.BarCode.BarCodeBuilder.CodeTextFont"/>.
            See <see cref="P:Aspose.BarCode.BarCodeBuilder.CodeTextColor"/>.
            See <see cref="F:Aspose.BarCode.BarCodeBuilder.codeTextSpace"/>.
            </summary>
            <remarks>
            StringAlignment.Near means CodeText will be aligned to the left
            StringAlignment.Far means CodeText will be aligned to the right
            StringAlignment.Center means CodeText will be aligned to the center
            </remarks>
        </member>
        <member name="P:Aspose.BarCode.BarCodeBuilder.RotationAngle">
            <summary>
            Obsoleted, Use RotationAngleF instead
            </summary>
        </member>
        <member name="P:Aspose.BarCode.BarCodeBuilder.RotationAngleF">
            <summary>
            BarCode image's rotation angle, measured in degree, e.g. RotationAngleF = 0 or RotationAngleF = 360 means no rotation
            If RotationAngleF NOT equal to 90, 180, 270 or 0, it may increase the difficulty for the scanner to read the image, please set quality mode to anti-alias
            </summary>
        </member>
        <member name="P:Aspose.BarCode.BarCodeBuilder.AutoSize">
            <summary>
            Wether ajust image's size automatically. Recommended:true
            </summary>
        </member>
        <member name="P:Aspose.BarCode.BarCodeBuilder.ImageWidth">
            <summary>
            BarCode image's width See <see cref="P:Aspose.BarCode.BarCodeBuilder.AutoSize"/>., if AutoSize is true, ImageWidth will 
            be increased accordingly
            Default Graphics Unit: Millimeter 
            </summary>
        </member>
        <member name="P:Aspose.BarCode.BarCodeBuilder.ImageHeight">
            <summary>
            BarCode image's height See <see cref="P:Aspose.BarCode.BarCodeBuilder.AutoSize"/>., if AutoSize is true, ImageHeight will
            be increased accordingly
            Default Graphics Unit: Millimeter 
            </summary>
        </member>
        <member name="P:Aspose.BarCode.BarCodeBuilder.CaptionAbove">
            <summary>
            Caption Above the BarCode image. See <see cref="T:Aspose.BarCode.Caption"/>.
            CaptionAbove contains the following properties: 
            CaptionAbove.Font, 
            CaptionAbove.ForeColor,
             CaptionAbove.Space, 
             CaptionAbove.Visible, 
             CaptionAbove.Text, 
             CaptionAbove.TextAlign
            </summary>
            <example>
             <code>
             [C#]
             Aspose.BarCode.BarCodeBuilder b = new BarCodeBuilder();
            b.CaptionAbove.Text = "This is a BarCode image";
            b.CaptionAbove.Visible = true;
            b.CaptionAbove.Font = new System.Drawing.Font("Arial", 8f);
            //space between the barcode and the caption
            b.CaptionAbove.Space = 2f;
             
             [VB.NET]
             Dim b As Aspose.BarCode.BarCodeBuilder
            b = New Aspose.BarCode.BarCodeBuilder
            b.CaptionAbove.Text = "This is a BarCode image"
            b.CaptionAbove.Visible = True
            b.CaptionAbove.Font = New System.Drawing.Font("Arial", 8.0F)
            'Space between the barcode and the caption
            b.CaptionAbove.Space = 2.0F
             </code>
            </example>
        </member>
        <member name="P:Aspose.BarCode.BarCodeBuilder.CaptionBelow">
            <summary>
            Caption Below the BarCode image. See <see cref="T:Aspose.BarCode.Caption"/>.
            CaptionBelow contains the following properties: 
            CaptionBelow.Font, 
            CaptionBelow.ForeColor, 
            CaptionBelow.Space, 
            CaptionBelow.Visible, 
            CaptionBelow.Text, 
            CaptionBelow.TextAlign
            </summary>
            <example>
             <code>
             [C#]
             Aspose.BarCode.BarCodeBuilder b = new BarCodeBuilder();
            b.CaptionAbove.Text = "This is a BarCode image";
            b.CaptionAbove.Visible = true;
            b.CaptionAbove.Font = new System.Drawing.Font("Arial", 8f);
            //space between the barcode and the caption
            b.CaptionAbove.Space = 2f;
             
             [VB.NET]
             Dim b As Aspose.BarCode.BarCodeBuilder
            b = New Aspose.BarCode.BarCodeBuilder
            b.CaptionAbove.Text = "This is a BarCode image"
            b.CaptionAbove.Visible = True
            b.CaptionAbove.Font = New System.Drawing.Font("Arial", 8.0F)
            'Space between the barcode and the caption
            b.CaptionAbove.Space = 2.0F
             </code>
            </example>
        </member>
        <member name="P:Aspose.BarCode.BarCodeBuilder.BarCodeImage">
            <summary>
            Get the BarCode image under current settings
            </summary>
            <example>
            <code>
            [C#]
            Aspose.BarCode.BarCodeBuilder b = new BarCodeBuilder();
            b.CodeText = "12345678";
            b.SymbologyType = Aspose.BarCode.SymbologyType.Codabar;
            b.BarCodeImage.Save("test.bmp");
            
            [VB.NET]
            dim b as Aspose.BarCode.BarCodeBuilder
            b = new BarCodeBuilder()
            b.CodeText = "12345678"
            b.SymbologyType = Aspose.BarCode.SymbologyType.Codabar
            b.BarCodeImage.Save("test.bmp")
            </code>
            </example>
        </member>
        <member name="P:Aspose.BarCode.BarCodeBuilder.GraphicsUnit">
            <summary>
            Measurement of various properties such as Width, Height etc. 
            Default GraphicsUnit: Millimeter
            See <see cref="T:System.Drawing.GraphicsUnit"/>.
            </summary>
        </member>
        <member name="P:Aspose.BarCode.BarCodeBuilder.Resolution">
            <summary>
            Gets or sets the resolution of the BarCode image
            See <see cref="T:Aspose.BarCode.Resolution"/>.
            </summary>
        </member>
        <member name="P:Aspose.BarCode.BarCodeBuilder.BorderWidth">
            <summary>
            BarCode Image's border's width
            Default Graphics Unit: Millimeter 
            See <see cref="P:Aspose.BarCode.BarCodeBuilder.BorderVisible"/>.
            See <see cref="P:Aspose.BarCode.BarCodeBuilder.BorderDashStyle"/>.
            See <see cref="P:Aspose.BarCode.BarCodeBuilder.BorderColor"/>.
            </summary>
        </member>
        <member name="P:Aspose.BarCode.BarCodeBuilder.BorderVisible">
            <summary>
            whether BarCode Image's border is visible
            See <see cref="P:Aspose.BarCode.BarCodeBuilder.BorderWidth"/>.
            See <see cref="P:Aspose.BarCode.BarCodeBuilder.BorderDashStyle"/>.
            See <see cref="P:Aspose.BarCode.BarCodeBuilder.BorderColor"/>.
            </summary>
        </member>
        <member name="P:Aspose.BarCode.BarCodeBuilder.BorderColor">
            <summary>
            BarCode Image's border's color
            See <see cref="T:System.Drawing.Color"/>.
            See <see cref="P:Aspose.BarCode.BarCodeBuilder.BorderWidth"/>.
            See <see cref="P:Aspose.BarCode.BarCodeBuilder.BorderVisible"/>.
            See <see cref="P:Aspose.BarCode.BarCodeBuilder.BorderDashStyle"/>
            </summary>
        </member>
        <member name="P:Aspose.BarCode.BarCodeBuilder.BorderDashStyle">
            <summary>
            BarCode Image's border's style
            See <see cref="T:Aspose.BarCode.BorderDashStyle"/>.
            See <see cref="P:Aspose.BarCode.BarCodeBuilder.BorderWidth"/>.
            See <see cref="P:Aspose.BarCode.BarCodeBuilder.BorderVisible"/>.
            See <see cref="P:Aspose.BarCode.BarCodeBuilder.BorderColor"/>
            </summary>
        </member>
        <member name="P:Aspose.BarCode.BarCodeBuilder.CodabarStartSymbol">
            <summary>
            Start symbol (character) of codabar symbology
            See <see cref="P:Aspose.BarCode.BarCodeBuilder.CodabarStopSymbol"/>.
            See <see cref="T:Aspose.BarCode.CodabarSymbol"/>.
            </summary>
            <example>
             <code>
             [C#]
             Aspose.BarCode.BarCodeBuilder b = new BarCodeBuilder();
            b.SymbologyType = Aspose.BarCode.SymbologyType.Codabar;
            b.CodabarStartSymbol = CodabarSymbol.A;
            b.CodabarStopSymbol = CodabarSymbol.B;
            b.CodeText = "123456";
            
            [VB.NET]
            dim b as Aspose.BarCode.BarCodeBuilder
            b = new BarCodeBuilder()
            b.SymbologyType = Aspose.BarCode.SymbologyType.Codabar
            b.CodabarStartSymbol = CodabarSymbol.A
            b.CodabarStopSymbol = CodabarSymbol.A
            b.CodeText = "123456"
             </code>
            </example>
        </member>
        <member name="P:Aspose.BarCode.BarCodeBuilder.CodabarStopSymbol">
            <summary>
            Stop symbol (character) of codabar symbology
            See <see cref="P:Aspose.BarCode.BarCodeBuilder.CodabarStartSymbol"/>.
            See <see cref="T:Aspose.BarCode.CodabarSymbol"/>.
            </summary>
            <example>
             <code>
             [C#]
             Aspose.BarCode.BarCodeBuilder b = new BarCodeBuilder();
            b.SymbologyType = Aspose.BarCode.SymbologyType.Codabar;
            b.CodabarStartSymbol = CodabarSymbol.A;
            b.CodabarStopSymbol = CodabarSymbol.B;
            b.CodeText = "123456";
            
            [VB.NET]
            dim b as Aspose.BarCode.BarCodeBuilder
            b = new BarCodeBuilder()
            b.SymbologyType = Aspose.BarCode.SymbologyType.Codabar
            b.CodabarStartSymbol = CodabarSymbol.A
            b.CodabarStopSymbol = CodabarSymbol.A
            b.CodeText = "123456"
             </code>
            </example>
        </member>
        <member name="P:Aspose.BarCode.BarCodeBuilder.Code128CodeSet">
            <summary>
            Code128 symbology type of barcode's code set, default to Code128CodeSet.Auto"
            See <see cref="T:Aspose.BarCode.Code128CodeSet"/>.
            </summary>
            <example>
             [C#]
             Aspose.BarCode.BarCodeBuilder b = new BarCodeBuilder();
            b.SymbologyType = Aspose.BarCode.SymbologyType.Code128;
            b.Code128CodeSet = Code128CodeSet.Auto;
            b.CodeText = "123456";
            
            [VB.NET]
            dim b as Aspose.BarCode.BarCodeBuilder
            b = new BarCodeBuilder()
            b.SymbologyType = Aspose.BarCode.SymbologyType.Code128
            b.Code128CodeSet = Code128CodeSet.Auto;
            b.CodeText = "123456"
            </example>
        </member>
        <member name="P:Aspose.BarCode.BarCodeBuilder.ITF14BorderType">
            <summary>
            Border type of ITF14 barcode, quiet zone will be determined by margin settings.
            </summary>
            See <see cref="P:Aspose.BarCode.BarCodeBuilder.Margins"/>.
        </member>
        <member name="P:Aspose.BarCode.BarCodeBuilder.xDimension">
            <summary>
            x-dimension, smallest width unit of BarCode's bars or spaces.
            increase this will increase the whole barcode image's width if AutoSize is true
            Default Graphics Unit: Millimeter 
            See <see cref="P:Aspose.BarCode.BarCodeBuilder.yDimension"/>.
            See <see cref="P:Aspose.BarCode.BarCodeBuilder.AutoSize"/>.
            See <see cref="P:Aspose.BarCode.BarCodeBuilder.BarHeight"/>.
            </summary>
        </member>
        <member name="P:Aspose.BarCode.BarCodeBuilder.yDimension">
            <summary>
            y-dimension, smallest height unit of 2D BarCode's modules. 
            Some square symbols (such as DataMatrix) may ignore this and
            use x-dimension for both width unit and height unit
            
            In 2D barcode, y-dimension * rows determines BarCode's height
            In 1D barcode, BarHeight determines BarCode's height.
            Default Graphics Unit: Millimeter 
            See <see cref="P:Aspose.BarCode.BarCodeBuilder.xDimension"/>.
            See <see cref="P:Aspose.BarCode.BarCodeBuilder.BarHeight"/>.
            </summary>
        </member>
        <member name="P:Aspose.BarCode.BarCodeBuilder.BarHeight">
            <summary>
            height of 1D barcodes' bars.
            In 2D barcode, y-dimension * rows determines BarCode's height
            In 1D barcode, BarHeight determines BarCode's height.
            Default Graphics Unit: Millimeter 
            See <see cref="P:Aspose.BarCode.BarCodeBuilder.yDimension"/>.
            </summary>
        </member>
        <member name="P:Aspose.BarCode.BarCodeBuilder.ForeColor">
            <summary>
            Foreground color of the barcode image, that is, 
            Bar's color of 1D barcode, Module's color of 2D barcode
            See <see cref="T:System.Drawing.Color"/>.
            </summary>
        </member>
        <member name="P:Aspose.BarCode.BarCodeBuilder.BackColor">
            <summary>
            Background color of the barcode image
            See <see cref="T:System.Drawing.Color"/>.
            </summary>
        </member>
        <member name="P:Aspose.BarCode.BarCodeBuilder.EnableChecksum">
            <summary>
            Enable check sum. Appliable symbology: Code11, Code39Extended, Code39Standard, 
            Code93Extended, Code93Standard, Interleaved2of5, Standard2of5
            The following SymbologyType always include checksum:
            EAN13, EAN8, BooklandEAN
            See <see cref="T:Aspose.BarCode.Symbology"/>.
            </summary>
        </member>
        <member name="P:Aspose.BarCode.BarCodeBuilder.AspectRatio">
            <summary>
            2D BarCode's module's height/width ratio (yDimension/xDimension). 
            calculated based on xDimension set to 0 means 
            not using this feature.
            See <see cref="P:Aspose.BarCode.BarCodeBuilder.xDimension"/>.
            See <see cref="P:Aspose.BarCode.BarCodeBuilder.yDimension"/>.
            </summary>
            <remarks>
            Some 2D BarCodes are square shaped, then AspectRatio is not appliable
            </remarks>
        </member>
        <member name="P:Aspose.BarCode.BarCodeBuilder.Columns">
            <summary>
            2D BarCode's columns, if setting is illegal then columns will be calculated automatically
            appliable SymbologyType: Pdf417
            </summary>
        </member>
        <member name="P:Aspose.BarCode.BarCodeBuilder.Rows">
            <summary>
            2D BarCode's rows, if setting is illegal then rows will be calculated automatically. 
            appliable SymbologyType: Pdf417
            </summary>
        </member>
        <member name="P:Aspose.BarCode.BarCodeBuilder.DataMatrixEncodeMode">
            <summary>
            Encode mode of Datamatrix barcode, default to Auto
            see <see cref="T:Aspose.BarCode.DataMatrixEncodeMode">DataMatrixEncodeMode </see>.
            </summary>
        </member>
        <member name="P:Aspose.BarCode.BarCodeBuilder.Pdf417CompactionMode">
            <summary>
            Pdf417 symbology type of BarCode's compaction mode, default compaction mode is <bode>Auto</bode>
            See <see cref="T:Aspose.BarCode.Pdf417CompactionMode"/>.
            </summary>
        </member>
        <member name="P:Aspose.BarCode.BarCodeBuilder.Pdf417Truncate">
            <summary>
            whether pdf417 symbology type of BarCode is truncated (to reduce space)
            </summary>
        </member>
        <member name="P:Aspose.BarCode.BarCodeBuilder.Pdf417ErrorLevel">
            <summary>
            Gets or sets Pdf417 symbology type of BarCode's error coccrection level
            ranging from level0 to level8, level0 means no error correction info, 
            level8 means best error correction which means a larger picture
            </summary>
        </member>
        <member name="P:Aspose.BarCode.BarCodeBuilder.WideNarrowRatio">
            <summary>
            Wide bars to Narrow bars ratio for some 1D BarCode. 
            Default WideNarrowRatio:3, that is, wide bars are 3 times as wide as narrow bars
            Appliable symbology: Code39Extended, Code39Standard, Standard2of5, Interleaved2of5
            See <see cref="T:Aspose.BarCode.Symbology"/>.
            </summary>
        </member>
        <member name="P:Aspose.BarCode.BarCodeBuilder.Margins">
            <summary>
            Margin area around the core BarCode image
            If AutoSize is false, then Width and Height is fixed, thus Margins setting will be ignored
            Default Graphics Unit: Millimeter 
            </summary>
        </member>
        <member name="P:Aspose.BarCode.BarCodeBuilder.SupplementData">
            <summary>
            Supplement data following BarCodes of symbology UPCA, UPCE, EAN13, EAN8, BooklandEAN, Interleaved2of5 or Standard2of5.
            See <see cref="T:Aspose.BarCode.Symbology"/>.
            See <see cref="P:Aspose.BarCode.BarCodeBuilder.SupplementSpace"/>.
            </summary>
            <example>
            <code>
            [C#]
            Aspose.BarCode.BarCodeBuilder b;
            b = new BarCodeBuilder();
            b.SymbologyType = SymbologyType.UPCE;
            b.CodeText = "123456";
            b.SupplementData = "11";
            b.BarCodeImage.Save("tmp.bmp");
            
            [VB.NET]
            Dim b as Aspose.BarCode.BarCodeBuilder
            b = new BarCodeBuilder()
            b.SymbologyType = SymbologyType.UPCE
            b.SupplementData = "11"
            b.BarCodeImage.Save("tmp.bmp");
            </code>
            </example>
        </member>
        <member name="P:Aspose.BarCode.BarCodeBuilder.SupplementSpace">
            <summary>
            Space between main the BarCode and supplement BarCode, default Graphics Unit: millimeter
            See <see cref="T:System.Drawing.GraphicsUnit"/>.
            See <see cref="P:Aspose.BarCode.BarCodeBuilder.SupplementData"/>.
            </summary>
        </member>
        <member name="P:Aspose.BarCode.BarCodeBuilder.PrinterName">
            <summary>
            Choose printer, if not specified, Print() method will choose the first available printer
            </summary>
        </member>
        <member name="P:Aspose.BarCode.BarCodeBuilder.ImageQuality">
            <summary>
            Graphics quality mode, when RotationAngleF not equal to 0, 90, 180 or 270, do set quality mode to anti-alias. Type: Aspose.BarCode.ImageQualityMode
            See <see cref="T:Aspose.BarCode.ImageQualityMode"/>.
            </summary>
        </member>
        <member name="P:Aspose.BarCode.BarCodeBuilder.PostnetShortBarHeight">
            <summary>
            Short bar's height of Postnet barcode, it has to be between 1 millimeter and 1.5 milimeter (0.04 inch and 0.06 inch). To set up tall bar's height, see BarHeight, which has to be between 8.28 milimeter and 9.72 milimeter (0.115 inch and 0.135 inch)
            see changing See <see cref="T:System.Drawing.GraphicsUnit">GraphicsUnit</see>.
            see setting tall bar's height: See <see cref="P:Aspose.BarCode.BarCodeBuilder.BarHeight">BarHeight</see>.
            </summary>
        </member>
        <member name="P:Aspose.BarCode.BarCodeBuilder.PlanetShortBarHeight">
            <summary>
            Short bar's height of Planet barcode, it has to be between 1 millimeter and 1.5 milimeters.
            see changing See <see cref="T:System.Drawing.GraphicsUnit">GraphicsUnit</see>.
            see setting tall bar's height: See <see cref="P:Aspose.BarCode.BarCodeBuilder.BarHeight">BarHeight</see>.
            </summary>
        </member>
        <member name="P:Aspose.BarCode.BarCodeBuilder.QRErrorLevel">
            <summary>
             Level of Reed-Solomon error correction for QR barcode. From low to high: LevelL, LevelM, LevelQ, LevelH. see <see cref="T:Aspose.BarCode.QRErrorLevel">QRErrorLevel</see>.
            </summary>
        </member>
        <member name="P:Aspose.BarCode.BarCodeBuilder.AztectErrorLevel">
            <summary>
            Level of error corection of Aztect types of barcode. value should between 10 to 95
            </summary>
        </member>
        <member name="P:Aspose.BarCode.BarCodeBuilder.ImageUnit">
            <summary>
            Obsoleted, Use GraphicsUnit instead
            </summary>
        </member>
        <member name="M:Aspose.BarCode.PropertySpec.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the PropertySpec class.
            </summary>
            <param name="name">The name of the property displayed in the property grid.</param>
            <param name="type">The fully qualified name of the type of the property.</param>
        </member>
        <member name="M:Aspose.BarCode.PropertySpec.#ctor(System.String,System.Type)">
            <summary>
            Initializes a new instance of the PropertySpec class.
            </summary>
            <param name="name">The name of the property displayed in the property grid.</param>
            <param name="type">A Type that represents the type of the property.</param>
        </member>
        <member name="M:Aspose.BarCode.PropertySpec.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the PropertySpec class.
            </summary>
            <param name="name">The name of the property displayed in the property grid.</param>
            <param name="type">The fully qualified name of the type of the property.</param>
            <param name="category">The category under which the property is displayed in the
            property grid.</param>
        </member>
        <member name="M:Aspose.BarCode.PropertySpec.#ctor(System.String,System.Type,System.String)">
            <summary>
            Initializes a new instance of the PropertySpec class.
            </summary>
            <param name="name">The name of the property displayed in the property grid.</param>
            <param name="type">A Type that represents the type of the property.</param>
            <param name="category"></param>
        </member>
        <member name="M:Aspose.BarCode.PropertySpec.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the PropertySpec class.
            </summary>
            <param name="name">The name of the property displayed in the property grid.</param>
            <param name="type">The fully qualified name of the type of the property.</param>
            <param name="category">The category under which the property is displayed in the
            property grid.</param>
            <param name="description">A string that is displayed in the help area of the
            property grid.</param>
        </member>
        <member name="M:Aspose.BarCode.PropertySpec.#ctor(System.String,System.Type,System.String,System.String)">
            <summary>
            Initializes a new instance of the PropertySpec class.
            </summary>
            <param name="name">The name of the property displayed in the property grid.</param>
            <param name="type">A Type that represents the type of the property.</param>
            <param name="category">The category under which the property is displayed in the
            property grid.</param>
            <param name="description">A string that is displayed in the help area of the
            property grid.</param>
        </member>
        <member name="M:Aspose.BarCode.PropertySpec.#ctor(System.String,System.String,System.String,System.String,System.Object)">
            <summary>
            Initializes a new instance of the PropertySpec class.
            </summary>
            <param name="name">The name of the property displayed in the property grid.</param>
            <param name="type">The fully qualified name of the type of the property.</param>
            <param name="category">The category under which the property is displayed in the
            property grid.</param>
            <param name="description">A string that is displayed in the help area of the
            property grid.</param>
            <param name="defaultValue">The default value of the property, or null if there is
            no default value.</param>
        </member>
        <member name="M:Aspose.BarCode.PropertySpec.#ctor(System.String,System.Type,System.String,System.String,System.Object)">
            <summary>
            Initializes a new instance of the PropertySpec class.
            </summary>
            <param name="name">The name of the property displayed in the property grid.</param>
            <param name="type">A Type that represents the type of the property.</param>
            <param name="category">The category under which the property is displayed in the
            property grid.</param>
            <param name="description">A string that is displayed in the help area of the
            property grid.</param>
            <param name="defaultValue">The default value of the property, or null if there is
            no default value.</param>
        </member>
        <member name="M:Aspose.BarCode.PropertySpec.#ctor(System.String,System.String,System.String,System.String,System.Object,System.String,System.String)">
            <summary>
            Initializes a new instance of the PropertySpec class.
            </summary>
            <param name="name">The name of the property displayed in the property grid.</param>
            <param name="type">The fully qualified name of the type of the property.</param>
            <param name="category">The category under which the property is displayed in the
            property grid.</param>
            <param name="description">A string that is displayed in the help area of the
            property grid.</param>
            <param name="defaultValue">The default value of the property, or null if there is
            no default value.</param>
            <param name="editor">The fully qualified name of the type of the editor for this
            property.  This type must derive from UITypeEditor.</param>
            <param name="typeConverter">The fully qualified name of the type of the type
            converter for this property.  This type must derive from TypeConverter.</param>
        </member>
        <member name="M:Aspose.BarCode.PropertySpec.#ctor(System.String,System.Type,System.String,System.String,System.Object,System.String,System.String)">
            <summary>
            Initializes a new instance of the PropertySpec class.
            </summary>
            <param name="name">The name of the property displayed in the property grid.</param>
            <param name="type">A Type that represents the type of the property.</param>
            <param name="category">The category under which the property is displayed in the
            property grid.</param>
            <param name="description">A string that is displayed in the help area of the
            property grid.</param>
            <param name="defaultValue">The default value of the property, or null if there is
            no default value.</param>
            <param name="editor">The fully qualified name of the type of the editor for this
            property.  This type must derive from UITypeEditor.</param>
            <param name="typeConverter">The fully qualified name of the type of the type
            converter for this property.  This type must derive from TypeConverter.</param>
        </member>
        <member name="M:Aspose.BarCode.PropertySpec.#ctor(System.String,System.String,System.String,System.String,System.Object,System.Type,System.String)">
            <summary>
            Initializes a new instance of the PropertySpec class.
            </summary>
            <param name="name">The name of the property displayed in the property grid.</param>
            <param name="type">The fully qualified name of the type of the property.</param>
            <param name="category">The category under which the property is displayed in the
            property grid.</param>
            <param name="description">A string that is displayed in the help area of the
            property grid.</param>
            <param name="defaultValue">The default value of the property, or null if there is
            no default value.</param>
            <param name="editor">The Type that represents the type of the editor for this
            property.  This type must derive from UITypeEditor.</param>
            <param name="typeConverter">The fully qualified name of the type of the type
            converter for this property.  This type must derive from TypeConverter.</param>
        </member>
        <member name="M:Aspose.BarCode.PropertySpec.#ctor(System.String,System.Type,System.String,System.String,System.Object,System.Type,System.String)">
            <summary>
            Initializes a new instance of the PropertySpec class.
            </summary>
            <param name="name">The name of the property displayed in the property grid.</param>
            <param name="type">A Type that represents the type of the property.</param>
            <param name="category">The category under which the property is displayed in the
            property grid.</param>
            <param name="description">A string that is displayed in the help area of the
            property grid.</param>
            <param name="defaultValue">The default value of the property, or null if there is
            no default value.</param>
            <param name="editor">The Type that represents the type of the editor for this
            property.  This type must derive from UITypeEditor.</param>
            <param name="typeConverter">The fully qualified name of the type of the type
            converter for this property.  This type must derive from TypeConverter.</param>
        </member>
        <member name="M:Aspose.BarCode.PropertySpec.#ctor(System.String,System.String,System.String,System.String,System.Object,System.String,System.Type)">
            <summary>
            Initializes a new instance of the PropertySpec class.
            </summary>
            <param name="name">The name of the property displayed in the property grid.</param>
            <param name="type">The fully qualified name of the type of the property.</param>
            <param name="category">The category under which the property is displayed in the
            property grid.</param>
            <param name="description">A string that is displayed in the help area of the
            property grid.</param>
            <param name="defaultValue">The default value of the property, or null if there is
            no default value.</param>
            <param name="editor">The fully qualified name of the type of the editor for this
            property.  This type must derive from UITypeEditor.</param>
            <param name="typeConverter">The Type that represents the type of the type
            converter for this property.  This type must derive from TypeConverter.</param>
        </member>
        <member name="M:Aspose.BarCode.PropertySpec.#ctor(System.String,System.Type,System.String,System.String,System.Object,System.String,System.Type)">
            <summary>
            Initializes a new instance of the PropertySpec class.
            </summary>
            <param name="name">The name of the property displayed in the property grid.</param>
            <param name="type">A Type that represents the type of the property.</param>
            <param name="category">The category under which the property is displayed in the
            property grid.</param>
            <param name="description">A string that is displayed in the help area of the
            property grid.</param>
            <param name="defaultValue">The default value of the property, or null if there is
            no default value.</param>
            <param name="editor">The fully qualified name of the type of the editor for this
            property.  This type must derive from UITypeEditor.</param>
            <param name="typeConverter">The Type that represents the type of the type
            converter for this property.  This type must derive from TypeConverter.</param>
        </member>
        <member name="M:Aspose.BarCode.PropertySpec.#ctor(System.String,System.String,System.String,System.String,System.Object,System.Type,System.Type)">
            <summary>
            Initializes a new instance of the PropertySpec class.
            </summary>
            <param name="name">The name of the property displayed in the property grid.</param>
            <param name="type">The fully qualified name of the type of the property.</param>
            <param name="category">The category under which the property is displayed in the
            property grid.</param>
            <param name="description">A string that is displayed in the help area of the
            property grid.</param>
            <param name="defaultValue">The default value of the property, or null if there is
            no default value.</param>
            <param name="editor">The Type that represents the type of the editor for this
            property.  This type must derive from UITypeEditor.</param>
            <param name="typeConverter">The Type that represents the type of the type
            converter for this property.  This type must derive from TypeConverter.</param>
        </member>
        <member name="M:Aspose.BarCode.PropertySpec.#ctor(System.String,System.Type,System.String,System.String,System.Object,System.Type,System.Type)">
            <summary>
            Initializes a new instance of the PropertySpec class.
            </summary>
            <param name="name">The name of the property displayed in the property grid.</param>
            <param name="type">A Type that represents the type of the property.</param>
            <param name="category">The category under which the property is displayed in the
            property grid.</param>
            <param name="description">A string that is displayed in the help area of the
            property grid.</param>
            <param name="defaultValue">The default value of the property, or null if there is
            no default value.</param>
            <param name="editor">The Type that represents the type of the editor for this
            property.  This type must derive from UITypeEditor.</param>
            <param name="typeConverter">The Type that represents the type of the type
            converter for this property.  This type must derive from TypeConverter.</param>
        </member>
        <member name="P:Aspose.BarCode.PropertySpec.Attributes">
            <summary>
            Gets or sets a collection of additional Attributes for this property.  This can
            be used to specify attributes beyond those supported intrinsically by the
            PropertySpec class, such as ReadOnly and Browsable.
            </summary>
        </member>
        <member name="P:Aspose.BarCode.PropertySpec.Category">
            <summary>
            Gets or sets the category name of this property.
            </summary>
        </member>
        <member name="P:Aspose.BarCode.PropertySpec.ConverterTypeName">
            <summary>
            Gets or sets the fully qualified name of the type converter
            type for this property.
            </summary>
        </member>
        <member name="P:Aspose.BarCode.PropertySpec.DefaultValue">
            <summary>
            Gets or sets the default value of this property.
            </summary>
        </member>
        <member name="P:Aspose.BarCode.PropertySpec.Description">
            <summary>
            Gets or sets the help text description of this property.
            </summary>
        </member>
        <member name="P:Aspose.BarCode.PropertySpec.EditorTypeName">
            <summary>
            Gets or sets the fully qualified name of the editor type for
            this property.
            </summary>
        </member>
        <member name="P:Aspose.BarCode.PropertySpec.Name">
            <summary>
            Gets or sets the name of this property.
            </summary>
        </member>
        <member name="P:Aspose.BarCode.PropertySpec.TypeName">
            <summary>
            Gets or sets the fully qualfied name of the type of this
            property.
            </summary>
        </member>
        <member name="T:Aspose.BarCode.BorderDashStyle">
            <summary>
            Specifies the style of dashed border lines.
            </summary>
        </member>
        <member name="F:Aspose.BarCode.BorderDashStyle.Solid">
            <summary>
            Specifies a solid line.
            </summary>
        </member>
        <member name="F:Aspose.BarCode.BorderDashStyle.Dash">
            <summary>
            Specifies a line consisting of dashes.
            </summary>
        </member>
        <member name="F:Aspose.BarCode.BorderDashStyle.Dot">
            <summary>
            Specifies a line consisting of dots.
            </summary>
        </member>
        <member name="F:Aspose.BarCode.BorderDashStyle.DashDot">
            <summary>
            Specifies a line consisting of a repeating pattern of dash-dot.
            </summary>
        </member>
        <member name="F:Aspose.BarCode.BorderDashStyle.DashDotDot">
            <summary>
            Specifies a line consisting of a repeating pattern of dash-dot-dot.
            </summary>
        </member>
        <member name="T:Aspose.BarCode.Caption">
            <summary>
            The text caption shown in the barcode image. There are two captions: CaptionBelow and CaptionAbove
            </summary>
        </member>
        <member name="M:Aspose.BarCode.Caption.Copy">
            <summary>
            Get a new copy of the caption instance.
            </summary>
            <returns>The new copy of the instance.</returns>
        </member>
        <member name="M:Aspose.BarCode.Caption.#ctor">
            <summary>
            Initialize an instance of <see cref="T:Aspose.BarCode.Caption">caption</see> class with default vaule.
            </summary>
        </member>
        <member name="M:Aspose.BarCode.Caption.#ctor(System.String)">
            <summary>
            Initialize an instance of <see cref="T:Aspose.BarCode.Caption">caption</see> class with specified text. 
            </summary>
            <param name="text">The text content of the caption object</param>
        </member>
        <member name="M:Aspose.BarCode.Caption.#ctor(System.String,System.Boolean,System.Drawing.StringAlignment,System.Single,System.Drawing.Color,System.Drawing.Font)">
            <summary>
            Initialize an instance of <see cref="T:Aspose.BarCode.Caption">caption</see> class.
            </summary>
            <param name="text">The context of the caption.</param>
            <param name="visible">Indicates whether the caption is visible.</param>
            <param name="alignment">The alignment of the text in the caption.</param>
            <param name="space">The amount of space in the caption.</param>
            <param name="color">The forecolor of the text in the caption.</param>
            <param name="font">The font of the text in the caption.</param>		
        </member>
        <member name="M:Aspose.BarCode.Caption.Dispose">
            <summary>
            Dispose the Caption instance
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Caption.Visible">
            <summary>
            Gets or sets a value indicates whether the <see cref="T:Aspose.BarCode.Caption">caption</see> is visible. 
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Caption.ForeColor">
            <summary>
            Gets or sets the <see cref="T:System.Drawing.Color">forecolor</see> of the <see cref="T:Aspose.BarCode.Caption">caption</see>.
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Caption.Font">
            <summary>
            Gets or sets the <see cref="T:System.Drawing.Font">font</see> of the <see cref="T:Aspose.BarCode.Caption">caption</see>.
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Caption.Space">
            <summary>
            Gets or sets the space between the 
            <see cref="T:Aspose.BarCode.Caption">caption</see> and the barcode,
            and the space between border and the caption
            </summary>
            <remarks>
            The measure unit of the <b>space</b> for the caption is indicated by the <see cref="T:System.Drawing.GraphicsUnit">GraphicsUnit</see>.
            </remarks>
            <exception cref="T:System.ArgumentException">	
            <p>The <b>Space</b> parameter value is less than 0.</p>
            </exception>
        </member>
        <member name="P:Aspose.BarCode.Caption.TextAlign">
            <summary>
            Gets or sets the text <see cref="T:System.Drawing.StringAlignment">alignment</see> of the <see cref="T:Aspose.BarCode.Caption">caption</see>.
            e.g. when the text is writing from left to right, StringAlignment.Near means the Caption will be aligned to the left
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Caption.Text">
            <summary>
            Gets or sets the content of the <see cref="T:Aspose.BarCode.Caption">caption</see>.
            </summary>
        </member>
        <member name="T:Aspose.BarCode.CaptionConverter">
            <summary>
            Provides a <see cref="T:Aspose.BarCode.CaptionConverter">CaptionConverter</see> for <see cref="T:Aspose.BarCode.Caption">Caption</see>.
            </summary>
            <remarks>
            <p><b>CaptionConverter</b> provides methods that can convert a string to a <see cref="T:Aspose.BarCode.Caption">Caption</see>.</p>
            </remarks>
        </member>
        <member name="M:Aspose.BarCode.CaptionConverter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.BarCode.CaptionConverter">CaptionConverter</see> class.		
            </summary>
        </member>
        <member name="M:Aspose.BarCode.CaptionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object to the given destination type using the context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext">ITypeDescriptorContext</see> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type">Type</see> that represents the type to which you want to convert. </param>
            <returns><b>true</b> if an object can perform the conversion; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Aspose.BarCode.CaptionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of the specified source type to the native type of the converter.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext">ITypeDescriptorContext</see> that provides a format context.</param>
            <param name="sourceType">A <see cref="T:System.Type">Type</see> that represents the type from which you want to convert. </param>
            <returns><b>true</b> if an object can perform the conversion; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Aspose.BarCode.CaptionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the specified object to the converter's native type.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext">ITypeDescriptorContext</see> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo">CultureInfo</see> that provides the language to convert to. </param>
            <param name="value">The <see cref="T:System.Object">Object</see> to convert. </param>
            <returns>An <see cref="T:System.Object">Object</see> that represents the converted value.</returns>
        </member>
        <member name="M:Aspose.BarCode.CaptionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified destination type using the specified context and arguments.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext">ITypeDescriptorContext</see> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo">CultureInfo</see> that provides the language to convert to. </param>
            <param name="value">The <see cref="T:System.Object">Object</see> to convert. </param>
            <param name="destinationType">The <see cref="T:System.Type">Type</see> to which to convert the value. </param>
            <returns>An <see cref="T:System.Object">Object</see>	that represents the converted value.</returns>
        </member>
        <member name="M:Aspose.BarCode.CaptionConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>
            Creates an instance of <see cref="T:Aspose.BarCode.Caption">Caption</see>.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext">ITypeDescriptorContext</see> that provides a format context.</param>
            <param name="propertyValues">An <see cref="T:System.Collections.IDictionary">IDictionary</see> of new property values. </param>
            <returns>An Object representing the specified <see cref="T:System.Collections.IDictionary">IDictionary</see>; or a <b>null</b> reference (<b>Nothing</b> in Visual Basic) if the object cannot be created.</returns>
        </member>
        <member name="M:Aspose.BarCode.CaptionConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns whether changing a value on this object requires a call to <see cref="M:Aspose.BarCode.CaptionConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">CreateInstance</see> to create a new value.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext">ITypeDescriptorContext</see> that provides a format context.</param>
            <returns><b>true</b> if changing a property on this object requires a call to <see cref="M:Aspose.BarCode.CaptionConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">CreateInstance</see> to create a new value; otherwise, <b>false</b>. This method always returns true.</returns>
        </member>
        <member name="M:Aspose.BarCode.CaptionConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
            Returns a collection of properties for the type of array specified by the value parameter, using the specified context and attributes.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext">ITypeDescriptorContext</see> that provides a format context.</param>
            <param name="value">An <see cref="T:System.Object">Object</see> that specifies the type of array for which to get properties.</param>
            <param name="attributes">An array of type Attribute that is used as a filter. </param>
            <returns>A <see cref="T:System.ComponentModel.PropertyDescriptorCollection">PropertyDescriptorCollection</see> with the properties that are exposed for this data type, or a null reference (Nothing in Visual Basic) if there are no properties.</returns>
        </member>
        <member name="M:Aspose.BarCode.CaptionConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns whether this object supports properties.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext">ITypeDescriptorContext</see> that provides a format context.</param>
            <returns><b>true</b> if <see cref="M:Aspose.BarCode.CaptionConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">GetProperties</see> should be called to find the properties of this object; otherwise, <b>false</b>.</returns>
        </member>
        <member name="T:Aspose.BarCode.CodabarSymbol">
            <summary>
            Specifies the start or stop symbol of the Codabar barcode specification.
            </summary>
        </member>
        <member name="F:Aspose.BarCode.CodabarSymbol.A">
            <summary>
            Specifies character A as the start or stop symbol of the Codabar barcode specification.
            </summary>
        </member>
        <member name="F:Aspose.BarCode.CodabarSymbol.B">
            <summary>
            Specifies character B as the start or stop symbol of the Codabar barcode specification.
            </summary>
        </member>
        <member name="F:Aspose.BarCode.CodabarSymbol.C">
            <summary>
            Specifies character C as the start or stop symbol of the Codabar barcode specification.
            </summary>
        </member>
        <member name="F:Aspose.BarCode.CodabarSymbol.D">
            <summary>
            Specifies character D as the start or stop symbol of the Codabar barcode specification.
            </summary>
        </member>
        <member name="T:Aspose.BarCode.Code128CodeSet">
            <summary>
            Specifies the code set of CODE128 barcode specification used to encode the data. 
            </summary>
        </member>
        <member name="F:Aspose.BarCode.Code128CodeSet.A">
            <summary>
            Specifies code set <b>A</b> should be used to encode the data in the CODE128 specification.
            </summary>
        </member>
        <member name="F:Aspose.BarCode.Code128CodeSet.B">
            <summary>
            Specifies code set <b>B</b> should be used to encode the data in the CODE128 specification.
            </summary>
        </member>
        <member name="F:Aspose.BarCode.Code128CodeSet.C">
            <summary>
            Specifies code set <b>C</b> should be used to encode the data in the CODE128 specification.
            </summary>
        </member>
        <member name="F:Aspose.BarCode.Code128CodeSet.Auto">
            <summary>
            Specifies using the embeded optimized arithmetic to encode the data, which will use the shortest encoding result.
            </summary>
        </member>
        <member name="T:Aspose.BarCode.CodeLocation">
            <summary>
            Specifies the location of the code text shown in the image.
            </summary>
        </member>
        <member name="F:Aspose.BarCode.CodeLocation.Above">
            <summary>
            Specifies that the code text is shown on the top of the bar code.
            </summary>
        </member>
        <member name="F:Aspose.BarCode.CodeLocation.Below">
            <summary>
            Specifies that the code text is shown on the bottom of the bar code.
            </summary>
        </member>
        <member name="F:Aspose.BarCode.CodeLocation.None">
            <summary>
            Specifies that the code text is hidden. 
            </summary>
        </member>
        <member name="T:Aspose.BarCode.DataMatrixEncodeMode">
            <summary>
            DataMatrix encoder's encoding mode, default to Auto
            </summary>
        </member>
        <member name="F:Aspose.BarCode.DataMatrixEncodeMode.Auto">
            <summary>
            Automatically pick up the best encode mode for datamatrix encoding
            </summary>
        </member>
        <member name="F:Aspose.BarCode.DataMatrixEncodeMode.ASCII">
            <summary>
            Encodes one alphanumeric or two numeric characters per byte
            </summary>
        </member>
        <member name="F:Aspose.BarCode.DataMatrixEncodeMode.Full">
            <summary>
            Encode 8 bit values
            </summary>
        </member>
        <member name="T:Aspose.BarCode.ImageQualityMode">
            <summary>
            Specifies the quality of the created barcode image. Only appliable to Jpeg format, such as save as .jpg files
            </summary>
        </member>
        <member name="F:Aspose.BarCode.ImageQualityMode.Default">
            <summary>
            Specifies No anti-aliasing image rendering.
            </summary>
        </member>
        <member name="F:Aspose.BarCode.ImageQualityMode.AntiAlias">
            <summary>
            Specifeis Anti-aliased image rendering. Much better quality due to antialiasing, but at a higher performance cost.
            </summary>
        </member>
        <member name="T:Aspose.BarCode.ITF14BorderType">
            <summary>
            ITF14 barcode's border type
            </summary>
        </member>
        <member name="F:Aspose.BarCode.ITF14BorderType.None">
            <summary>
            No border enclosing the barcode
            </summary>
        </member>
        <member name="F:Aspose.BarCode.ITF14BorderType.Frame">
            <summary>
            Frame enclosing the barcode
            </summary>
        </member>
        <member name="F:Aspose.BarCode.ITF14BorderType.Bar">
            <summary>
            Tow horizontal bars enclosing the barcode
            </summary>
        </member>
        <member name="T:Aspose.BarCode.MarginsF">
            <summary>
            Specifies the margins of a barcode image.
            </summary>
            <remarks>
            <p>This class is used to manipulate margins in barcode image.</p>
            <p><b><I>Note</I></b>: The actual amount of the margins are determined by the specified mesure <see cref="T:System.Drawing.GraphicsUnit">unit</see> of the barcode image.</p>
            <p><see cref="T:Aspose.BarCode.MarginsFConverter">MarginsFConverter</see> is the type descriptor for this class.</p>
            <p><see cref="P:Aspose.BarCode.MarginsF.Left">Left</see>, <see cref="P:Aspose.BarCode.MarginsF.Right">Right</see>, <see cref="P:Aspose.BarCode.MarginsF.Top">Top</see>, and <see cref="P:Aspose.BarCode.MarginsF.Bottom">Bottom</see> are properties that define the margins.</p>
            <p><see cref="M:Aspose.BarCode.MarginsF.Equals(System.Object)">Equals</see> determines if another object is equal to a <b>MarginsF</b> object.</p>
            </remarks>
        </member>
        <member name="M:Aspose.BarCode.MarginsF.#ctor">
            <summary>
            Initialize a new instance of <see cref="T:Aspose.BarCode.MarginsF">MarginsF</see> class with 0 margins.
            </summary>
        </member>
        <member name="M:Aspose.BarCode.MarginsF.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initialize a new instance of <see cref="T:Aspose.BarCode.MarginsF">MarginsF</see> class with specified left, right, top, bottom marigns. 
            </summary>
            <param name="left">The Left marign.</param>
            <param name="right">The right marign.</param>
            <param name="top">The top marign.</param>
            <param name="bottom">The bottom marign.</param>
            <exception cref="T:System.ArgumentException">
            <p>The left parameter value is less than 0.</p>
            <p>-or-</p>
            <p>The right parameter value is less than 0.</p>
            <p>-or-</p>
            <p>The top parameter value is less than 0.</p>
            <p>-or-</p>
            <p>The bottom parameter value is less than 0.</p>
            </exception>
        </member>
        <member name="M:Aspose.BarCode.MarginsF.Equals(System.Object)">
            <summary>
            Determines whether two <see cref="T:Aspose.BarCode.MarginsF">MarginsF</see> instances are equal.
            </summary>
            <param name="obj">The <see cref="T:Aspose.BarCode.MarginsF">MarginsF</see> instance on the left</param>
            <returns><b>true</b> if the left <see cref="T:Aspose.BarCode.MarginsF">MarginsF</see> instances is equal to the right one; otherwise, <b>false</b>.</returns>		
        </member>
        <member name="M:Aspose.BarCode.MarginsF.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            </summary>
            <returns>A hash code for the current Object.</returns>
        </member>
        <member name="M:Aspose.BarCode.MarginsF.ToString">
            <summary>
            Returns a String that represents the current <see cref="T:Aspose.BarCode.MarginsF">MarginsF</see> instance.
            </summary>
            <returns>A <see cref="T:System.String">String</see> that represents the current Object.</returns>
        </member>
        <member name="P:Aspose.BarCode.MarginsF.Bottom">
            <summary>
            Gets or sets the <b>bottom</b> marign.
            </summary>
            <exception cref="T:System.ArgumentException">	
            <p>The <b>bottom</b> parameter value is less than 0.</p>
            </exception>
        </member>
        <member name="P:Aspose.BarCode.MarginsF.Left">
            <summary>
            Gets or sets the <b>left</b> margin.
            </summary>
            <exception cref="T:System.ArgumentException">	
            <p>The <b>Left</b> parameter value is less than 0.</p>
            </exception>
        </member>
        <member name="P:Aspose.BarCode.MarginsF.Right">
            <summary>
            Gets or sets the <b>right</b> margin.
            </summary>
            <exception cref="T:System.ArgumentException">	
            <p>The <b>Right</b> parameter value is less than 0.</p>
            </exception>
        </member>
        <member name="P:Aspose.BarCode.MarginsF.Top">
            <summary>
            Gets or sets the <b>top</b> marign.
            </summary>
            <exception cref="T:System.ArgumentException">	
            <p>The <b>Top</b> parameter value is less than 0.</p>
            </exception>
        </member>
        <member name="T:Aspose.BarCode.MarginsFConverter">
            <summary>
            Provides a <see cref="T:Aspose.BarCode.MarginsFConverter">MarginsFConverter</see> for <see cref="T:Aspose.BarCode.MarginsF">MarginsF</see>.
            </summary>
            <remarks>
            <p><b>MarginsFConverter</b> provides methods that can convert a string to a <see cref="T:Aspose.BarCode.MarginsF">MarginsF</see>.</p>
            </remarks>
        </member>
        <member name="M:Aspose.BarCode.MarginsFConverter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.BarCode.MarginsFConverter">MarginsFConverter</see> class.		
            </summary>
        </member>
        <member name="M:Aspose.BarCode.MarginsFConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of the specified source type to the native type of the converter.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext">ITypeDescriptorContext</see> that provides a format context.</param>
            <param name="sourceType">A <see cref="T:System.Type">Type</see> that represents the type from which you want to convert. </param>
            <returns><b>true</b> if an object can perform the conversion; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Aspose.BarCode.MarginsFConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object to the given destination type using the context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext">ITypeDescriptorContext</see> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type">Type</see> that represents the type to which you want to convert. </param>
            <returns><b>true</b> if an object can perform the conversion; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Aspose.BarCode.MarginsFConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the specified object to the converter's native type.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext">ITypeDescriptorContext</see> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo">CultureInfo</see> that provides the language to convert to. </param>
            <param name="value">The <see cref="T:System.Object">Object</see> to convert. </param>
            <returns>An <see cref="T:System.Object">Object</see> that represents the converted value.</returns>
        </member>
        <member name="M:Aspose.BarCode.MarginsFConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified destination type using the specified context and arguments.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext">ITypeDescriptorContext</see> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo">CultureInfo</see> that provides the language to convert to. </param>
            <param name="value">The <see cref="T:System.Object">Object</see> to convert. </param>
            <param name="destinationType">The <see cref="T:System.Type">Type</see> to which to convert the value. </param>
            <returns>An <see cref="T:System.Object">Object</see>	that represents the converted value.</returns>
        </member>
        <member name="M:Aspose.BarCode.MarginsFConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>
            Creates an instance of <see cref="T:Aspose.BarCode.MarginsF">MarginsF</see>.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext">ITypeDescriptorContext</see> that provides a format context.</param>
            <param name="propertyValues">An <see cref="T:System.Collections.IDictionary">IDictionary</see> of new property values. </param>
            <returns>An Object representing the specified <see cref="T:System.Collections.IDictionary">IDictionary</see>; or a <b>null</b> reference (<b>Nothing</b> in Visual Basic) if the object cannot be created.</returns>
        </member>
        <member name="M:Aspose.BarCode.MarginsFConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns whether changing a value on this object requires a call to <see cref="M:Aspose.BarCode.MarginsFConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">CreateInstance</see> to create a new value.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext">ITypeDescriptorContext</see> that provides a format context.</param>
            <returns><b>true</b> if changing a property on this object requires a call to <see cref="M:Aspose.BarCode.MarginsFConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">CreateInstance</see> to create a new value; otherwise, <b>false</b>. This method always returns true.</returns>
        </member>
        <member name="M:Aspose.BarCode.MarginsFConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
            Returns a collection of properties for the type of array specified by the value parameter, using the specified context and attributes.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext">ITypeDescriptorContext</see> that provides a format context.</param>
            <param name="value">An <see cref="T:System.Object">Object</see> that specifies the type of array for which to get properties.</param>
            <param name="attributes">An array of type Attribute that is used as a filter. </param>
            <returns>A <see cref="T:System.ComponentModel.PropertyDescriptorCollection">PropertyDescriptorCollection</see> with the properties that are exposed for this data type, or a null reference (Nothing in Visual Basic) if there are no properties.</returns>
        </member>
        <member name="T:Aspose.BarCode.Pdf417CompactionMode">
            <summary>
            Pdf417 barcode's compation mode
            </summary>
        </member>
        <member name="F:Aspose.BarCode.Pdf417CompactionMode.Auto">
            <summary>
            auto detect compation mode
            </summary>
        </member>
        <member name="F:Aspose.BarCode.Pdf417CompactionMode.Text">
            <summary>
            text compaction
            </summary>
        </member>
        <member name="F:Aspose.BarCode.Pdf417CompactionMode.Numeric">
            <summary>
            numeric compaction mode
            </summary>
        </member>
        <member name="F:Aspose.BarCode.Pdf417CompactionMode.Binary">
            <summary>
            binary compaction mode
            </summary>
        </member>
        <member name="T:Aspose.BarCode.Pdf417ErrorLevel">
            <summary>
            pdf417 barcode's error correction level, from level 0 to level 9, level 0 means no error correction, level 9 means best error correction
            </summary>
        </member>
        <member name="F:Aspose.BarCode.Pdf417ErrorLevel.Level0">
            <summary>
            level = 0
            </summary>
        </member>
        <member name="F:Aspose.BarCode.Pdf417ErrorLevel.Level1">
            <summary>
            level = 1
            </summary>
        </member>
        <member name="F:Aspose.BarCode.Pdf417ErrorLevel.Level2">
            <summary>
            level = 2
            </summary>
        </member>
        <member name="F:Aspose.BarCode.Pdf417ErrorLevel.Level3">
            <summary>
            level =3
            </summary>
        </member>
        <member name="F:Aspose.BarCode.Pdf417ErrorLevel.Level4">
            <summary>
            level =4
            </summary>
        </member>
        <member name="F:Aspose.BarCode.Pdf417ErrorLevel.Level5">
            <summary>
            level =5
            </summary>
        </member>
        <member name="F:Aspose.BarCode.Pdf417ErrorLevel.Level6">
            <summary>
            level = 6
            </summary>
        </member>
        <member name="F:Aspose.BarCode.Pdf417ErrorLevel.Level7">
            <summary>
            level = 7
            </summary>
        </member>
        <member name="F:Aspose.BarCode.Pdf417ErrorLevel.Level8">
            <summary>
            level = 8
            </summary>
        </member>
        <member name="F:Aspose.BarCode.Pdf417ErrorLevel.Level9">
            <summary>
            level = 9
            </summary>
        </member>
        <member name="T:Aspose.BarCode.QRErrorLevel">
            <summary>
            Level of Reed-Solomon error correction. From low to high: LevelL, LevelM, LevelQ, LevelH.
            </summary>
        </member>
        <member name="F:Aspose.BarCode.QRErrorLevel.LevelL">
            <summary>
            Allows recovery of 7% of the code text
            </summary>
        </member>
        <member name="F:Aspose.BarCode.QRErrorLevel.LevelM">
            <summary>
            Allows recovery of 15% of the code text
            </summary>
        </member>
        <member name="F:Aspose.BarCode.QRErrorLevel.LevelQ">
            <summary>
            Allows recovery of 25% of the code text
            </summary>
        </member>
        <member name="F:Aspose.BarCode.QRErrorLevel.LevelH">
            <summary>
            Allows recovery of 30% of the code text
            </summary>
        </member>
        <member name="T:Aspose.BarCode.Resolution">
            <summary>
            The resolution infomation of the barcode image
            </summary>	
        </member>
        <member name="M:Aspose.BarCode.Resolution.#ctor(System.Single,System.Single,Aspose.BarCode.ResolutionMode)">
            <summary>
            Initialize an instance of <see cref="T:Aspose.BarCode.Resolution">Resolution</see>.
            </summary>
            <param name="dpix">The horizontal resolution.</param>
            <param name="dpiy">The vertical resolution.</param>
            <param name="mode">The <see cref="T:Aspose.BarCode.ResolutionMode">ResolutionMode</see>.</param>
        </member>
        <member name="M:Aspose.BarCode.Resolution.ToString">
            <summary>
            Returns a String that represents the current <see cref="T:Aspose.BarCode.Resolution">Resolution</see> instance.
            </summary>
            <returns>A <see cref="T:System.String">String</see> that represents the current Object.</returns>
        </member>
        <member name="M:Aspose.BarCode.Resolution.Equals(System.Object)">
            <summary>
            Determines whether two <see cref="T:Aspose.BarCode.Resolution">Resolution</see> instances are equal.
            </summary>
            <param name="obj">The <see cref="T:Aspose.BarCode.Resolution">Resolution</see> instance on the left</param>
            <returns><b>true</b> if the left <see cref="T:Aspose.BarCode.Resolution">Resolution</see> instances is equal to the right one; otherwise, <b>false</b>.</returns>		
        </member>
        <member name="M:Aspose.BarCode.Resolution.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            </summary>
            <returns>A hash code for the current Object.</returns>
        </member>
        <member name="P:Aspose.BarCode.Resolution.DpiX">
            <summary>
            Gets or sets the horizontal resolution 
            </summary>
            <exception cref="T:System.ArgumentException">	
            <p>The <b>DpiX</b> parameter value is less than 0.</p>
            </exception>
        </member>
        <member name="P:Aspose.BarCode.Resolution.DpiY">
            <summary>
            Gets or sets the vertical resolution
            </summary>
            <exception cref="T:System.ArgumentException">	
            <p>The <b>DpiY</b> parameter value is less than 0.</p>
            </exception>
        </member>
        <member name="P:Aspose.BarCode.Resolution.Mode">
            <summary>
            Gets or sets the <see cref="T:Aspose.BarCode.ResolutionMode">mode</see> of the resolution
            </summary>
        </member>
        <member name="T:Aspose.BarCode.ResolutionConverter">
            <summary>
            Provides a <see cref="T:Aspose.BarCode.ResolutionConverter">ResolutionConverter</see> for <see cref="T:Aspose.BarCode.Resolution">Resolution</see>.
            </summary>
            <remarks>
            <p><b>ResolutionConverter</b> provides methods that can convert a string to a <see cref="T:Aspose.BarCode.Resolution">Resolution</see>.</p>
            </remarks>
        </member>
        <member name="M:Aspose.BarCode.ResolutionConverter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.BarCode.ResolutionConverter">ResolutionConverter</see> class.		
            </summary>
        </member>
        <member name="M:Aspose.BarCode.ResolutionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of the specified source type to the native type of the converter.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext">ITypeDescriptorContext</see> that provides a format context.</param>
            <param name="sourceType">A <see cref="T:System.Type">Type</see> that represents the type from which you want to convert. </param>
            <returns><b>true</b> if an object can perform the conversion; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Aspose.BarCode.ResolutionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object to the given destination type using the context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext">ITypeDescriptorContext</see> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type">Type</see> that represents the type to which you want to convert. </param>
            <returns><b>true</b> if an object can perform the conversion; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Aspose.BarCode.ResolutionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the specified object to the converter's native type.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext">ITypeDescriptorContext</see> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo">CultureInfo</see> that provides the language to convert to. </param>
            <param name="value">The <see cref="T:System.Object">Object</see> to convert. </param>
            <returns>An <see cref="T:System.Object">Object</see> that represents the converted value.</returns>
        </member>
        <member name="M:Aspose.BarCode.ResolutionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified destination type using the specified context and arguments.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext">ITypeDescriptorContext</see> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo">CultureInfo</see> that provides the language to convert to. </param>
            <param name="value">The <see cref="T:System.Object">Object</see> to convert. </param>
            <param name="destinationType">The <see cref="T:System.Type">Type</see> to which to convert the value. </param>
            <returns>An <see cref="T:System.Object">Object</see>	that represents the converted value.</returns>
        </member>
        <member name="M:Aspose.BarCode.ResolutionConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>
            Creates an instance of <see cref="T:Aspose.BarCode.Resolution">Resolution</see>.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext">ITypeDescriptorContext</see> that provides a format context.</param>
            <param name="propertyValues">An <see cref="T:System.Collections.IDictionary">IDictionary</see> of new property values. </param>
            <returns>An Object representing the specified <see cref="T:System.Collections.IDictionary">IDictionary</see>; or a <b>null</b> reference (<b>Nothing</b> in Visual Basic) if the object cannot be created.</returns>
        </member>
        <member name="M:Aspose.BarCode.ResolutionConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns whether changing a value on this object requires a call to <see cref="M:Aspose.BarCode.ResolutionConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">CreateInstance</see> to create a new value.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext">ITypeDescriptorContext</see> that provides a format context.</param>
            <returns><b>true</b> if changing a property on this object requires a call to <see cref="M:Aspose.BarCode.ResolutionConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">CreateInstance</see> to create a new value; otherwise, <b>false</b>. This method always returns true.</returns>
        </member>
        <member name="M:Aspose.BarCode.ResolutionConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
            Returns a collection of properties for the type of array specified by the value parameter, using the specified context and attributes.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext">ITypeDescriptorContext</see> that provides a format context.</param>
            <param name="value">An <see cref="T:System.Object">Object</see> that specifies the type of array for which to get properties.</param>
            <param name="attributes">An array of type Attribute that is used as a filter. </param>
            <returns>A <see cref="T:System.ComponentModel.PropertyDescriptorCollection">PropertyDescriptorCollection</see> with the properties that are exposed for this data type, or a null reference (Nothing in Visual Basic) if there are no properties.</returns>
        </member>
        <member name="M:Aspose.BarCode.ResolutionConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns whether this object supports properties.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext">ITypeDescriptorContext</see> that provides a format context.</param>
            <returns><b>true</b> if <see cref="M:Aspose.BarCode.ResolutionConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">GetProperties</see> should be called to find the properties of this object; otherwise, <b>false</b>.</returns>
        </member>
        <member name="T:Aspose.BarCode.ResolutionConverter.ResolutionModeConverter">
            <summary>
            This type supports the .NET Framework infrastructure and is not intended to be used directly from your code.
            </summary>		
        </member>
        <member name="M:Aspose.BarCode.ResolutionConverter.ResolutionModeConverter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.BarCode.ResolutionConverter.ResolutionModeConverter">ResolutionModeConverter</see> class.		
            </summary>
        </member>
        <member name="M:Aspose.BarCode.ResolutionConverter.ResolutionModeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns a collection of standard values for the data type this type converter is designed for.
            </summary>
        </member>
        <member name="T:Aspose.BarCode.ResolutionMode">
            <summary>
            Specifies the resolution mode used to create barcode image.
            </summary>
        </member>
        <member name="F:Aspose.BarCode.ResolutionMode.Graphics">
            <summary>
             Apply the resolution of the barcode image according to the resolution of the specified Graphics object.		
            </summary>
        </member>
        <member name="F:Aspose.BarCode.ResolutionMode.Customized">
            <summary>
             Apply the resolution of the barcode image according to the user defined DpiX and DpiY properties.		
            </summary>
        </member>
        <member name="F:Aspose.BarCode.ResolutionMode.Printer">
            <summary>
             Apply the resolution of the barcode image according to the resolution of the specified printer.		 
            </summary>
        </member>
        <member name="T:Aspose.BarCode.RotationDirection">
            <summary>
            Rotation Direction, must be the following: Clockwise or AntiClockwise
            </summary>
        </member>
        <member name="F:Aspose.BarCode.RotationDirection.Clockwise">
            <summary>
            clock wise rotate
            </summary>
        </member>
        <member name="F:Aspose.BarCode.RotationDirection.AntiClockwise">
            <summary>
            anti clockwise rotate
            </summary>
        </member>
        <member name="F:Aspose.License.Cryptography.BigInteger.DEFAULT_LEN">
            <summary>
            Default length of a BigInteger in bytes
            </summary>
        </member>
        <member name="F:Aspose.License.Cryptography.BigInteger.length">
            <summary>
            The Length of this BigInteger
            </summary>
        </member>
        <member name="F:Aspose.License.Cryptography.BigInteger.data">
            <summary>
            The data for this BigInteger
            </summary>
        </member>
        <member name="F:Aspose.License.Cryptography.BigInteger.smallPrimes">
            <summary>
            	Table of primes below 2000.
            </summary>
            <remarks>
            	<para>
            	This table was generated using Mathematica 4.1 using the following function:
            	</para>
            	<para>
            		<code>
            		PrimeTable [x_] := Prime [Range [1, PrimePi [x]]]
            		PrimeTable [6000]
            		</code>
            	</para>
            </remarks>
        </member>
        <member name="M:Aspose.License.Cryptography.BigInteger.TestBit(System.UInt32)">
            <summary>
            Tests if the specified bit is 1.
            </summary>
            <param name="bitNum">The bit to test. The least significant bit is 0.</param>
            <returns>True if bitNum is set to 1, else false.</returns>
        </member>
        <member name="M:Aspose.License.Cryptography.BigInteger.Normalize">
            <summary>
                Normalizes this by setting the length to the actual number of
                uints used in data and by setting the sign to Sign.Zero if the
                value of this is 0.
            </summary>
        </member>
        <member name="T:Aspose.License.Cryptography.BigInteger.Kernel">
            <summary>
            Low level functions for the BigInteger
            </summary>
        </member>
        <member name="M:Aspose.License.Cryptography.BigInteger.Kernel.AddSameSign(Aspose.License.Cryptography.BigInteger,Aspose.License.Cryptography.BigInteger)">
            <summary>
            Adds two numbers with the same sign.
            </summary>
            <param name="bi1">A BigInteger</param>
            <param name="bi2">A BigInteger</param>
            <returns>bi1 + bi2</returns>
        </member>
        <member name="M:Aspose.License.Cryptography.BigInteger.Kernel.Compare(Aspose.License.Cryptography.BigInteger,Aspose.License.Cryptography.BigInteger)">
            <summary>
            Compares two BigInteger
            </summary>
            <param name="bi1">A BigInteger</param>
            <param name="bi2">A BigInteger</param>
            <returns>The sign of bi1 - bi2</returns>
        </member>
        <member name="M:Aspose.License.Cryptography.BigInteger.Kernel.SingleByteDivideInPlace(Aspose.License.Cryptography.BigInteger,System.UInt32)">
            <summary>
            Performs n / d and n % d in one operation.
            </summary>
            <param name="n">A BigInteger, upon exit this will hold n / d</param>
            <param name="d">The divisor</param>
            <returns>n % d</returns>
        </member>
        <member name="T:Aspose.License.Hackers.RsaSignatureVerifier">
            <summary>
            Performs RSA digital signature verification.
            </summary>
        </member>
        <member name="T:Aspose.License.Hackers.Pkcs1">
            <summary>
            Provides different Public-Key Cryptography Standards methods.
            </summary>
        </member>
        <member name="T:Aspose.License.Hackers.Rsa">
            <summary>
            Performs RSA encryption.
            </summary>
        </member>
        <member name="T:Aspose.License.Hackers.SmartComparator1">
            <summary>
            One of the comparators used for complication of byte buffers comparison.
            </summary>
        </member>
        <member name="M:Aspose.License.Hackers.SmartComparator1.AddBuffer1(System.IO.MemoryStream,System.Byte[],System.Int32)">
            <summary>
            The first buffer to compare should be passed here.
            </summary>
            <param name="dummyParam1"></param>
            <param name="buffer1">The buffer.</param>
            <param name="dummyParam2"></param>
            <returns></returns>
        </member>
        <member name="T:Aspose.License.Hackers.SmartComparator2">
            <summary>
            One of the comparators used for complication of byte buffers comparison.
            </summary>
        </member>
        <member name="M:Aspose.License.Hackers.SmartComparator2.#ctor(Aspose.License.Hackers.SmartComparator1,System.Byte[],System.Boolean,System.Boolean)">
            <summary>
            The second buffer to compare must be passed here.
            </summary>
            <param name="dummyParam1"></param>
            <param name="buffer2">The buffer.</param>
            <param name="dummyParam2"></param>
            <param name="dummyParam3"></param>
        </member>
        <member name="M:Aspose.License.Hackers.SmartComparator2.AddComparator1(System.Int32[],Aspose.License.Hackers.SmartComparator1)">
            <summary>
            The first comparator must be added here.
            </summary>
            <param name="dummyParam1"></param>
            <param name="comparator1">The comparator.</param>
            <returns></returns>
        </member>
        <member name="M:Aspose.License.Hackers.SmartComparator2.PerformComparison1(System.Boolean)">
            <summary>
            Performs comparison of the second half of the buffers.
            </summary>
            <param name="dummyParam1"></param>
        </member>
        <member name="M:Aspose.License.Hackers.SmartComparator2.PassControlToComparator3(System.String,System.Boolean)">
            <summary>
            Passes control to the comparator 3.
            </summary>
            <param name="dummyParam1"></param>
            <param name="isDummy">Must be false to really pass control.</param>
        </member>
        <member name="T:Aspose.License.Hackers.SmartComparator3">
            <summary>
            One of the comparators used for complication of byte buffers comparison.
            </summary>
        </member>
        <member name="M:Aspose.License.Hackers.SmartComparator3.#ctor(Aspose.License.Hackers.SmartComparator2)">
            <summary>
            Comparator 2 should be passed here.
            </summary>
            <param name="comparator2">Comparator 2.</param>
        </member>
        <member name="T:Aspose.License.Hackers.VerificationSupervisor">
            <summary>
            Contains flags set by the meaningful comparer methods. This is necessary to ensure
            that crackers have not cut out the entry point of the verification algorithm located
            in LicenseCore.VerifySignature() and all the methods have been called. The flags should
            be set by 3 comparer methods subsequently, each method must check if the previous method
            has been invoked. 
            
            Also see SignatureInvalidFlag in this class.
            </summary>
        </member>
        <member name="M:Aspose.License.Hackers.VerificationSupervisor.Clear">
            <summary>
            Made accessible so license unit tests can reset the static state properly.
            </summary>
        </member>
        <member name="M:Aspose.License.Hackers.VerificationSupervisor.EnsureIfAllMethodsInvoked">
            <summary>
            Returns 0x100 if all methods have been invoked properly, returns 0x1000 otherwise.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Aspose.License.Hackers.VerificationSupervisor.SignatureInvalidFlag">
            <summary>
            If EnsureIfAllMethodsInvoked says that verification methods were called and 
            SignatureInvalidFlag is zero, then the  signature was verified and it was correct.
            
            This is set to greater than zero if signature verification failed at some stage.
            </summary>
        </member>
        <member name="P:Aspose.License.Hackers.VerificationSupervisor.MethodCalledFlag1">
            <summary>
            Used for checking if methods 1 and 2 were invoked. Initial value = 0x30. Method 1
            must check it and if it is 0x30, set it to 0xff, otherwise leave intact.
            Method 2 then must check it and if it is 0xff, set it to 0x80, otherwise leave intact.
            </summary>
        </member>
        <member name="P:Aspose.License.Hackers.VerificationSupervisor.MethodCalledFlag2">
            <summary>
            Used for checking if method 3 was invoked. Initial value = true. Method 3 must
            set it to false.
            </summary>
        </member>
        <member name="T:Aspose.BarCode.EditionType">
            <summary>
            Specifies the edition type of the license.
            </summary>
        </member>
        <member name="T:Aspose.BarCode.LicenseState">
            <summary>
            Represents possible license states.
            </summary>
        </member>
        <member name="F:Aspose.BarCode.LicenseState.Evaluation">
            <summary>
            The license is Evaluation
            </summary>
        </member>
        <member name="F:Aspose.BarCode.LicenseState.Licensed">
            <summary>
            The license is a proper valid license.
            </summary>
        </member>
        <member name="T:Aspose.BarCode.License">
            <summary>
            Provides methods to license the component.
            </summary>
            <example>
            In this example, an attempt will be made to find a license file named MyLicense.lic
            in the folder that contains the component, in the folder that contains the calling assembly,
            in the folder of the entry assembly and then in the embedded resources of the calling assembly.
            <code>
            [C#]
            
            License license = new License();
            license.SetLicense("MyLicense.lic");
            
            
            [Visual Basic]
            
            Dim license As license = New license
            License.SetLicense("MyLicense.lic")
            </code>
            </example>
        </member>
        <member name="M:Aspose.BarCode.License.#ctor">
            <summary>
            Initializes a new instance of this class.
            </summary>
            <example>
            In this example, an attempt will be made to find a license file named MyLicense.lic
            in the folder that contains the component, in the folder that contains the calling assembly,
            in the folder of the entry assembly and then in the embedded resources of the calling assembly.
            <code>
            [C#]
            
            License license = new License();
            license.SetLicense("MyLicense.lic");
            
            
            [Visual Basic]
            
            Dim license As license = New license
            License.SetLicense("MyLicense.lic")
            </code>
            </example>
        </member>
        <member name="M:Aspose.BarCode.License.SetLicense(System.String)">
            <summary>
            Licenses the component.
            </summary>
            <param name="licenseName">Can be a full or short file name or name of an embedded resource.
            Use an empty string to switch to evaluation mode.</param>
            <remarks>
            <p>Tries to find the license in the following locations:</p>
            <p>1. Explicit path.</p>
            <p>2. The folder of the component assembly.</p>
            <p>3. The folder of the client's calling assembly.</p>
            <p>4. The folder of the entry assembly.</p>
            <p>5. An embedded resource in the client's calling assembly.</p>
            
            <p><b>Note:</b>On the .NET Compact Framework, tries to find the license only in these locations:</p>
            <p>1. Explicit path.</p>
            <p>2. An embedded resource in the client's calling assembly.</p>
            </remarks>
            <example>
            In this example, an attempt will be made to find a license file named MyLicense.lic
            in the folder that contains the component, in the folder that contains the calling assembly,
            in the folder of the entry assembly and then in the embedded resources of the calling assembly.
            <code>
            [C#]
            
            License license = new License();
            license.SetLicense("MyLicense.lic");
            
            
            [Visual Basic]
            
            Dim license As License = New License
            license.SetLicense("MyLicense.lic")
            </code>
            </example>
        </member>
        <member name="M:Aspose.BarCode.License.SetLicense(System.IO.Stream)">
            <summary>
            Licenses the component.
            </summary>
            <param name="stream">A stream that contains the license.</param>
            <remarks>
            <p>Use this method to load a license from a stream.</p>
            </remarks>
            <example>
            <code>
            [C#]
            
            License license = new License();
            license.SetLicense(myStream);
            
            
            [Visual Basic]
            
            Dim license as License = new License
            license.SetLicense(myStream)
            </code>
            </example>
        </member>
        <member name="T:Aspose.BarCode.LicenseCore">
            <summary>
            The actual code of the license class is put into an internal class and made into long functions to 
            make it harder for the crackers to find anything meaningful after the dlls were cracked in November 2005.
            </summary>
        </member>
        <member name="F:Aspose.BarCode.LicenseCore.AsposeDot">
            <summary>
            Used in the product mapping to build full product name.
            This is to avoid other developers accidentally damaging this code when doing global rename.
            </summary>
        </member>
        <member name="M:Aspose.BarCode.LicenseCore.SetLicenseCore(System.IO.Stream)">
            <summary>
            Note, this function was manually tuned (made complex) so it does not decompile in Reflector.
            </summary>
        </member>
        <member name="M:Aspose.BarCode.LicenseCore.GetLicenseState">
            <summary>
            Call this from your component code to check if running evaluation version or not.
            </summary>
            <example>
            <code>
            if (Aspose.Words.LicenseCore.GetLicenseState() == LicenseState.Evaluation)
            	InjectWatermark();
            </code>
            </example>
        </member>
        <member name="M:Aspose.BarCode.LicenseCore.CheckEdition(Aspose.BarCode.EditionType,System.String)">
            <summary>
            Note, this function was manually tuned (made complex) so it does not decompile in Reflector.
            
            Call this when the user attempts to use a feature that is limited by edition type.
            Throws a message explaining the license limitation to the user.
            </summary>
            <remarks>
            Most of Aspose products are supposed to have just one edition type.
            Only complex products might have two edition types.
            When using two edition types, make sure it is easy for the client to select edition type they need.
            </remarks>
            <param name="wantEditionType">Specify edition type that is required to access your feature.</param>
            <param name="message">Message that explains what feature the user is trying to access.</param>
            <example>
            For example, adding an image to the document requires Enterprise edition.
            <code>
            Licensing2004.CheckEdition(EditionType.Enterprise, "You tried to add an image to the document.");
            //Proceed inserting the image.
            </code>
            </example>
        </member>
        <member name="M:Aspose.BarCode.LicenseCore.LoadLicense(System.Xml.XmlDocument)">
            <summary>
            Verifies the signature on the XML file and loads it into the license files, but does not check them.
            Made internal only for unit testing, do not call directly otherwise.
            
            Note, this function was manually tuned (made complex) so it does not decompile in Reflector.
            </summary>
        </member>
        <member name="M:Aspose.BarCode.LicenseCore.MapOldProductName(System.String)">
            <summary>
            In January 2006 product names such as Aspose Word, Aspose Excel etc had to be changed. 
            This function maps these product names so old licenses can be used in new products.
            </summary>
        </member>
        <member name="M:Aspose.BarCode.LicenseCore.LoadLicense(System.String)">
            <summary>
            See above. Use for unit testing only.
            </summary>
            <param name="fileName"></param>
        </member>
        <member name="M:Aspose.BarCode.LicenseCore.VerifySignature(System.Xml.XmlNode,System.Xml.XmlNode)">
            <summary>
            Verifies that content of the data element has not been tampered with. Safe to pass nulls.
            
            Note there is no direct action taken inside this method if the signature is invalid.
            If the signature is invalid, the VerificationSupervisor.SignatureInvalidFlag is set to greater 
            than zero and you need to examine it somewhere later in your code. This is to confuse hackers.
            </summary>
        </member>
        <member name="M:Aspose.BarCode.LicenseCore.ProbeLicense(System.String,System.Reflection.Assembly)">
            <summary>
            Tries to find the license in several locations:
            1. Explicit path.
            2. The folder of this assembly.
            3. The folder of the client's calling assembly.
            4. The folder of the entry assembly (does not apply for the .NET Compact Framework).
            5. An embedded resource in the client's calling assembly.
            </summary>
            <param name="licenseName">This can be full or short file name or name of an embedded resource.</param>
            <param name="callingAssembly">Client's calling assembly. Used to find license in embedded resource.</param>
            <returns>Returns a stream that contains the license or throws.</returns>
        </member>
        <member name="M:Aspose.BarCode.LicenseCore.GetAssemblyPath(System.Reflection.Assembly)">
            <summary>
            Returns assembly path correctly even if the assembly is shadow-copied.
            Uses CodeBase instead of Location for that.
            </summary>
        </member>
        <member name="M:Aspose.BarCode.LicenseCore.GetResourceByPartialName(System.Reflection.Assembly,System.String)">
            <summary>
            The resource names can get prefixed with customer's namespace, so I do a partial name search.
            </summary>
        </member>
        <member name="M:Aspose.BarCode.LicenseCore.LoadBlackList">
            <summary>
            Loads and verifies black list from resource called Aspose.License.BlackList.xml which must be present.
            </summary>
        </member>
        <member name="M:Aspose.BarCode.LicenseCore.GetStringValue(System.Xml.XmlElement,System.String)">
            <summary>
            Returns text from the child element of a specified parent element or empty string if the element was not found.
            </summary>
        </member>
        <member name="M:Aspose.BarCode.LicenseCore.GetDateValue(System.Xml.XmlElement,System.String)">
            <summary>
            Gets date value from the specified XML element. Returns DateTime.MaxValue if the element is missing.
            </summary>
        </member>
        <member name="M:Aspose.BarCode.LicenseCore.GetElementByName(System.Xml.XmlElement,System.String)">
            <summary>
            Xml helper function. Gets the first child element with the given name or null.
            I'm using this instead of XPath because XPath is not available on the .NET Compact Framework.
            </summary>
        </member>
        <member name="F:Aspose.BarCode.LicenseCore.gProductNameMap">
            <summary>
            Maps old product names into new.
            </summary>
        </member>
        <member name="P:Aspose.BarCode.LicenseCore.Products">
            <summary>
            Gets Aspose product names this license is for. 
            You need to specify value that matches the value specified in AssemblyProduct attribute.
            This is used to check that the license is suitable for this product.
            </summary>
        </member>
        <member name="P:Aspose.BarCode.LicenseCore.EditionType">
            <summary>
            Gets edition type.
            You can use this to enable/disable some features depending on the edition type.
            </summary>
        </member>
        <member name="P:Aspose.BarCode.LicenseCore.SerialNumber">
            <summary>
            Unique license number. Used to black list stolen licenses.
            </summary>
        </member>
        <member name="P:Aspose.BarCode.LicenseCore.SubscriptionExpiry">
            <summary>
            Gets the last date of the subscription.
            This is to be checked against custom attribute on the assembly that contains the relase date.
            </summary>
        </member>
        <member name="P:Aspose.BarCode.LicenseCore.LicenseExpiry">
            <summary>
            This is for temporary licenses.
            </summary>
        </member>
        <member name="T:Aspose.BarCode.LicenseCore.ProductNameMapping">
            <summary>
            Maps old product name into new.
            </summary>
        </member>
        <member name="T:Aspose.BarCode.BarCoordinateCollection">
            <summary>
            Summary description for BarCoordinate.
            </summary>
        </member>
        <member name="T:Aspose.BarCode.LinearBarCode">
            <summary>
            Obsolete: Please use BarCodeBuilder instead
            </summary>
        </member>
        <member name="M:Aspose.BarCode.LinearBarCode.DrawCaptionBelow(System.Drawing.Graphics)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Aspose.BarCode.LinearBarCode.DrawBarCodeImage(System.Drawing.Graphics,System.Drawing.PointF)">
            <summary>
            drawing the bar code image with specific graphics object
            </summary>
        </member>
        <member name="M:Aspose.BarCode.LinearBarCode.GetBarOriginPoint">
            <summary>
            To get the bar origin point of the image
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aspose.BarCode.LinearBarCode.SaveImageAs(System.String,System.Drawing.Imaging.ImageFormat)">
            <summary>
            Saves this Image object to the specified file in the specified format.
            </summary>
            <param name="fileName">A string that contains the name of the file to which to save this <see cref="T:System.Drawing.Image">Image</see> object. </param>
            <param name="format">The <see cref="T:System.Drawing.Imaging.ImageFormat">ImageFormat</see> object for this Image object. </param>
            <example>The following example demonstrates how to use the SaveImageAs method to create a barcode image file.
            <code>
            [C#]
            DialogResult result = saveFileDialog1.ShowDialog( this);
            if( DialogResult.OK == result)
            {
            	try
            	{
            		this.barCode.SaveImageAs( saveFileDialog1.FileName, 
            					System.Drawing.Imaging.ImageFormat.Bmp);
            	}
            	catch(Exception ex)
            	{
            		MessageBox.Show( "IO Error: " + ex.Message);
            	}
            }
             
             [VB.NET]
            Dim result As DialogResult =  saveFileDialog1.ShowDialog(Me) 
            If DialogResult.OK = result Then
            	Try
            	Me.barCodeControl1.SaveImageAs(saveFileDialog1.FileName, 
            		System.Drawing.Imaging.ImageFormat.Bmp)
            	Catch ex As Exception
            		MessageBox.Show("IO Error: " + ex.Message)
            	End Try
            End If  
            </code>
            </example>
        </member>
        <member name="M:Aspose.BarCode.LinearBarCode.#ctor">
            <summary>
            The constructor can only be used in the decorator class constructors, 
            without initializing the properties
            </summary>
        </member>
        <member name="M:Aspose.BarCode.LinearBarCode.#ctor(System.String,Aspose.BarCode.Symbology)">
            <summary>
            Create a LinearBarCode instance.
            </summary>
            <param name="codeText">Data to be encoded to the barcode image</param>
            <param name="symbologyType">SymbologyType Type of the linear barcode</param>
        </member>
        <member name="M:Aspose.BarCode.LinearBarCode.#ctor(System.String,System.String,Aspose.BarCode.Symbology)">
            <summary>
            Create a LinearBarCode instance. 
            </summary>
            <param name="codeText">Data to be encoded to the barcode image</param>
            <param name="SupplementCode">Supplement data for some of barcode specification.</param>
            <param name="symbologyType">SymbologyType Type of the linear barcode</param>
        </member>
        <member name="M:Aspose.BarCode.LinearBarCode.CopyFrom(Aspose.BarCode.Web.UI.BarCodeWebControl)">
            <summary>
            Copy the settings from the barcode web control.
            </summary>
            <param name="webBarCode">the barcode web control instance to be copied.</param>
        </member>
        <member name="M:Aspose.BarCode.LinearBarCode.CopyFrom(Aspose.BarCode.Windows.Forms.BarCodeControl)">
            <summary>
            Copy the settings from barcode windows forms control.
            </summary>
            <param name="winBarCode">the barcode window forms contorl instance to be copied.</param>
        </member>
        <member name="M:Aspose.BarCode.LinearBarCode.Dispose">
            <summary>
            Dipose the barcode instance.
            </summary>
        </member>
        <member name="M:Aspose.BarCode.LinearBarCode.SaveImageAs(System.IO.Stream,System.Drawing.Imaging.ImageFormat)">
            <summary>
            Saves the barcode image into the specified <see cref="T:System.IO.Stream">Stream</see> object in the specified format.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream">Stream</see> object to which to save the barcode image.</param>
            <param name="format">The <see cref="T:System.Drawing.Imaging.ImageFormat">ImageFormat</see> class for the barcode image.</param>
            <example>The following example demonstrates how to use the SaveImageAs method to create a barcode image file.
            <code>
            [C#]
            	
                   MemoryStream memStream = new  MemoryStream();
            	linearBarCode1.BitmapImage.Save(memStream,System.Drawing.Imaging.ImageFormat.Png);
            
            [VB.NET]
                   Dim memStream As System.IO.MemoryStream =  New System.IO.MemoryStream() 
            	linearBarCode1.BitmapImage.Save(memStream,System.Drawing.Imaging.ImageFormat.Png)
            </code>
            </example>
        </member>
        <member name="M:Aspose.BarCode.LinearBarCode.Rotate">
            <summary>
            Rotate the barcode image clockwise for 90 degrees
            </summary>
        </member>
        <member name="M:Aspose.BarCode.LinearBarCode.Rotate(Aspose.BarCode.RotationAngle)">
            <summary>
            Rotate the barcode image clockwise for <code>RotationAngle angle</code> degree
            </summary>
            <param name="angle">The angle to rotate, whether 0, 90, 180 or 270 degree</param>
        </member>
        <member name="M:Aspose.BarCode.LinearBarCode.Rotate(Aspose.BarCode.RotationDirection,Aspose.BarCode.RotationAngle)">
            <summary>
            Rotate the barcode image <code>direction</code>-wise for <code>angle</code> degree
            </summary>
            <param name="direction">either RotationDirection.Clockwise or RotationDirection.AntiClockwise</param>
            <param name="angle">either 0, 90, 180 or 270 degree</param>
        </member>
        <member name="P:Aspose.BarCode.LinearBarCode.CodeText">
            <summary>
            Gets or sets the data to be encoded.
            </summary>
        </member>
        <member name="P:Aspose.BarCode.LinearBarCode.EnableEscape">
            <summary>
            Indicates whether explains the character "\" as an escape character in CodeText property.
            <note>If the EnableEscape is true, "\" will be explained as a special escape character. Otherwise, "\" acts as normal characters.</note>
            <remarks>Aspose.BarCode supports inputing decimal ascii code and mnemonic for ASCII control-code characters, 0 through 31. For example, \013 and \CR stands for CR.</remarks>
            </summary>
        </member>
        <member name="P:Aspose.BarCode.LinearBarCode.ForeColor">
            <summary>
            Gets or sets the foreground <see cref="T:System.Drawing.Color"> color</see> to be used to draw bars in the image.
            </summary>		
        </member>
        <member name="P:Aspose.BarCode.LinearBarCode.BackColor">
            <summary>
            Gets or sets the background <see cref="T:System.Drawing.Color"> color</see> of the barcode image.
            </summary>
        </member>
        <member name="P:Aspose.BarCode.LinearBarCode.ImageUnit">
            <summary>
            Gets or sets the <see cref="T:System.Drawing.GraphicsUnit">unit</see> of measure to draw the image.
            </summary>
            <remarks>
            The measure unit of the current barcode image, which determines the real amount of the <see cref="P:Aspose.BarCode.Windows.Forms.BarCodeControl.BarHeight">BarHeight</see>, <see cref="P:Aspose.BarCode.Windows.Forms.BarCodeControl.CodeTextSpace">CodeTextSpace</see>, <see cref="P:Aspose.BarCode.Windows.Forms.BarCodeControl.SupplementSpace">SupplementSpace</see>, <see cref="P:Aspose.BarCode.Windows.Forms.BarCodeControl.BorderMargins">BorderMargins</see>, <see cref="P:Aspose.BarCode.Windows.Forms.BarCodeControl.ImageMargins">ImageMargins</see>, and <see cref="P:Aspose.BarCode.Windows.Forms.BarCodeControl.xDimension">x-dimension</see> for the image.
            </remarks>
        </member>
        <member name="P:Aspose.BarCode.LinearBarCode.BarHeight">
            <summary>
            Gets or sets the height of the bars in the barcode image.
            </summary>
            <remarks>
            The measure unit of the <b>BarHeight</b> for the barcode is indicated by the <see cref="P:Aspose.BarCode.Windows.Forms.BarCodeControl.ImageUnit">ImageUnit</see>.
            </remarks>
        </member>
        <member name="P:Aspose.BarCode.LinearBarCode.xDimension">
            <summary>
            Gets or sets the x-dimension of the bars to be drawn in the image.
            </summary>
        </member>
        <member name="P:Aspose.BarCode.LinearBarCode.Width2NarrowRatio">
            <summary>
            Gets or sets the ratio of wide/narrow bar for some barcode symbologies
            </summary>
        </member>
        <member name="P:Aspose.BarCode.LinearBarCode.CodeColor">
             <summary>
            Gets or sets the font <see cref="T:System.Drawing.Color">color</see> to be used to draw the code text.
             </summary>
        </member>
        <member name="P:Aspose.BarCode.LinearBarCode.Font">
            <summary>
            Gets or sets the <see cref="T:System.Drawing.Font">font</see> used to draw code text of the barcode image.
            </summary>
        </member>
        <member name="P:Aspose.BarCode.LinearBarCode.CaptionAbove">
            <summary>
            Gets or sets the <see cref="T:Aspose.BarCode.Caption">caption</see> shown on the top of the barcode.
            </summary>	
        </member>
        <member name="P:Aspose.BarCode.LinearBarCode.CaptionBelow">
            <summary>
            Gets or sets the <see cref="T:Aspose.BarCode.Caption">caption</see> shown on the bottom of the barcode.
            </summary>	
        </member>
        <member name="P:Aspose.BarCode.LinearBarCode.SymbologyType">
            <summary>
            Gets or sets the type of symbology to be used to create barcode image.
            </summary>
        </member>
        <member name="P:Aspose.BarCode.LinearBarCode.CodeLocation">
            <summary>
            Gets or sets the <see cref="T:Aspose.BarCode.CodeLocation">location</see> of the code text drawn in the image.
            </summary>
            <remarks>
            If the code location of the barcode is <see cref="T:Aspose.BarCode.CodeLocation">none</see>, the <see cref="P:Aspose.BarCode.Windows.Forms.BarCodeControl.CodeTextSpace">space</see> between the <see cref="P:Aspose.BarCode.Windows.Forms.BarCodeControl.CodeText">code text</see> and barcode will be ignored.
            </remarks>
        </member>
        <member name="P:Aspose.BarCode.LinearBarCode.RotationAngle">
            <summary>
            Gets or sets the <see cref="T:Aspose.BarCode.RotationAngle">angle</see> of the barcode image to be rotated.
            </summary>
            <remarks>
            The barcode image will be rotated based on the fixed left-top point of the image.
            </remarks>
        </member>
        <member name="P:Aspose.BarCode.LinearBarCode.CodeAlignment">
            <summary>
            Gets or sets the <see cref="T:System.Drawing.StringAlignment"> alignment</see> of the code text in the image.
            </summary>
        </member>
        <member name="P:Aspose.BarCode.LinearBarCode.CodeTextSpace">
            <summary>
            Gets or sets the amount of the space between the bars and the code text in the image.
            </summary>
            <remarks>
            If the code location of the barcode is <see cref="T:Aspose.BarCode.CodeLocation">none</see>, the <see cref="P:Aspose.BarCode.Windows.Forms.BarCodeControl.CodeTextSpace">space</see> between the <see cref="P:Aspose.BarCode.Windows.Forms.BarCodeControl.CodeText">code text</see> and barcode will be ignored.
            </remarks>
        </member>
        <member name="P:Aspose.BarCode.LinearBarCode.ResolutionPrinter">
            <summary>
            Gets or sets the printer used to set the resolution of the barcode image.
            </summary>
            <remarks>
            <p>Create the image accords with the resolution setting of specific printer, when the resolution mod is set to printer.</p>
            </remarks>
        </member>
        <member name="P:Aspose.BarCode.LinearBarCode.EnableCheckSum">
            <summary>
            Gets or sets a value indicating whether adding the check sum characters to the code to be encoded.
            </summary>
        </member>
        <member name="P:Aspose.BarCode.LinearBarCode.CheckSumVisible">
            <summary>
            Gets or sets a value indicates whether the check sum digits shown in the code text.
            </summary>
        </member>
        <member name="P:Aspose.BarCode.LinearBarCode.BitmapImage">
             <summary>
             Gets the barcode image in the <see cref="T:System.Drawing.Bitmap">bitmap</see> format.
             </summary>		
            <example> The following example demonstrates how to use the BitmapImage property to help you print the barcode.
              <code>
                 [C#]
                 private void btnPrint_Click(object sender, System.EventArgs e)
                 {
                      PrintDocument printDoc = new PrintDocument();
                      //add handler
                      printDoc.PrintPage +=new PrintPageEventHandler(printDoc_PrintPage);
                      //print the barcode
                      printDoc.Print();
                 }
                 private void printDoc_PrintPage(object sender, PrintPageEventArgs e)
                 {
                       //get the barcode image
                      BitmapImage image = this.barCodeControl1.BitmapImage;
                      //fill it into the graphic, then it will be printed.
                      e.Graphics.DrawImage( image, 0, 0);
                 }
             </code>
             </example>
        </member>
        <member name="P:Aspose.BarCode.LinearBarCode.MetafileImage">
            <summary>
            Gets the barcode image in the <see cref="T:System.Drawing.Imaging.Metafile">meta file</see> format.
            </summary>		
        </member>
        <member name="P:Aspose.BarCode.LinearBarCode.Resolution">
            <summary>
            Gets or sets the <see cref="T:Aspose.BarCode.Resolution">resolution</see> of the image
            </summary>
        </member>
        <member name="P:Aspose.BarCode.LinearBarCode.BorderDashStyle">
            <summary>
            Gets or sets the <see cref="T:Aspose.BarCode.BorderDashStyle">dash style</see> of the border
            </summary>
        </member>
        <member name="P:Aspose.BarCode.LinearBarCode.ImageMargins">
            <summary>
            Gets or sets the <see cref="T:Aspose.BarCode.MarginsF">margins</see> of the barcode image.
            </summary>
        </member>
        <member name="P:Aspose.BarCode.LinearBarCode.BorderMargins">
            <summary>
            Gets or sets the <see cref="T:Aspose.BarCode.MarginsF">margins</see> of the image within the border, if the border is visible.
            </summary>
            <remarks>
            The measure unit of the <b>marigins</b> for the border is indicated by the <see cref="P:Aspose.BarCode.Windows.Forms.BarCodeControl.ImageUnit">ImageUnit</see>.
            </remarks>
        </member>
        <member name="P:Aspose.BarCode.LinearBarCode.ImageQuality">
            <summary>
            Specifies the <see cref="T:Aspose.BarCode.ImageQualityMode">quality</see> of the barcode image created.
            </summary>
            <remarks>
            <p>The <b>Defult</b> quality mode provide higher speed to create image due to non-antialis rendering.</p>
            <p>If you creating high quality images, use <b>AntiAlias</b> quality mode, which provides much better quality due to antialiasing, but also at a higher performance cost.</p>		
            </remarks>
        </member>
        <member name="P:Aspose.BarCode.LinearBarCode.ShowBorder">
            <summary>
            Gets or sets a value indicates whether or not the border of the image is visible.
            </summary>
        </member>
        <member name="P:Aspose.BarCode.LinearBarCode.BorderColor">
             <summary>
            Gets or sets the <see cref="T:System.Drawing.Color"> color</see> to be used to draw the border of the image.
             </summary>
        </member>
        <member name="P:Aspose.BarCode.LinearBarCode.Code128CodeSet">
            <summary>
            Gets or sets the code set to be used in Code128 barcode specification to create barcode images.
            </summary>
        </member>
        <member name="P:Aspose.BarCode.LinearBarCode.UPCNumberSystem">
            <summary>
            Gets or sets the Number System of the UPC-A or UPC-E barcode specification.
            </summary>
        </member>
        <member name="P:Aspose.BarCode.LinearBarCode.StartSymbolOfCodabar">
            <summary>
            Gets or sets the start symbol of the Codebar barcode specification.
            </summary>
        </member>
        <member name="P:Aspose.BarCode.LinearBarCode.StopSymbolOfCodabar">
            <summary>
            Gets or sets the start symbol of the Codebar barcode specification.
            </summary>
        </member>
        <member name="P:Aspose.BarCode.LinearBarCode.BorderWidth">
            <summary>
            Gets or sets the width of the border of the image.
            </summary>
        </member>
        <member name="P:Aspose.BarCode.LinearBarCode.ClientSizePixel">
            <summary>
            
            </summary>
            <returns></returns>		
        </member>
        <member name="P:Aspose.BarCode.LinearBarCode.SupplementData">
            <summary>
            Gets or sets the Supplement data of the barcode specifications.
            </summary>
            <remarks>
            <p>The supplement data should be 2 or 5 digits.</p>
            <p><see cref="F:Aspose.BarCode.Symbology.UPCA">UPC-A</see>, <see cref="F:Aspose.BarCode.Symbology.EAN13">EAN-13</see>, and <see cref="F:Aspose.BarCode.Symbology.EAN8">EAN-8</see> may all include an additional barcode to the right of the main barcode. This supplemental barcode, which is usually not as tall as the primary barcode, is used to encode additional information for newspapers, books, and other periodicals.</p>
            </remarks>
            <exception cref="T:System.ArgumentException">	
            <p>The supplement data contains non-digits characters, or the length of the data is not 2 and 5.</p>
            </exception>
        </member>
        <member name="P:Aspose.BarCode.LinearBarCode.SupplementSpace">
            <summary>
            Gets or sets the amount of space between the major barcode and the Supplement data.
            </summary>
        </member>
        <member name="T:Aspose.BarCode.Web.LinearBarCodeImageHandler">
            <summary>
            Represents the IHttpHandler implementation for Linear barcode images.
            </summary>
        </member>
        <member name="M:Aspose.BarCode.Web.LinearBarCodeImageHandler.#ctor">
            <summary>
            Initialize a new instance of the class <see cref="T:Aspose.BarCode.Web.LinearBarCodeImageHandler"/>
            </summary>
        </member>
        <member name="M:Aspose.BarCode.Web.LinearBarCodeImageHandler.ProcessRequest(System.Web.HttpContext)">
            <summary>
             Processes of the HTTP Web requests created by <see cref="T:Aspose.BarCode.Web.UI.BarCodeWebControl"/>
            </summary>
            <param name="context">An HttpContext object that provides references to the intrinsic server objects (for example, Request, Response, Session, and Server) used to service HTTP requests. </param>
        </member>
        <member name="P:Aspose.BarCode.Web.LinearBarCodeImageHandler.IsReusable">
            <summary>
            Gets a value indicating whether another request can use the <see cref="T:Aspose.BarCode.Web.LinearBarCodeImageHandler"/> instance.
            </summary>
        </member>
        <member name="T:Aspose.BarCode.RotationAngle">
            <summary>
            Specifies the rotation angle of the barcode image.
            </summary>
        </member>
        <member name="F:Aspose.BarCode.RotationAngle.ZeroDegree">
            <summary>
            Specifies that the rotation angle of the barcode image is <b>0</b> degree.
            </summary>
        </member>
        <member name="F:Aspose.BarCode.RotationAngle.NinetyDegree">
            <summary>
            Specifies that the rotation angle of the barcode image is <b>90</b> degree. 
            </summary>
        </member>
        <member name="F:Aspose.BarCode.RotationAngle.OneHundredEightyDegree">
            <summary>
            Specifies that the rotation angle of the barcode image is <b>180</b> degree.
            </summary>
        </member>
        <member name="F:Aspose.BarCode.RotationAngle.TwoHundredSeventyDegree">
            <summary>
            Specifies that the rotation angle of the barcode image is <b>270</b> degree. 
            </summary>
        </member>
        <member name="T:Aspose.BarCode.BarCodeInfo">
            <summary>
            Representing barcode information found on an image
            see <see cref="T:Aspose.BarCode.BarCodeReader">BarCodeReader</see>
            </summary>
        </member>
        <member name="M:Aspose.BarCode.BarCodeInfo.ToString">
            <summary>
            convert to string
            </summary>
            <returns>A string describing the details of the barcode found</returns>
        </member>
        <member name="P:Aspose.BarCode.BarCodeInfo.BoundingRectangle">
            <summary>
            Rectangle area of the image containing the barcode found
            </summary>
        </member>
        <member name="P:Aspose.BarCode.BarCodeInfo.ChecksumPosition">
            <summary>
            Checksum digit's postion of CodeText if any, -1 if no checksum is found
            </summary>
        </member>
        <member name="P:Aspose.BarCode.BarCodeInfo.CodeText">
            <summary>
            The code text of the barcode found, containing the checksum digits if any
            </summary>
        </member>
        <member name="P:Aspose.BarCode.BarCodeInfo.EndPoints">
            <summary>
            end points dipicting the ending side (edge) of the barcode
            </summary>
        </member>
        <member name="P:Aspose.BarCode.BarCodeInfo.HasSupplement">
            <summary>
            Whether or not containing plus 2 or plus 5 supplement
            </summary>
        </member>
        <member name="P:Aspose.BarCode.BarCodeInfo.Orientation">
            <summary>
            BarCode's direction, -1 if it's 2D barcode
            see <see cref="T:Aspose.BarCode.Orientations">Orientations</see>
            </summary>
        </member>
        <member name="P:Aspose.BarCode.BarCodeInfo.StartPoints">
            <summary>
            starting points dipicting the start side (edge) of the barcode
            </summary>
        </member>
        <member name="P:Aspose.BarCode.BarCodeInfo.SupplementInfo">
            <summary>
            BarCodeInfo of the supplement barcode, null if HasSupplement is false
            </summary>
        </member>
        <member name="P:Aspose.BarCode.BarCodeInfo.SymbologyType">
            <summary>
            BarCode's symbology
            see <see cref="T:Aspose.BarCode.Symbology">Symbology</see>.
            </summary>
        </member>
        <member name="T:Aspose.BarCode.BarCodeReader">
            <summary>
            BarCodeReader encapsulates an image which may contain one or several barcodes, it then can perform Read operation to detect barcodes
            <example>
            Detect an code39 barcode with supplement
            <code>
            [C#]
            BarCodeReader reader;
            reader = new BarCodeReader(@"c:\test.jpg");
            reader.Orientation = Orientations.West | Orientations.East;
            reader.DetectSupplement = true;
            reader.SymbologyType = Symbology.Code39Extended;
            BarCodeInfo[] infos;
            infos = reader.Read();
            foreach (BarCodeInfo info in infos)
            {
               Console.WriteLine("found barcode:" + info.CodeText);
            }
            
            [VB.NET]
               Dim reader As BarCodeReaderu
               reader = New BarCodeReader("c:\test.jpg")
               reader.Orientation = Orientations.West Or Orientations.East
               reader.SymbologyType = Symbology.Code39Extended
               reader.DetectSupplement = True
               Dim infos() As BarCodeInfo
               infos = reader.Read()
               For Each info As BarCodeInfo In infos
                   Console.WriteLine("found barcode:" + info.CodeText)
               Next
            </code>
            </example>
            </summary>
        </member>
        <member name="M:Aspose.BarCode.BarCodeReader.#ctor">
            <summary>
            Create a new BarCodeReader
            </summary>
        </member>
        <member name="M:Aspose.BarCode.BarCodeReader.#ctor(System.Drawing.Bitmap)">
            <summary>
            BarCodeReader constructor
            </summary>
            <example>
            Create a new BarCodeReader from an image
            <code>
            [C#]
            //Create a barcode reader
            Aspose.BarCode.BarCodeReader reader;
            System.Drawing.Bitmap bitmap;
            bitmap = new Bitmap(@"c:\barcodes\code39.gif");
            reader = new Aspose.BarCode.BarCodeReader(bitmap);
            // reader settings
            reader.SymbologyType = Aspose.BarCode.Symbology.Code39Extended | Aspose.BarCode.Symbology.Code39Standard;
            reader.Orientation = Aspose.BarCode.Orientations.East;
            // perform scan
            Aspose.BarCode.BarCodeInfo[] result;
            result = reader.Read();
            if(result.Length > 0)
            {
               Console.WriteLine("Found barcode:" + result[0].CodeText);
            }
            [VB.NET]
            'create reader
            Dim reader As Aspose.BarCode.BarCodeReader
            Dim bitmap As System.Drawing.Bitmap
            bitmap = New Bitmap("c:\barcodes\code39.gif")
            reader = New Aspose.BarCode.BarCodeReader(bitmap)
            
            'reader settings
            reader.SymbologyType = Aspose.BarCode.Symbology.Code39Extended Or Aspose.BarCode.Symbology.Code39Standard
            reader.Orientation = Aspose.BarCode.Orientations.East
            
            'perform scan
            Dim result() As Aspose.BarCode.BarCodeInfo
            result = reader.Read()
            If result.Length > 0 Then
               Console.WriteLine(string.Concat("Found barcode:", result(0).CodeText))
            End If
            </code>
            </example>
            <param name="image">A Bitmap instance containing the image</param>
        </member>
        <member name="M:Aspose.BarCode.BarCodeReader.#ctor(System.String)">
             <summary>
             BarCodeReader constructor
             </summary>
             <example>
             create a barcode reader from an image file path
             <code>
             [C#]
             Aspose.BarCode.BarCodeReader reader;
             reader = new Aspose.BarCode.BarCodeReader(@"c:\barcodes\code39.gif");
             //reader settings
             reader.SymbologyType = Aspose.BarCode.Symbology.Code39Extended | Aspose.BarCode.Symbology.Code39Standard;
             reader.Orientation = Aspose.BarCode.Orientations.East;
             //perform scan
             Aspose.BarCode.BarCodeInfo[] result;
             result = reader.Read();
             if(result.Length > 0)
             {
                Console.WriteLine("Found barcode:" + result[0].CodeText);
            }
             [VB.NET]
             Dim reader As Aspose.BarCode.BarCodeReader
             reader = New Aspose.BarCode.BarCodeReader("c:\Code39.gif")
             'reader settings
             reader.SymbologyType = Aspose.BarCode.Symbology.Code39Extended Or Aspose.BarCode.Symbology.Code39Standard
             reader.Orientation = Aspose.BarCode.Orientations.East
             'perform scan
             Dim result() As Aspose.BarCode.BarCodeInfo
             result = reader.Read()
             If result.Length > 0 Then
                Console.WriteLine(string.Concat("Found barcode:", result(0).CodeText))
             End If
             </code>
             </example>
             <param name="imageFileName">A full file path of the image</param>
        </member>
        <member name="M:Aspose.BarCode.BarCodeReader.Dispose">
            <summary>
            Release resource
            </summary>
        </member>
        <member name="M:Aspose.BarCode.BarCodeReader.Read">
            <summary>
            Scan BarCodeImage to detect any barcode
            <example>
            <code>
            scan an UPCA barcode
            [C#]
            BarCodeReader reader;
            reader = new BarCodeReader(@"c:\test.jpg");
            reader.Orientation = Orientations.West | Orientations.East;
            reader.DetectSupplement = true;
            reader.SymbologyType = Symbology.UPCA;
            BarCodeInfo[] infos;
            infos = reader.Read();
            foreach (BarCodeInfo info in infos)
            {
               Console.WriteLine("found barcode:" + info.CodeText);
            }
            
            [VB.NET]
               Dim reader As BarCodeReader
               reader = New BarCodeReader("c:\test.jpg")
               reader.Orientation = Orientations.West Or Orientations.East
               reader.SymbologyType = Symbology.UPCA
               reader.DetectSupplement = True
               Dim infos() As BarCodeInfo
               infos = reader.Read()
               For Each info As BarCodeInfo In infos
                   Console.WriteLine("found barcode:" + info.CodeText)
               Next
            </code>
            </example>
            </summary>
            <returns>BarCodeInfo array containing the information of the barcodes found</returns>
        </member>
        <member name="M:Aspose.BarCode.BarCodeReader.Read(Aspose.BarCode.Symbology)">
            <summary>
            Scan BarCodeImage to detect any barcode
            see <see cref="T:Aspose.BarCode.Symbology">Symbology</see>.
            </summary>
            <example>
            <code>
            scan an UPCA barcode
            [C#]
            BarCodeReader reader;
            reader = new BarCodeReader(@"c:\test.jpg");
            reader.Orientation = Orientations.West | Orientations.East;
            reader.DetectSupplement = true;
            BarCodeInfo[] infos;
            infos = reader.Read(Aspose.BarCode.Symbology.UPCA);
            foreach (BarCodeInfo info in infos)
            {
               Console.WriteLine("found barcode:" + info.CodeText);
            }
            
            [VB.NET]
               Dim reader As BarCodeReader
               reader = New BarCodeReader("c:\test.jpg")
               reader.Orientation = Orientations.West Or Orientations.East
               reader.DetectSupplement = True
               Dim infos() As BarCodeInfo
               infos = reader.Read(Aspose.BarCode.Symbology.UPCA)
               For Each info As BarCodeInfo In infos
                   Console.WriteLine("found barcode:" + info.CodeText)
               Next
            </code>
            </example>
            <param name="symbologyType">symbology of the barcode</param>
            <returns>BarCodeInfo array containing the information of the barcodes found</returns>
        </member>
        <member name="M:Aspose.BarCode.BarCodeReader.Read(Aspose.BarCode.Symbology,System.Boolean)">
            <summary>
            Scan BarCodeImage to detect any barcode
            </summary>
            <example>
            <code>
            scan an UPCA barcode, if checksum is not correct, consider not found
            [C#]
            BarCodeReader reader;
            reader = new BarCodeReader(@"c:\test.jpg");
            reader.Orientation = Orientations.West | Orientations.East;
            reader.DetectSupplement = true;
            BarCodeInfo[] infos;
            infos = reader.Read(Aspose.BarCode.Symbology.UPCA, true);
            foreach (BarCodeInfo info in infos)
            {
               Console.WriteLine("found barcode:" + info.CodeText);
            }
            
            [VB.NET]
               Dim reader As BarCodeReader
               reader = New BarCodeReader("c:\test.jpg")
               reader.Orientation = Orientations.West Or Orientations.East
               reader.DetectSupplement = True
               Dim infos() As BarCodeInfo
               infos = reader.Read(Aspose.BarCode.Symbology.UPCA, true)
               For Each info As BarCodeInfo In infos
                   Console.WriteLine("found barcode:" + info.CodeText)
               Next
            </code>
            </example>
            see <see cref="T:Aspose.BarCode.Symbology">Symbology</see>.
            <param name="SymbologyType">symbology of the barcode</param>
            <param name="verifyChecksum">If VerifyChecksum is set to be true, barcodes with wrong checksum will not returned by BarCodeReader</param>
            <returns>BarCodeInfo array containing the information of the barcodes found</returns>
        </member>
        <member name="M:Aspose.BarCode.BarCodeReader.Read(Aspose.BarCode.Symbology,System.Boolean,System.Boolean)">
            <summary>
            Scan BarCodeImage to detect any barcode
            see <see cref="T:Aspose.BarCode.Symbology">Symbology</see>.
            </summary>
            <example>
            <code>
            scan an UPCA barcode, if checksum is not correct, consider not found
            [C#]
            BarCodeReader reader;
            reader = new BarCodeReader(@"c:\test.jpg");
            reader.Orientation = Orientations.West | Orientations.East;
            BarCodeInfo[] infos;
            infos = reader.Read(Aspose.BarCode.Symbology.UPCA, true, true);
            foreach (BarCodeInfo info in infos)
            {
               Console.WriteLine("found barcode:" + info.CodeText);
            }
            
            [VB.NET]
               Dim reader As BarCodeReader
               reader = New BarCodeReader("c:\test.jpg")
               reader.Orientation = Orientations.West Or Orientations.East
               Dim infos() As BarCodeInfo
               infos = reader.Read(Aspose.BarCode.Symbology.UPCA, true, true)
               For Each info As BarCodeInfo In infos
                   Console.WriteLine("found barcode:" + info.CodeText)
               Next
            </code>
            </example>
            <param name="symbologyType">symbology of the barcode</param>
            <param name="verifyChecksum">If VerifyChecksum is set to be true, barcodes with wrong checksum will not returned by BarCodeReader</param>
            <param name="detectSupplement">whether or not to try to decode any supplement barcode</param>
            <returns>BarCodeInfo array containing the information of the barcodes found</returns>
        </member>
        <member name="M:Aspose.BarCode.BarCodeReader.Read(Aspose.BarCode.Symbology,System.Boolean,System.Boolean,Aspose.BarCode.Orientations)">
            <summary>
            Scan BarCodeImage to detect any barcode
            see <see cref="T:Aspose.BarCode.Symbology">Symbology</see>.
            see <see cref="T:Aspose.BarCode.Orientations">Orientations</see>.
            </summary>
            <example>
            <code>
            scan an UPCA barcode, from left to right or from bottom to above, if checksum is not correct, consider not found
            [C#]
            BarCodeReader reader;
            reader = new BarCodeReader(@"c:\test.jpg");
            BarCodeInfo[] infos;
            infos = reader.Read(Aspose.BarCode.Symbology.UPCA, true, true, Orientation.East | Orientation.North);
            foreach (BarCodeInfo info in infos)
            {
               Console.WriteLine("found barcode:" + info.CodeText);
            }
            
            [VB.NET]
               Dim reader As BarCodeReader
               reader = New BarCodeReader("c:\test.jpg")
               Dim infos() As BarCodeInfo
               infos = reader.Read(Aspose.BarCode.Symbology.UPCA, true, true, Orientation.East or Orientation.North)
               For Each info As BarCodeInfo In infos
                   Console.WriteLine("found barcode:" + info.CodeText)
               Next
            </code>
            </example>
            <param name="symbologyType">symbology of the barcode</param>
            <param name="verifyChecksum">If VerifyChecksum is set to be true, barcodes with wrong checksum will not returned by BarCodeReader</param>
            <param name="detectSupplement">whether or not to try to decode any supplement barcode</param>
            <param name="scanDirection">Scan direction</param>
            <returns>BarCodeInfo array containing the information of the barcodes found</returns>
        </member>
        <member name="M:Aspose.BarCode.BarCodeReader.Read(Aspose.BarCode.Symbology,System.Boolean,System.Boolean,Aspose.BarCode.Orientations,System.Int32,System.Drawing.Rectangle)">
            <summary>
            Scan BarCodeImage to detect any barcode
            see <see cref="T:Aspose.BarCode.Symbology">Symbology</see>.
            see <see cref="T:Aspose.BarCode.Orientations">Orientations</see>.
            </summary>
            <example>
            <code>
            scan an UPCA barcode, from left to right or from bottom to above, if checksum is not correct, consider not found
            Read in 5 pixels during each scan step, scan the whole area of BarCodeImage
            [C#]
            BarCodeReader reader;
            reader = new BarCodeReader(@"c:\test.jpg");
            BarCodeInfo[] infos;
            infos = reader.Read(Aspose.BarCode.Symbology.UPCA, true, true, Orientation.East | Orientation.North, 5, Rectangle.Emty);
            foreach (BarCodeInfo info in infos)
            {
               Console.WriteLine("found barcode:" + info.CodeText);
            }
            
            [VB.NET]
               Dim reader As BarCodeReader
               reader = New BarCodeReader("c:\test.jpg")
               Dim infos() As BarCodeInfo
               infos = reader.Read(Aspose.BarCode.Symbology.UPCA, true, true, Orientation.East or Orientation.North, 5, Rectangle.Emty)
               For Each info As BarCodeInfo In infos
                   Console.WriteLine("found barcode:" + info.CodeText)
               Next
            </code>
            </example>
            <param name="symbologyType">symbology of the barcode</param>
            <param name="verifyChecksum">If VerifyChecksum is set to be true, barcodes with wrong checksum will not returned by BarCodeReader</param>
            <param name="detectSupplement">whether or not to try to decode any supplement barcode</param>
            <param name="scanDirection">Scan direction</param>
            <param name="scanStride">How many pixels to read in during each scan step, increase this to speed up but with a poorer recognition</param>
            <param name="scanArea">The area BarCodeReader is trying to scan, set to Rectangle.Emty to scan the whole image</param>
            <returns></returns>
        </member>
        <member name="P:Aspose.BarCode.BarCodeReader.SymbologyType">
            <summary>
            Symbology or symbologies of the barcode to be decoded
            </summary>
            <remarks>
            Aspose.BarCode.Symbology is flagged enums, support bit wise operation. for unknown kinds of barcodes, try to set the Symbology to be 0xFFFF
            </remarks>
            <example>
            Setting target barcode's Symbology
            <code>
            [C#]
            Aspose.BarCode.BarCodeReader reader;
            reader = new Aspose.BarCode.BarCodeReader(@"c:\barcodes\code39.gif");
            //reader settings
            reader.SymbologyType = Aspose.BarCode.Symbology.Code39Extended | Aspose.BarCode.Symbology.Code39Standard;
            [VB.NET]
            Dim reader As Aspose.BarCode.BarCodeReader
            reader = New Aspose.BarCode.BarCodeReader("c:\Code39.gif")
            'reader settings
            reader.SymbologyType = Aspose.BarCode.Symbology.Code39Extended Or Aspose.BarCode.Symbology.Code39Standard
            </code>
            </example>
        </member>
        <member name="P:Aspose.BarCode.BarCodeReader.DetectSupplement">
            <summary>
            Whether to detect plus 2 supplement and plus 5 supplement or not
            </summary>
            <remarks>
            For barcodes of symbology UPCA, UPCE, EAN13, EAN8, BooklandEAN, Interleaved2of5 or Standard2of5, they may have 
            supplemental barcodes beside the main barcode. Set DetectSupplement to true when you want to detect supplemental barcodes.
            </remarks>
        </member>
        <member name="P:Aspose.BarCode.BarCodeReader.BarCodeInfo">
             <summary>
             A BarCodeInfo array containing the barcode information after Read() method.
             null if no barcode is detected
             </summary>
             See <see cref="T:Aspose.BarCode.BarCodeInfo">Aspose.BarCode.BarCodeInfo</see>.
             <remarks>
             When the target picture (BarCodeReader.BarCodeImage) has no barcode image or unrecognisable, BarCodeReader.BarCodeInfo will be null after Read() operation
             When the target picture (BarCodeReader.BarCodeImage) has more than one barcode, then BarCodeReader.BarCodeInfo.Length will be greater than 1, with BarCodeReader.BarCodeInfo[0] representing the first barcode found and BarCodeReader.BarCodeInfo[1] the second, etc.
             When the target barcode has supplement barcodes and BarCodeReader's DetectSupplement property is set to true, then supplemnent barcode will be represented by BarCodeReader.BarCodeInfo[n].SupplementInfo, which is of type Aspose.BarCode.BarCodeInfo
             </remarks>
             <example>
             [C#]
             Aspose.BarCode.BarCodeReader reader;
             reader = new Aspose.BarCode.BarCodeReader(@"c:\barcodes\code39.gif");
             //reader settings
             reader.SymbologyType = Aspose.BarCode.Symbology.Code39Extended | Aspose.BarCode.Symbology.Code39Standard;
             reader.Orientation = Aspose.BarCode.Orientations.East;
             //perform scan
             Aspose.BarCode.BarCodeInfo[] result;
             result = reader.Read();
             if(result.Length &gt; 0)
             {
                Console.WriteLine("Found barcode:" + result[0].CodeText);
            }
             [VB.NET]
             Dim reader As Aspose.BarCode.BarCodeReader
             reader = New Aspose.BarCode.BarCodeReader("c:\Code39.gif")
             'reader settings
             reader.SymbologyType = Aspose.BarCode.Symbology.Code39Extended Or Aspose.BarCode.Symbology.Code39Standard
             reader.Orientation = Aspose.BarCode.Orientations.East
             'perform scan
             Dim result() As Aspose.BarCode.BarCodeInfo
             result = reader.Read()
             If result.Length &gt; 0 Then
                Console.WriteLine(string.Concat("Found barcode:",  result(0).CodeText))
             End If
             </example>
        </member>
        <member name="P:Aspose.BarCode.BarCodeReader.BarCodeImage">
             <summary>
             Get and set the barcode image to be decoded.
             If VisualizeScanResult set to true, barcode area and code text will be drawn on
             this image after Read method
             see <see cref="P:Aspose.BarCode.BarCodeReader.VisualizeScanResult">VisualizeScanResult</see>.
             see <see cref="P:Aspose.BarCode.BarCodeReader.MarkColor">MarkColor</see>.
             </summary>
             <remarks>
             Set this property to any System.Drawing.Bitmap instance and call BarCodeReader's read method to let this instance to be scanned.
             The format of the image would be decided by System.Drawing.Bitmap. Supported formats are jpg, gif, bmp, npg, tif and more.
             </remarks>
             <example>
             
             <code>
             [C#]
             Aspose.BarCode.BarCodeReader reader;
             reader = new Aspose.BarCode.BarCodeReader();
             reader.BarCodeImage = new System.Drawing.Bitmap(@"C:\barcodes\code39.gif");
             //reader settings
             reader.SymbologyType = Aspose.BarCode.Symbology.Code39Extended | Aspose.BarCode.Symbology.Code39Standard;
             reader.Orientation = Aspose.BarCode.Orientations.East;
             //perform scan
             Aspose.BarCode.BarCodeInfo[] result;
             result = reader.Read();
             if(result.Length &gt; 0)
             {
                Console.WriteLine("Found barcode:" + result[0].CodeText);
            }
             [VB.NET]
             Dim reader As Aspose.BarCode.BarCodeReader
             reader = New Aspose.BarCode.BarCodeReader()
             reader.BarCodeImage = new System.Drawing.Bitmap(@"C:\barcodes\code39.gif")
             'reader settings
             reader.SymbologyType = Aspose.BarCode.Symbology.Code39Extended Or Aspose.BarCode.Symbology.Code39Standard
             reader.Orientation = Aspose.BarCode.Orientations.East
             'perform scan
             Dim result() As Aspose.BarCode.BarCodeInfo
             result = reader.Read()
             If result.Length &gt; 0 Then
                Console.WriteLine(string.Concat("Found barcode:",  result(0).CodeText))
             End If
             </code>
             </example>
        </member>
        <member name="P:Aspose.BarCode.BarCodeReader.VisualizeScanResult">
            <summary>
            whether or not to draw on BarCodeImage to show the recognised barcodes. When this property is set to true, retrieve BarCodeReader.BarCodeImage after Read method to get the processed image with barcodes marked on it.
            Set BarCodeReader.MarkColor to change the marking color.
            see <see cref="P:Aspose.BarCode.BarCodeReader.MarkColor">MarkColor</see>.
            </summary>
        </member>
        <member name="P:Aspose.BarCode.BarCodeReader.MarkColor">
            <summary>
            If VisualizeScanResult is set to be true. BarCodeReader will draw the BroundingRectangle and CodeText onto BarCodeImage after Read method if any barcodes are found. This will be the drawing color.
            see <see cref="P:Aspose.BarCode.BarCodeReader.VisualizeScanResult">VisualizeScanResult</see>.
            </summary>
        </member>
        <member name="P:Aspose.BarCode.BarCodeReader.Orientation">
            <summary>
            Which direction BarCodeReader is trying to detect any barcodes. When detecting two dimensional barcodes, set this property to -1.
            see <see cref="T:Aspose.BarCode.Orientations"> Orientations </see>.
            </summary>
            <example>
            try to scan a two dimentional barcode
            <code>
            [C#]
                    Aspose.BarCode.BarCodeReader reader;
            reader = new Aspose.BarCode.BarCodeReader(@"c:\pdf417.gif");
            //reader settings
            reader.SymbologyType = Aspose.BarCode.Symbology.Pdf417;
            reader.Orientation = (Aspose.BarCode.Orientations)(-1);
            //perform scan
            Aspose.BarCode.BarCodeInfo[] result;
            result = reader.Read();
            if(result.Length &gt; 0)
            {
               Console.WriteLine("Found barcode:" + result[0].CodeText);
            }
            [VB.NET]
            Dim reader As Aspose.BarCode.BarCodeReader
            reader = New Aspose.BarCode.BarCodeReader("c:\pdf417.jpg")
            'reader settings
            reader.SymbologyType = Aspose.BarCode.Symbology.Pdf417
            reader.Orientation = -1
            'perform scan
            Dim result() As Aspose.BarCode.BarCodeInfo
            result = reader.Read()
            If result.Length &gt; 0 Then
               Console.WriteLine(string.Concat("Found barcode:",  result(0).CodeText))
            End If
            </code>
            </example>
        </member>
        <member name="P:Aspose.BarCode.BarCodeReader.VerifyChecksum">
            <summary>
            If VerifyChecksum is set to be true, barcodes with wrong checksum will not returned by BarCodeReader
            </summary>
        </member>
        <member name="P:Aspose.BarCode.BarCodeReader.ScanArea">
            <summary>
            The scan area of the image for BarCodeReader to scan, set to Rectangle.Emty means scan the whole BarCodeImage
            </summary>
        </member>
        <member name="P:Aspose.BarCode.BarCodeReader.ScanStep">
            <summary>
            How many pixels BarCode reader is going to read in each scan step
            Increase this number can speed up scan process with a result of poorer recognition
            </summary>
        </member>
        <member name="T:Aspose.BarCode.Orientations">
            <summary>
            Flags indicating scan direction
            </summary>
        </member>
        <member name="F:Aspose.BarCode.Orientations.East">
            <summary>
            From left to right
            </summary>
        </member>
        <member name="F:Aspose.BarCode.Orientations.North">
            <summary>
            From bottom to above
            </summary>
        </member>
        <member name="F:Aspose.BarCode.Orientations.South">
            <summary>
            From above to bottom
            </summary>
        </member>
        <member name="F:Aspose.BarCode.Orientations.West">
            <summary>
            From right to left
            </summary>
        </member>
        <member name="T:Aspose.BarCode.UIEditor.RotationAngleUI">
            <summary>
            Summary description for RotationAngleEditor.
            </summary>
        </member>
        <member name="F:Aspose.BarCode.UIEditor.RotationAngleUI.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Aspose.BarCode.UIEditor.RotationAngleUI.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Aspose.BarCode.UIEditor.RotationAngleUI.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Aspose.BarCode.UIEditor.SymbologyUI.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="T:Aspose.BarCode.Web.UI.Design.BarCodeWebCtrlDesigner">
            <summary>
            Summary description for BarCodeWebCtrlDesigner.
            </summary>
        </member>
        <member name="T:Aspose.BarCode.Web.UI.BarCodeWebControl">
            <summary>
            BarCode Web Control, Goto your toolbox's panel and add BarCode.dll,
            then BarCodeWebControl will appear, just drag and drop it to your 
            web form.
            supported symbology: 
            1D:
            Codabar, Code11, Code128, Code39Standard, Code39Extended
            Code93Standard, Code93Extended, EAN13, EAN8, Interleaved2of5, 
            MSI, Standard2of5, UPCA, UPCE, BooklandEAN, EAN128, Postnet, Planet
            EAN14(SCC14), SSCC18, ITF14
            2D:
            DataMatrix, PDf417, QR code
            
            </summary>
        </member>
        <member name="M:Aspose.BarCode.Web.UI.BarCodeWebControl.#ctor">
            <summary>
            BarCode Web Control
            </summary>
        </member>
        <member name="M:Aspose.BarCode.Web.UI.BarCodeWebControl.#ctor(System.String)">
            <summary>
            BarCode Web Control
            </summary>
            <param name="CodeText">data to be encoded</param>
        </member>
        <member name="M:Aspose.BarCode.Web.UI.BarCodeWebControl.#ctor(System.String,Aspose.BarCode.Symbology)">
            <summary>
            BarCode Web Control
            </summary>
            <param name="CodeText">data to be encoded</param>
            <param name="barcodeType">type of barcode</param>
        </member>
        <member name="M:Aspose.BarCode.Web.UI.BarCodeWebControl.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Render Html Text
            </summary>
            <param name="output"></param>
        </member>
        <member name="M:Aspose.BarCode.Web.UI.BarCodeWebControl.OnInit(System.EventArgs)">
            <summary>
            init function
            </summary>
            <param name="e">EventArgs</param>
        </member>
        <member name="M:Aspose.BarCode.Web.UI.BarCodeWebControl.GenerateBarCodeImage">
            <summary>
            Generates Barcode images
            </summary>
            <returns>A Bitmap that contains the barcode image.</returns>
        </member>
        <member name="M:Aspose.BarCode.Web.UI.BarCodeWebControl.Rotate">
            <summary>
            Rotate barcode image clockwise for 90 degrees
            </summary>
        </member>
        <member name="M:Aspose.BarCode.Web.UI.BarCodeWebControl.Rotate(System.Single)">
            <summary>
            Rotate barcode image clockwise
            </summary>
            <param name="angle">Rotation Angle</param>
        </member>
        <member name="M:Aspose.BarCode.Web.UI.BarCodeWebControl.Rotate(Aspose.BarCode.RotationDirection,System.Single)">
            <summary>
            Rotate the barcode image
            </summary>
            <param name="direction">rotation direction</param>
            <param name="angle">rotation angle</param>
        </member>
        <member name="M:Aspose.BarCode.Web.UI.BarCodeWebControl.Rotate(Aspose.BarCode.RotationAngle)">
            <summary>
            Rotate the barcode image
            </summary>
            <param name="angle">either 0, 90, 180 or 270 degree</param>
        </member>
        <member name="M:Aspose.BarCode.Web.UI.BarCodeWebControl.Rotate(Aspose.BarCode.RotationDirection,Aspose.BarCode.RotationAngle)">
            <summary>
            Rotate the barcode image
            </summary>
            <param name="direction">specify clockwise or anti-clockwise</param>
            <param name="angle">either 0, 90, 180 or 270 degree</param>
        </member>
        <member name="M:Aspose.BarCode.Web.UI.BarCodeWebControl.Save(System.String)">
            <summary>
            Save BarCodeImage to specific file in specific format
            </summary>
            <param name="filename">save to this file path</param>
        </member>
        <member name="M:Aspose.BarCode.Web.UI.BarCodeWebControl.Save(System.IO.Stream,System.Drawing.Imaging.ImageFormat)">
            <summary>
            Save BarCodeImage to specific file in specific format
            </summary>
            <param name="stream">System.IO.Stream</param>
            <param name="format">System.Drawing.Imaging.ImageFormat</param>
        </member>
        <member name="M:Aspose.BarCode.Web.UI.BarCodeWebControl.Save(System.String,System.Drawing.Imaging.ImageFormat)">
            <summary>
            Save BarCodeImage to specific file in specific format
            </summary>
            <param name="filename">save to this file path</param>
            <param name="format">System.Drawing.Imaging.ImageFormat</param>
        </member>
        <member name="M:Aspose.BarCode.Web.UI.BarCodeWebControl.ToString">
            <summary>
            overried to string method
            </summary>
            <returns>BarCode: SymbologyType: CodeText</returns>
        </member>
        <member name="P:Aspose.BarCode.Web.UI.BarCodeWebControl.SymbologyType">
            <summary>
            BarCode's symbology, type: Aspose.BarCode.Symbology see <see cref="T:Aspose.BarCode.Symbology"/>. 
            supported symbology: 
            1D:
            Codabar, Code11, Code128, Code39Standard, Code39Extended
            Code93Standard, Code93Extended, EAN13, EAN8, Interleaved2of5, 
            MSI, Standard2of5, UPCA, UPCE
            2D:
            DataMatrix, PDf417
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Web.UI.BarCodeWebControl.CodeText">
            <summary>
            Data to be encoded, different types of BarCode may have different CodeText length restrictions
            see <see cref="P:Aspose.BarCode.Web.UI.BarCodeWebControl.EnableEscape"/>.  
            see <seealso cref="P:Aspose.BarCode.Web.UI.BarCodeWebControl.CodeTextFont"/>. 
            see <seealso cref="P:Aspose.BarCode.Web.UI.BarCodeWebControl.CodeTextColor"/>. 
            see <seealso cref="P:Aspose.BarCode.Web.UI.BarCodeWebControl.CodeLocation"/>. 
            see <seealso cref="P:Aspose.BarCode.Web.UI.BarCodeWebControl.CodeTextSpace"/>. 
            see <seealso cref="P:Aspose.BarCode.Web.UI.BarCodeWebControl.CodeTextAlignment"/>. 
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Web.UI.BarCodeWebControl.EnableEscape">
            <summary>
            Indicates whether explains the character "\" as an escape character in CodeText property.
            see <see cref="P:Aspose.BarCode.Web.UI.BarCodeWebControl.CodeText"/>. 
            <note>If the EnableEscape is true, "\" will be explained as a special escape character. Otherwise, "\" acts as normal characters.</note>
            <remarks>Aspose.BarCode supports inputing decimal ascii code and mnemonic for ASCII control-code characters, 0 through 31. For example, \013 and \CR stands for CR.</remarks>
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Web.UI.BarCodeWebControl.CodeTextFont">
            <summary>
             Specify the displaying CodeText's font
             see <see cref="P:Aspose.BarCode.Web.UI.BarCodeWebControl.CodeText"/>. 
             see <seealso cref="T:System.Drawing.Font"/>. 
             see <seealso cref="P:Aspose.BarCode.Web.UI.BarCodeWebControl.CodeTextColor"/>. 
             see <seealso cref="P:Aspose.BarCode.Web.UI.BarCodeWebControl.CodeLocation"/>. 
             see <seealso cref="P:Aspose.BarCode.Web.UI.BarCodeWebControl.CodeTextSpace"/>. 
             see <seealso cref="P:Aspose.BarCode.Web.UI.BarCodeWebControl.CodeTextAlignment"/>. 
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Web.UI.BarCodeWebControl.CodeTextColor">
            <summary>
            Specify the displaying CodeText's Color
            see <see cref="T:System.Drawing.Color"/>. 
            see <seealso cref="P:Aspose.BarCode.Web.UI.BarCodeWebControl.CodeText"/>. 
            see <seealso cref="P:Aspose.BarCode.Web.UI.BarCodeWebControl.CodeTextFont"/>. 
            see <seealso cref="P:Aspose.BarCode.Web.UI.BarCodeWebControl.CodeLocation"/>. 
            see <seealso cref="P:Aspose.BarCode.Web.UI.BarCodeWebControl.CodeTextSpace"/>. 
            see <seealso cref="P:Aspose.BarCode.Web.UI.BarCodeWebControl.CodeTextAlignment"/>. 
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Web.UI.BarCodeWebControl.ITF14BorderType">
            <summary>
            Border type of ITF14 barcode, quiet zone will be determined by margin settings.
            </summary>
            See <see cref="P:Aspose.BarCode.BarCodeBuilder.Margins"/>.
        </member>
        <member name="P:Aspose.BarCode.Web.UI.BarCodeWebControl.CodeLocation">
            <summary>
            Specify the displaying CodeText's Location, set to CodeLocation.None to hide CodeText.
            CodeLocation will be ignored if SymbologyType is UPCE, UPCA, BooklandEAN, EAN8 or EAN13
            see <see cref="T:Aspose.BarCode.CodeLocation"/>. 
            see <seealso cref="P:Aspose.BarCode.Web.UI.BarCodeWebControl.CodeText"/>. 
            see <seealso cref="P:Aspose.BarCode.Web.UI.BarCodeWebControl.CodeTextFont"/>. 
            see <seealso cref="P:Aspose.BarCode.Web.UI.BarCodeWebControl.CodeTextSpace"/>. 
            see <seealso cref="P:Aspose.BarCode.Web.UI.BarCodeWebControl.CodeTextColor"/>
            see <seealso cref="P:Aspose.BarCode.Web.UI.BarCodeWebControl.CodeTextAlignment"/>. 
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Web.UI.BarCodeWebControl.CodeTextSpace">
            <summary>
            Space between the CodeText and the BarCode.
            Default Graphics Unit: Millimeter 
            see <see cref="P:Aspose.BarCode.Web.UI.BarCodeWebControl.CodeText"/>. 
            see <see cref="P:Aspose.BarCode.Web.UI.BarCodeWebControl.CodeLocation"/>. 
            see <see cref="P:Aspose.BarCode.Web.UI.BarCodeWebControl.CodeTextFont"/>. 
            see <see cref="P:Aspose.BarCode.Web.UI.BarCodeWebControl.CodeTextColor"/>. 
            see <see cref="P:Aspose.BarCode.Web.UI.BarCodeWebControl.CodeTextAlignment"/>. 
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Web.UI.BarCodeWebControl.CodeTextAlignment">
            <summary>
            Gets or sets the alignment of the code text. 
            see <see cref="T:System.Drawing.StringAlignment"/>. 
            see <seealso cref="P:Aspose.BarCode.Web.UI.BarCodeWebControl.CodeText"/>. 
            see <seealso cref="P:Aspose.BarCode.Web.UI.BarCodeWebControl.CodeTextFont"/>. 
            see <seealso cref="P:Aspose.BarCode.Web.UI.BarCodeWebControl.CodeTextColor"/>. 
            </summary>
            <remarks>
            StringAlignment.Near means CodeText will be aligned to the left
            StringAlignment.Far means CodeText will be aligned to the right
            StringAlignment.Center means CodeText will be aligned to the center
            </remarks>
        </member>
        <member name="P:Aspose.BarCode.Web.UI.BarCodeWebControl.RotationAngle">
            <summary>
            Obsoleted, Use RotationAngleF instead
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Web.UI.BarCodeWebControl.RotationAngleF">
            <summary>
            BarCode image's rotation angle, measured in degree, e.g. RotationAngleF = 0 or RotationAngleF = 360 means no rotation
            If RotationAngleF NOT equal to 90, 180, 270 or 0, it may increase the difficulty for the scanner to read the image, please set quality mode to anti-alias
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Web.UI.BarCodeWebControl.AutoSize">
            <summary>
            Wether ajust image's size automatically. Recommended:true
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Web.UI.BarCodeWebControl.ImageWidth">
            <summary>
            BarCode image's width see <see cref="P:Aspose.BarCode.Web.UI.BarCodeWebControl.AutoSize"/>. , if AutoSize is true, ImageWidth will 
            be increased accordingly
            Default Graphics Unit: Millimeter 
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Web.UI.BarCodeWebControl.ImageHeight">
            <summary>
            BarCode image's height see <see cref="P:Aspose.BarCode.Web.UI.BarCodeWebControl.AutoSize"/>. , if AutoSize is true, ImageHeight will
            be increased accordingly
            Default Graphics Unit: Millimeter 
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Web.UI.BarCodeWebControl.CaptionAbove">
            <summary>
            Caption Above the BarCode image. see <see cref="T:Aspose.BarCode.Caption"/>. 
            CaptionAbove contains the following properties: 
            CaptionAbove.Font, 
            CaptionAbove.ForeColor,
             CaptionAbove.Space, 
             CaptionAbove.Visible, 
             CaptionAbove.Text, 
             CaptionAbove.TextAlign
            </summary>
            <example>
             <code>
             [C#]
             Aspose.BarCode.BarCodeBuilder b = new BarCodeBuilder();
            b.CaptionAbove.Text = "This is a BarCode image";
            b.CaptionAbove.Visible = true;
            b.CaptionAbove.Font = new System.Drawing.Font("Arial", 8f);
            //space between the barcode and the caption
            b.CaptionAbove.Space = 2f;
             
             [VB.NET]
             Dim b As Aspose.BarCode.BarCodeBuilder
            b = New Aspose.BarCode.BarCodeBuilder
            b.CaptionAbove.Text = "This is a BarCode image"
            b.CaptionAbove.Visible = True
            b.CaptionAbove.Font = New System.Drawing.Font("Arial", 8.0F)
            'Space between the barcode and the caption
            b.CaptionAbove.Space = 2.0F
             </code>
            </example>
        </member>
        <member name="P:Aspose.BarCode.Web.UI.BarCodeWebControl.CaptionBelow">
            <summary>
            Caption Below the BarCode image. see <see cref="T:Aspose.BarCode.Caption"/>. 
            CaptionBelow contains the following properties: 
            CaptionBelow.Font, 
            CaptionBelow.ForeColor, 
            CaptionBelow.Space, 
            CaptionBelow.Visible, 
            CaptionBelow.Text, 
            CaptionBelow.TextAlign
            </summary>
            <example>
             <code>
             [C#]
             Aspose.BarCode.BarCodeBuilder b = new BarCodeBuilder();
            b.CaptionAbove.Text = "This is a BarCode image";
            b.CaptionAbove.Visible = true;
            b.CaptionAbove.Font = new System.Drawing.Font("Arial", 8f);
            //space between the barcode and the caption
            b.CaptionAbove.Space = 2f;
             
             [VB.NET]
             Dim b As Aspose.BarCode.BarCodeBuilder
            b = New Aspose.BarCode.BarCodeBuilder
            b.CaptionAbove.Text = "This is a BarCode image"
            b.CaptionAbove.Visible = True
            b.CaptionAbove.Font = New System.Drawing.Font("Arial", 8.0F)
            'Space between the barcode and the caption
            b.CaptionAbove.Space = 2.0F
             </code>
            </example>
        </member>
        <member name="P:Aspose.BarCode.Web.UI.BarCodeWebControl.BarCodeImage">
            <summary>
            Get the BarCode image under current settings
            </summary>
            <example>
            <code>
            [C#]
            Aspose.BarCode.BarCodeBuilder b = new BarCodeBuilder();
            b.CodeText = "12345678";
            b.SymbologyType = Aspose.BarCode.SymbologyType.Codabar;
            b.BarCodeImage.Save("test.bmp");
            
            [VB.NET]
            dim b as Aspose.BarCode.BarCodeBuilder
            b = new BarCodeBuilder()
            b.CodeText = "12345678"
            b.SymbologyType = Aspose.BarCode.SymbologyType.Codabar
            b.BarCodeImage.Save("test.bmp")
            </code>
            </example>
        </member>
        <member name="P:Aspose.BarCode.Web.UI.BarCodeWebControl.GraphicsUnit">
            <summary>
            Measurement of various properties such as Width, Height etc. 
            Default GraphicsUnit: Millimeter
            see <see cref="T:System.Drawing.GraphicsUnit"/>. 
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Web.UI.BarCodeWebControl.Resolution">
            <summary>
            Gets or sets the resolution of the BarCode image
            see <see cref="T:Aspose.BarCode.Resolution"/>. 
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Web.UI.BarCodeWebControl.BorderWidth">
            <summary>
            BarCode Image's border's width
            Default Graphics Unit: Millimeter
            see <see cref="P:Aspose.BarCode.Web.UI.BarCodeWebControl.BorderVisible"/>. 
            see <seealso cref="P:Aspose.BarCode.Web.UI.BarCodeWebControl.BorderDashStyle"/>. 
            see <seealso cref="P:Aspose.BarCode.Web.UI.BarCodeWebControl.BorderColor"/>. 
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Web.UI.BarCodeWebControl.BorderVisible">
            <summary>
            wether BarCode Image's border is visible
            see <see cref="P:Aspose.BarCode.Web.UI.BarCodeWebControl.BorderWidth"/>. 
            see <seealso cref="P:Aspose.BarCode.Web.UI.BarCodeWebControl.BorderDashStyle"/>. 
            see <seealso cref="P:Aspose.BarCode.Web.UI.BarCodeWebControl.BorderColor"/>. 
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Web.UI.BarCodeWebControl.BorderColor">
            <summary>
            BarCode Image's border's color
            see <see cref="T:System.Drawing.Color"/>. 
            see <see cref="P:Aspose.BarCode.Web.UI.BarCodeWebControl.BorderWidth"/>. 
            see <see cref="P:Aspose.BarCode.Web.UI.BarCodeWebControl.BorderVisible"/>. 
            see <see cref="P:Aspose.BarCode.Web.UI.BarCodeWebControl.BorderDashStyle"/>
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Web.UI.BarCodeWebControl.BorderDashStyle">
            <summary>
            BarCode Image's border's style
            see <see cref="T:Aspose.BarCode.BorderDashStyle"/>. 
            see <see cref="P:Aspose.BarCode.Web.UI.BarCodeWebControl.BorderWidth"/>. 
            see <see cref="P:Aspose.BarCode.Web.UI.BarCodeWebControl.BorderVisible"/>. 
            see <see cref="P:Aspose.BarCode.Web.UI.BarCodeWebControl.BorderColor"/>
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Web.UI.BarCodeWebControl.CodabarStartSymbol">
            <summary>
            Start symbol (character) of codabar symbology
            see <see cref="P:Aspose.BarCode.Web.UI.BarCodeWebControl.CodabarStopSymbol"/>. 
            see <see cref="T:Aspose.BarCode.CodabarSymbol"/>. 
            </summary>
            <example>
             <code>
             [C#]
             Aspose.BarCode.BarCodeBuilder b = new BarCodeBuilder();
            b.SymbologyType = Aspose.BarCode.SymbologyType.Codabar;
            b.CodabarStartSymbol = CodabarSymbol.A;
            b.CodabarStopSymbol = CodabarSymbol.B;
            b.CodeText = "123456";
            
            [VB.NET]
            dim b as Aspose.BarCode.BarCodeBuilder
            b = new BarCodeBuilder()
            b.SymbologyType = Aspose.BarCode.SymbologyType.Codabar
            b.CodabarStartSymbol = CodabarSymbol.A
            b.CodabarStopSymbol = CodabarSymbol.A
            b.CodeText = "123456"
             </code>
            </example>
        </member>
        <member name="P:Aspose.BarCode.Web.UI.BarCodeWebControl.CodabarStopSymbol">
            <summary>
            Stop symbol (character) of codabar symbology
            see <see cref="P:Aspose.BarCode.Web.UI.BarCodeWebControl.CodabarStartSymbol"/>. 
            see <see cref="T:Aspose.BarCode.CodabarSymbol"/>. 
            </summary>
            <example>
             <code>
             [C#]
             Aspose.BarCode.BarCodeBuilder b = new BarCodeBuilder();
            b.SymbologyType = Aspose.BarCode.SymbologyType.Codabar;
            b.CodabarStartSymbol = CodabarSymbol.A;
            b.CodabarStopSymbol = CodabarSymbol.B;
            b.CodeText = "123456";
            
            [VB.NET]
            dim b as Aspose.BarCode.BarCodeBuilder
            b = new BarCodeBuilder()
            b.SymbologyType = Aspose.BarCode.SymbologyType.Codabar
            b.CodabarStartSymbol = CodabarSymbol.A
            b.CodabarStopSymbol = CodabarSymbol.A
            b.CodeText = "123456"
             </code>
            </example>
        </member>
        <member name="P:Aspose.BarCode.Web.UI.BarCodeWebControl.Code128CodeSet">
            <summary>
            "Code128 symbology type of barcode's code set, default to Code128CodeSet.Auto"
            see <see cref="T:Aspose.BarCode.Code128CodeSet"/>. 
            </summary>
            <example>
             [C#]
             Aspose.BarCode.BarCodeBuilder b = new BarCodeBuilder();
            b.SymbologyType = Aspose.BarCode.SymbologyType.Code128;
            b.Code128CodeSet = Code128CodeSet.Auto;
            b.CodeText = "123456";
            
            [VB.NET]
            dim b as Aspose.BarCode.BarCodeBuilder
            b = new BarCodeBuilder()
            b.SymbologyType = Aspose.BarCode.SymbologyType.Code128
            b.Code128CodeSet = Code128CodeSet.Auto;
            b.CodeText = "123456"
            </example>
        </member>
        <member name="P:Aspose.BarCode.Web.UI.BarCodeWebControl.xDimension">
            <summary>
            x-dimension, smallest width unit of BarCode's bars or spaces.
            increase this will increase the whole barcode image's width if AutoSize is true
            Default Graphics Unit: Millimeter 
            see <see cref="P:Aspose.BarCode.Web.UI.BarCodeWebControl.yDimension"/>. 
            see <see cref="P:Aspose.BarCode.Web.UI.BarCodeWebControl.AutoSize"/>. 
            see <see cref="P:Aspose.BarCode.Web.UI.BarCodeWebControl.BarHeight"/>. 
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Web.UI.BarCodeWebControl.yDimension">
            <summary>
            y-dimension, smallest height unit of 2D BarCode's modules. 
            Some square symbols (such as DataMatrix) may ignore this and
            use x-dimension for both width unit and height unit
            
            In 2D barcode, y-dimension * rows determines BarCode's height
            In 1D barcode, BarHeight determines BarCode's height.
            Default Graphics Unit: Millimeter 
            see <see cref="P:Aspose.BarCode.Web.UI.BarCodeWebControl.xDimension"/>. 
            see <see cref="P:Aspose.BarCode.Web.UI.BarCodeWebControl.BarHeight"/>. 
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Web.UI.BarCodeWebControl.BarHeight">
            <summary>
            height of 1D barcodes' bars.
            In 2D barcode, y-dimension * rows determines BarCode's height
            In 1D barcode, BarHeight determines BarCode's height.
            Default Graphics Unit: Millimeter 
            see <see cref="P:Aspose.BarCode.Web.UI.BarCodeWebControl.yDimension"/>. 
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Web.UI.BarCodeWebControl.ForeColor">
            <summary>
            Foreground color of the barcode image, that is, 
            Bar's color of 1D barcode, Module's color of 2D barcode
            see <see cref="T:System.Drawing.Color"/>. 
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Web.UI.BarCodeWebControl.BackColor">
            <summary>
            Background color of the barcode image
            see <see cref="T:System.Drawing.Color"/>. 
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Web.UI.BarCodeWebControl.EnableChecksum">
            <summary>
            Enable check sum. Appliable symbology: Code11, Code39Extended, Code39Standard, 
            Code93Extended, Code93Standard, Interleaved2of5, Standard2of5
            The following SymbologyType always include checksum:
            EAN13, EAN8, BooklandEAN
            see <see cref="T:Aspose.BarCode.Symbology"/>. 
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Web.UI.BarCodeWebControl.AspectRatio">
            <summary>
            2D BarCode's module's height/width ratio (yDimension/xDimension). 
            calculated based on xDimension set to 0 means 
            not using this feature.
            see <see cref="P:Aspose.BarCode.Web.UI.BarCodeWebControl.xDimension"/>. 
            see <see cref="P:Aspose.BarCode.Web.UI.BarCodeWebControl.yDimension"/>. 
            </summary>
            <remarks>
            Some 2D BarCodes are square shaped, then AspectRatio is not appliable
            </remarks>
        </member>
        <member name="P:Aspose.BarCode.Web.UI.BarCodeWebControl.Columns">
            <summary>
            2D BarCode's columns, if setting is illegal then columns will be calculated automatically
            appliable SymbologyType: Pdf417
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Web.UI.BarCodeWebControl.Rows">
            <summary>
            2D BarCode's rows, if setting is illegal then rows will be calculated automatically. 
            appliable SymbologyType: Pdf417
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Web.UI.BarCodeWebControl.DataMatrixEncodeMode">
            <summary>
            Encode mode of Datamatrix barcode, default to Auto
            see <see cref="T:Aspose.BarCode.DataMatrixEncodeMode">DataMatrixEncodeMode </see>.
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Web.UI.BarCodeWebControl.Pdf417CompactionMode">
            <summary>
            Pdf417 symbology type of BarCode's compaction mode, default compaction mode is <bode>Auto</bode>
            see <see cref="T:Aspose.BarCode.Pdf417CompactionMode"/>. 
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Web.UI.BarCodeWebControl.Pdf417Truncate">
            <summary>
            whether pdf417 symbology type of BarCode is truncated (to reduce space)
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Web.UI.BarCodeWebControl.Pdf417ErrorLevel">
            <summary>
            Gets or sets Pdf417 symbology type of BarCode's error coccrection level
            ranging from level0 to level9, level0 means no error correction info, 
            level9 means best error correction which means a larger picture
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Web.UI.BarCodeWebControl.QRErrorLevel">
            <summary>
             Level of Reed-Solomon error correction for QR barcode. From low to high: LevelL, LevelM, LevelQ, LevelH. see <see cref="T:Aspose.BarCode.QRErrorLevel">QRErrorLevel</see>.
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Web.UI.BarCodeWebControl.AztectErrorLevel">
            <summary>
            Level of error corection of Aztect types of barcode. value should between 10 to 95
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Web.UI.BarCodeWebControl.WideNarrowRatio">
            <summary>
            Wide bars to Narrow bars ratio for some 1D BarCode. 
            Default WideNarrowRatio:3, that is, wide bars are 3 times as wide as narrow bars
            Appliable symbology: Code39Extended, Code39Standard, Standard2of5, Interleaved2of5
            see <see cref="T:Aspose.BarCode.Symbology"/>. 
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Web.UI.BarCodeWebControl.Margins">
            <summary>
            Margin area around the core BarCode image
            If AutoSize is false, then Width and Height is fixed, thus Margins setting will be ignored
            Default Graphics Unit: Millimeter 
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Web.UI.BarCodeWebControl.SupplementData">
            <summary>
            Supplement data following BarCodes of symbology UPCA, UPCE, EAN13, EAN8, BooklandEAN, Interleaved2of5 or Standard2of5.
            see <see cref="T:Aspose.BarCode.Symbology"/>. 
            see <see cref="P:Aspose.BarCode.Web.UI.BarCodeWebControl.SupplementSpace"/>. 
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Web.UI.BarCodeWebControl.SupplementSpace">
            <summary>
            Space between main the BarCode and supplement BarCode, default Graphics Unit: millimeter
            see <see cref="T:System.Drawing.GraphicsUnit"/>. 
            see <see cref="P:Aspose.BarCode.Web.UI.BarCodeWebControl.SupplementData"/>. 
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Web.UI.BarCodeWebControl.PostnetShortBarHeight">
            <summary>
            Short bar's height of Postnet barcode, it has to be between 1 millimeter and 1.5 milimeter (0.04 inch and 0.06 inch). To set up tall bar's height, see BarHeight, which has to be between 8.28 milimeter and 9.72 milimeter (0.115 inch and 0.135 inch)
            see changing see <see cref="T:System.Drawing.GraphicsUnit">GraphicsUnit</see>.
            see setting tall bar's height: see <see cref="P:Aspose.BarCode.Web.UI.BarCodeWebControl.BarHeight">BarHeight</see>.
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Web.UI.BarCodeWebControl.PlanetShortBarHeight">
            <summary>
            Short bar's height of Planet barcode, it has to be between 1 millimeter and 1.5 milimeters.
            see changing see <see cref="T:System.Drawing.GraphicsUnit">GraphicsUnit</see>.
            see setting tall bar's height: see <see cref="P:Aspose.BarCode.Web.UI.BarCodeWebControl.BarHeight">BarHeight</see>.
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Web.UI.BarCodeWebControl.ImageQuality">
            <summary>
            Graphics quality mode, when RotationAngleF not equal to 0, 90, 180 or 270, do set quality mode to anti-alias. Type: Aspose.BarCode.ImageQualityMode
            see <see cref="T:Aspose.BarCode.ImageQualityMode"/>. 
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Web.UI.BarCodeWebControl.ImageBorderWidth">
            <summary>
            obsolete, use BorderWidth instead
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Web.UI.BarCodeWebControl.CodeAlignment">
            <summary>
            obsolete, use CodeTextAlignment instead
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Web.UI.BarCodeWebControl.CodeColor">
            <summary>
            obsolete, use CodeTextColor instead
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Web.UI.BarCodeWebControl.ImageMargins">
            <summary>
            Obsoleted, use Margins instead
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Web.UI.BarCodeWebControl.ImageUnit">
            <summary>
            Obsolete, use GraphicsUnit instead
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Web.UI.BarCodeWebControl.ShowBorder">
            <summary>
            Obsolete. Use BorderVisible instead
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Web.UI.BarCodeWebControl.StartSymbolOfCodabar">
            <summary>
            Obsolete. Use CodabarStartSymbol instead
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Web.UI.BarCodeWebControl.StopSymbolOfCodabar">
            <summary>
            Obsolete. Use CodabarStopSymbol instead
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Web.UI.BarCodeWebControl.UPCNumberSystem">
            <summary>
            Obsolete. no use
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Web.UI.BarCodeWebControl.Width2NarrowRatio">
            <summary>
            Obsolete. Use WideNarrowRatio instead
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Web.UI.BarCodeWebControl.CodeFont">
            <summary>
            Obsolete. Use CodeTextFont instead
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Web.UI.BarCodeWebControl.Font">
            <summary>
            This propety is obsoleted in this type, please use see <see cref="P:Aspose.BarCode.Web.UI.BarCodeWebControl.CodeFont">CodeTextFont</see> to set the font of the CodeText
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Web.UI.BarCodeWebControl.ToolTip">
            <summary>
            ToolTip property of the base class, webcontrol.
            </summary>
            <remarks>
            Do not use this property. Aspose.Barcode will ignore the value of this property.
            </remarks>
        </member>
        <member name="P:Aspose.BarCode.Web.UI.BarCodeWebControl.CssClass">
            <summary>
            CssClass property of the base class, webcontrol.
            </summary>
            <remarks>
            Do not use this property. Aspose.Barcode will ignore the value of this property.
            </remarks>
        </member>
        <member name="P:Aspose.BarCode.Web.UI.BarCodeWebControl.AccessKey">
            <summary>
            AccessKey property of the base class, webcontrol.
            </summary>		
            <remarks>
            Do not use this property. Aspose.Barcode will ignore the value of this property.
            </remarks>
        </member>
        <member name="P:Aspose.BarCode.Web.UI.BarCodeWebControl.EnableViewState">
            <summary>
            EnableViewState property of the base class, webcontrol.
            </summary>		
            <remarks>
            (default) Enable view state is strongly recommemded
            </remarks>
        </member>
        <member name="P:Aspose.BarCode.Web.UI.BarCodeWebControl.ImageCreator">
            <summary>
            Gets the BarCodeBuilder instance.
            </summary>				
        </member>
        <member name="T:Aspose.BarCode.Windows.Forms.Design.BarCodeControlDesigner">
            <summary>
            Summary description for BarCodeControlDesigner.
            </summary>
        </member>
        <member name="T:Aspose.BarCode.Windows.Forms.BarCodeControl">
            <summary>
            BarCode Windows Control, goto your toolbox panel and add BarCode.dll, 
            and you will see BarCodeControl appears.
            Just drag it and drop to your windows form
            see <seealso cref="T:Aspose.BarCode.Web.UI.BarCodeWebControl"/>
            see <seealso cref="T:Aspose.BarCode.BarCodeBuilder"/>
            supported symbology: 
            1D:
            Codabar, Code11, Code128, Code39Standard, Code39Extended
            Code93Standard, Code93Extended, EAN13, EAN8, Interleaved2of5, 
            MSI, Standard2of5, UPCA, UPCE, BooklandEAN, EAN128, Postnet, Planet
            EAN14(SCC14), SSCC18, ITF14
            2D:
            DataMatrix, PDf417, QR code
            
            </summary>
        </member>
        <member name="M:Aspose.BarCode.Windows.Forms.BarCodeControl.#ctor">
            <summary>
            BarCodeControl Constructor
            </summary>
        </member>
        <member name="M:Aspose.BarCode.Windows.Forms.BarCodeControl.#ctor(System.String)">
            <summary>
            BarCodeControl Constructor
            </summary>
        </member>
        <member name="M:Aspose.BarCode.Windows.Forms.BarCodeControl.#ctor(System.String,Aspose.BarCode.Symbology)">
            <summary>
            BarCodeControl Constructor
            </summary>
            <param name="codeText">data to be encoded</param>
            <param name="symbologyType">barcode's type </param>
        </member>
        <member name="M:Aspose.BarCode.Windows.Forms.BarCodeControl.Dispose(System.Boolean)">
            <summary>
            release resource
            </summary>
        </member>
        <member name="M:Aspose.BarCode.Windows.Forms.BarCodeControl.ShouldSerializeRotationAngle">
            <summary>
            RotationAngle will not persist
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aspose.BarCode.Windows.Forms.BarCodeControl.ShouldSerializeStartSymbolOfCodabar">
            <summary>
            StartSymbolOfCodabar will not persist
            </summary>
        </member>
        <member name="M:Aspose.BarCode.Windows.Forms.BarCodeControl.ShouldSerializeStopSymbolOfCodabar">
            <summary>
            StopSymbolOfCodabar will not persist
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aspose.BarCode.Windows.Forms.BarCodeControl.Rotate">
            <summary>
            Rotate barcode image clockwise for 90 degrees
            </summary>
        </member>
        <member name="M:Aspose.BarCode.Windows.Forms.BarCodeControl.Rotate(System.Single)">
            <summary>
            Rotate barcode image clockwise
            </summary>
            <param name="angle">Rotation Angle</param>
        </member>
        <member name="M:Aspose.BarCode.Windows.Forms.BarCodeControl.Rotate(Aspose.BarCode.RotationDirection,System.Single)">
            <summary>
            Rotate the barcode image
            </summary>
            <param name="direction">rotation direction</param>
            <param name="angle">rotation angle</param>
        </member>
        <member name="M:Aspose.BarCode.Windows.Forms.BarCodeControl.Rotate(Aspose.BarCode.RotationAngle)">
            <summary>
            Rotate the barcode image
            </summary>
            <param name="angle">either 0, 90, 180 or 270 degree</param>
        </member>
        <member name="M:Aspose.BarCode.Windows.Forms.BarCodeControl.Rotate(Aspose.BarCode.RotationDirection,Aspose.BarCode.RotationAngle)">
            <summary>
            Rotate the barcode image
            </summary>
            <param name="direction">specify clockwise or anti-clockwise</param>
            <param name="angle">either 0, 90, 180 or 270 degree</param>
        </member>
        <member name="M:Aspose.BarCode.Windows.Forms.BarCodeControl.Save(System.String)">
            <summary>
            Save BarCodeImage to specific file in specific format
            </summary>
            <param name="filename">save to this file path</param>
        </member>
        <member name="M:Aspose.BarCode.Windows.Forms.BarCodeControl.Save(System.IO.Stream,System.Drawing.Imaging.ImageFormat)">
            <summary>
            Save BarCodeImage to specific file in specific format
            </summary>
            <param name="stream">System.IO.Stream</param>
            <param name="format">System.Drawing.Imaging.ImageFormat</param>
        </member>
        <member name="M:Aspose.BarCode.Windows.Forms.BarCodeControl.Save(System.String,System.Drawing.Imaging.ImageFormat)">
            <summary>
            Save BarCodeImage to specific file in specific format
            </summary>
            <param name="filename">save to this file path</param>
            <param name="format">System.Drawing.Imaging.ImageFormat</param>
        </member>
        <member name="M:Aspose.BarCode.Windows.Forms.BarCodeControl.print">
            <summary>
            Print BarCodeImage
            see <see cref="P:Aspose.BarCode.Windows.Forms.BarCodeControl.PrinterName"/>
            </summary>
        </member>
        <member name="M:Aspose.BarCode.Windows.Forms.BarCodeControl.ShouldSerializeBorderMargins">
            <summary>
            BorderMargins will not be serialized, not persisted
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aspose.BarCode.Windows.Forms.BarCodeControl.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            overrided onpaint method
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Aspose.BarCode.Windows.Forms.BarCodeControl.OnResize(System.EventArgs)">
            <summary>
            Override the parents OnResize
            </summary>
            <param name="e">The EventArgs for resize</param>
        </member>
        <member name="M:Aspose.BarCode.Windows.Forms.BarCodeControl.ToString">
            <summary>
            overried to string method
            </summary>
            <returns>BarCode: SymbologyType: CodeText</returns>
        </member>
        <member name="M:Aspose.BarCode.Windows.Forms.BarCodeControl.#ctor(System.String,Aspose.BarCode.Symbology,System.String)">
            <summary>
            Obsolete. Initializes a new instance of the see <see cref="T:Aspose.BarCode.Windows.Forms.BarCodeControl">BarCodeControl</see> class.
            </summary>
            /// <remarks>
            This method is obsolete, you should use License.SetLicense to set the license instead.
            </remarks>
            /// <example>
            <code>
            [C#]
            
            Aspose.BarCode.License lic = new Aspose.BarCode.License();
            lic.SetLicense("Aspose.BarCode.lic");
            
            [Visual Basic]
            
            Dim lic As New Aspose.BarCode.License()
            lic.SetLicense("Aspose.BarCode.lic")
            
            </code>
            </example>
            <param name="code">The data to be encoded.</param>
            <param name="barcodeType">The see <see cref="T:Aspose.BarCode.Symbology">symbology</see> Type of the barcode.</param>
            <param name="licenseFile">The license filename with its path.</param>
        </member>
        <member name="M:Aspose.BarCode.Windows.Forms.BarCodeControl.#ctor(System.String,System.String,Aspose.BarCode.Symbology,System.String)">
            <summary>
            Obsolete. Initializes a new instance of the see <see cref="T:Aspose.BarCode.Windows.Forms.BarCodeControl">BarCodeControl</see> class.
            </summary>
            /// <remarks>
            This method is obsolete, you should use License.SetLicense to set the license instead.
            </remarks>
            /// <example>
            <code>
            [C#]
            
            Aspose.BarCode.License lic = new Aspose.BarCode.License();
            lic.SetLicense("Aspose.BarCode.lic");
            
            [Visual Basic]
            
            Dim lic As New Aspose.BarCode.License()
            lic.SetLicense("Aspose.BarCode.lic")
            
            </code>
            </example>
            <param name="code">The data to be encoded.</param>
            <param name="SupplementCode">The Supplement data to be encoded.</param>
            <param name="barcodeType">The see <see cref="T:Aspose.BarCode.Symbology">symbology</see> Type of the barcode.</param>
            <param name="licenseFile">The license filename with its path.</param>
        </member>
        <member name="M:Aspose.BarCode.Windows.Forms.BarCodeControl.#ctor(System.String,Aspose.BarCode.Symbology,System.IO.StreamReader)">
            <summary>
            Obsolete. Initializes a new instance of the see <see cref="T:Aspose.BarCode.Windows.Forms.BarCodeControl">BarCodeControl</see> class.
            </summary>
            /// <remarks>
            This method is obsolete, you should use License.SetLicense to set the license instead.
            </remarks>
            /// <example>
            <code>
            [C#]
            
            Aspose.BarCode.License lic = new Aspose.BarCode.License();
            lic.SetLicense("Aspose.BarCode.lic");
            
            [Visual Basic]
            
            Dim lic As New Aspose.BarCode.License()
            lic.SetLicense("Aspose.BarCode.lic")
            
            </code>
            </example>
            <param name="code">The data to be encoded.</param>
            <param name="barcodeType">The see <see cref="T:Aspose.BarCode.Symbology">symbology</see> Type of the barcode.</param>
            <param name="licenseStream">The license stream.</param>
        </member>
        <member name="M:Aspose.BarCode.Windows.Forms.BarCodeControl.#ctor(System.String,System.String,Aspose.BarCode.Symbology,System.IO.StreamReader)">
            <summary>
            Obsolete. Initializes a new instance of the see <see cref="T:Aspose.BarCode.Windows.Forms.BarCodeControl">BarCodeControl</see> class.
            </summary>
            /// <remarks>
            This method is obsolete, you should use License.SetLicense to set the license instead.
            </remarks>
            /// <example>
            <code>
            [C#]
            
            Aspose.BarCode.License lic = new Aspose.BarCode.License();
            lic.SetLicense("Aspose.BarCode.lic");
            
            [Visual Basic]
            
            Dim lic As New Aspose.BarCode.License()
            lic.SetLicense("Aspose.BarCode.lic")
            
            </code>
            </example>
            <param name="code">The data to be encoded.</param>
            <param name="SupplementCode">The Supplement data to be encoded.</param>
            <param name="barcodeType">The see <see cref="T:Aspose.BarCode.Symbology">symbology</see> Type of the barcode.</param>
            <param name="licenseStream">The license stream.</param>
        </member>
        <member name="M:Aspose.BarCode.Windows.Forms.BarCodeControl.SetLicense(System.String)">
             <summary>
             Licenses this component to use in a Windows application.
             </summary>
             <param name="licenseFile">The license filename with its path.</param>
            <example> The following example demonstrates how to initialize a license.
              <code>
                 [C#]
                 //If you do not specify a license, a watermark will be injected to the barcode image. 		
                 //To license this component in a Windows application:
            	 string licenseFile = "path and filename of the license file";
                 Aspose.BarCode.Windows.Forms.BarCodeControl.SetLicense(licenseFile);
             </code>
             </example>
        </member>
        <member name="M:Aspose.BarCode.Windows.Forms.BarCodeControl.SetLicense(System.IO.StreamReader)">
             <summary>
             Licenses this component to use in a Windows application.
             </summary>
             <remarks>
             <p>Make sure to create licenseReader using UnicodeEncoding.UTF7.</p>
             <p>Use this method when you use <a href="ms-help://MS.VSCC/MS.MSDNVS/cptools/html/cpgrfassemblygenerationutilityalexe.htm">Al.exe</a> to assemble the license file into your assembly.</p>
             </remarks>
             <param name="licenseReader">Where to read the license from.</param>
            <example> The following example demonstrates how to initialize a license.
              <code>
                 [C#]
                 //If you do not specify a license, a watermark will be injected to the barcode image. 		
                 //To license this component in a Windows application:
            	 string licenseFile = "path and filename of the license file";
            	 StreamReader licenseStream = new StreamReader(licenseFile, UnicodeEncoding.UTF7);
                 Aspose.BarCode.Windows.Forms.BarCodeControl.SetLicense(licenseStream);
             </code>
             </example>
        </member>
        <member name="M:Aspose.BarCode.Windows.Forms.BarCodeControl.SetLicense(System.String,System.Web.UI.Page)">
             <summary>
             Licenses this component to use in a Web application.
             </summary>
             <param name="licenseFile">The license filename with its path.</param>
             <param name="page">The page that requests this object.</param>
            <example> The following example demonstrates how to initialize a license.
              <code>
                 [C#]
                 //If you do not specify a license, a watermark will be injected to the barcode image. 		
                 //To license this component in a Windows application:
            	 string licenseFile = "path and filename of the license file";
                 Aspose.BarCode.Windows.Forms.BarCodeControl.SetLicense(licenseFile, this);
             </code>
             </example>
        </member>
        <member name="M:Aspose.BarCode.Windows.Forms.BarCodeControl.SetLicense(System.IO.StreamReader,System.Web.UI.Page)">
             <summary>
             Licenses this component to use in a Web application.
             </summary>
             <remarks>
             <p>Make sure to create licenseReader using UnicodeEncoding.UTF7.</p>
             <p>Use this method when you use <a href="ms-help://MS.VSCC/MS.MSDNVS/cptools/html/cpgrfassemblygenerationutilityalexe.htm">Al.exe</a> to assemble the license file into your assembly.</p>
             </remarks>
             <param name="licenseReader">Where to read the license from.</param>
             <param name="page">The page that requests this object.</param>
            <example> The following example demonstrates how to initialize a license.
              <code>
                 [C#]
                 //If you do not specify a license, a watermark will be injected to the barcode image. 		
                 //To license this component in a Windows application:
            	 string licenseFile = "path and filename of the license file";
            	 StreamReader licenseStream = new StreamReader(licenseFile, UnicodeEncoding.UTF7);
                 Aspose.BarCode.Windows.Forms.BarCodeControl.SetLicense(licenseStream, this);
             </code>
             </example>
        </member>
        <member name="M:Aspose.BarCode.Windows.Forms.BarCodeControl.ShouldSerializeCheckSumVisible">
            <summary>
            CheckSumVisible will not persist
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aspose.BarCode.Windows.Forms.BarCodeControl.ShouldSerializeWidth2NarrowRatio">
            <summary>
            Width2NarrowRatio will not persist
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aspose.BarCode.Windows.Forms.BarCodeControl.ShouldSerializeCodeAlignment">
            <summary>
            CodeAlignment will not persist
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aspose.BarCode.Windows.Forms.BarCodeControl.ShouldSerializeMetafileImage">
            <summary>
            MetafileImage will not persist
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aspose.BarCode.Windows.Forms.BarCodeControl.ShouldSerializeResolutionPrinter">
            <summary>
            ResolutionPrinter will not persist
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aspose.BarCode.Windows.Forms.BarCodeControl.ShouldSerializeBitmapImage">
            <summary>
            BitmapImage will not persist
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aspose.BarCode.Windows.Forms.BarCodeControl.ShouldSerializeShowBorder">
            <summary>
            ShowBorder will not persist
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aspose.BarCode.Windows.Forms.BarCodeControl.ShouldSerializeImageMargins">
            <summary>
            ImageMargins will not persist
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aspose.BarCode.Windows.Forms.BarCodeControl.ShouldSerializeImageUnit">
            <summary>
            Image Unit will not be serialized
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aspose.BarCode.Windows.Forms.BarCodeControl.ShouldSerializeFont">
            <summary>
            Font will not persist
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aspose.BarCode.Windows.Forms.BarCodeControl.ShouldSerializeUPCNumberSystem">
            <summary>
            UPCNumberSystem will not persist
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aspose.BarCode.Windows.Forms.BarCodeControl.ShouldSerializeCodeColor">
            <summary>
            CodeColor will not persist
            </summary>
            <returns></returns>
        </member>
        <member name="P:Aspose.BarCode.Windows.Forms.BarCodeControl.SymbologyType">
            <summary>
            BarCode's symbology, type: Aspose.BarCode.SymbologyType see <see cref="T:Aspose.BarCode.Symbology"/>
            supported symbology: 
            1D:
            Codabar, Code11, Code128, Code39Standard, Code39Extended
            Code93Standard, Code93Extended, EAN13, EAN8, Interleaved2of5, 
            MSI, Standard2of5, UPCA, UPCE, EAN14(SCC14), SSCC18, ITF14
            2D:
            DataMatrix, PDf417
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Windows.Forms.BarCodeControl.CodeText">
            <summary>
            Data to be encoded, different types of BarCode may have different CodeText length restrictions
            see <see cref="P:Aspose.BarCode.Windows.Forms.BarCodeControl.EnableEscape"/> 
            see <seealso cref="P:Aspose.BarCode.Windows.Forms.BarCodeControl.CodeTextFont"/>
            see <seealso cref="P:Aspose.BarCode.Windows.Forms.BarCodeControl.CodeTextColor"/>
            see <seealso cref="P:Aspose.BarCode.Windows.Forms.BarCodeControl.CodeLocation"/>
            see <seealso cref="P:Aspose.BarCode.Windows.Forms.BarCodeControl.CodeTextSpace"/>
            see <seealso cref="P:Aspose.BarCode.Windows.Forms.BarCodeControl.CodeTextAlignment"/>
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Windows.Forms.BarCodeControl.ITF14BorderType">
            <summary>
            Border type of ITF14 barcode, quiet zone will be determined by margin settings.
            </summary>
            See <see cref="P:Aspose.BarCode.BarCodeBuilder.Margins"/>.
        </member>
        <member name="P:Aspose.BarCode.Windows.Forms.BarCodeControl.EnableEscape">
            <summary>
            Indicates whether explains the character "\" as an escape character in CodeText property.
            see <see cref="P:Aspose.BarCode.Windows.Forms.BarCodeControl.CodeText"/>
            <note>If the EnableEscape is true, "\" will be explained as a special escape character. Otherwise, "\" acts as normal characters.</note>
            <remarks>Aspose.BarCode supports inputing decimal ascii code and mnemonic for ASCII control-code characters, 0 through 31. For example, \013 and \CR stands for CR.</remarks>
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Windows.Forms.BarCodeControl.CodeTextFont">
            <summary>
             Specify the displaying CodeText's font
             see <see cref="P:Aspose.BarCode.Windows.Forms.BarCodeControl.CodeText"/>
             see <seealso cref="T:System.Drawing.Font"/>
             see <seealso cref="P:Aspose.BarCode.Windows.Forms.BarCodeControl.CodeTextColor"/>
             see <seealso cref="P:Aspose.BarCode.Windows.Forms.BarCodeControl.CodeLocation"/>
             see <seealso cref="P:Aspose.BarCode.Windows.Forms.BarCodeControl.CodeTextSpace"/>
             see <seealso cref="P:Aspose.BarCode.Windows.Forms.BarCodeControl.CodeTextAlignment"/>
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Windows.Forms.BarCodeControl.CodeTextColor">
            <summary>
            Specify the displaying CodeText's Color
            see <see cref="T:System.Drawing.Color"/>
            see <seealso cref="P:Aspose.BarCode.Windows.Forms.BarCodeControl.CodeText"/>
            see <seealso cref="P:Aspose.BarCode.Windows.Forms.BarCodeControl.CodeTextFont"/>
            see <seealso cref="P:Aspose.BarCode.Windows.Forms.BarCodeControl.CodeLocation"/>
            see <seealso cref="P:Aspose.BarCode.Windows.Forms.BarCodeControl.CodeTextSpace"/>
            see <seealso cref="P:Aspose.BarCode.Windows.Forms.BarCodeControl.CodeTextAlignment"/>
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Windows.Forms.BarCodeControl.CodeLocation">
            <summary>
            Specify the displaying CodeText's Location, set to CodeLocation.None to hide CodeText.
            CodeLocation will be ignored if SymbologyType is UPCE, UPCA, BooklandEAN, EAN8 or EAN13
            see <see cref="T:Aspose.BarCode.CodeLocation"/>
            see <seealso cref="P:Aspose.BarCode.Windows.Forms.BarCodeControl.CodeText"/>
            see <seealso cref="P:Aspose.BarCode.Windows.Forms.BarCodeControl.CodeTextFont"/>
            see <seealso cref="P:Aspose.BarCode.Windows.Forms.BarCodeControl.CodeLocation"/>
            see <seealso cref="P:Aspose.BarCode.Windows.Forms.BarCodeControl.CodeTextSpace"/>
            see <seealso cref="P:Aspose.BarCode.Windows.Forms.BarCodeControl.CodeTextAlignment"/>
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Windows.Forms.BarCodeControl.CodeTextSpace">
            <summary>
            Space between the CodeText and the BarCode.
            Default Graphics Unit: Millimeter 
            see <see cref="P:Aspose.BarCode.Windows.Forms.BarCodeControl.CodeText"/>
            see <see cref="P:Aspose.BarCode.Windows.Forms.BarCodeControl.CodeLocation"/>
            see <see cref="P:Aspose.BarCode.Windows.Forms.BarCodeControl.CodeTextFont"/>
            see <see cref="P:Aspose.BarCode.Windows.Forms.BarCodeControl.CodeTextColor"/>
            see <see cref="P:Aspose.BarCode.Windows.Forms.BarCodeControl.CodeTextAlignment"/>
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Windows.Forms.BarCodeControl.CodeTextAlignment">
            <summary>
            Gets or sets the alignment of the code text. 
            see <see cref="T:System.Drawing.StringAlignment"/>
            see <seealso cref="P:Aspose.BarCode.Windows.Forms.BarCodeControl.CodeText"/>
            see <seealso cref="P:Aspose.BarCode.Windows.Forms.BarCodeControl.CodeTextFont"/>
            see <seealso cref="P:Aspose.BarCode.Windows.Forms.BarCodeControl.CodeTextColor"/>
            </summary>
            <remarks>
            StringAlignment.Near means CodeText will be aligned to the left
            StringAlignment.Far means CodeText will be aligned to the right
            StringAlignment.Center means CodeText will be aligned to the center
            </remarks>
        </member>
        <member name="P:Aspose.BarCode.Windows.Forms.BarCodeControl.RotationAngle">
            <summary>
            Obsoleted, Use RotationAngleF instead
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Windows.Forms.BarCodeControl.RotationAngleF">
            <summary>
            BarCode image's rotation angle, measured in degree, e.g. RotationAngleF = 0 or RotationAngleF = 360 means no rotation
            If RotationAngleF NOT equal to 90, 180, 270 or 0, it may increase the difficulty for the scanner to read the image, please set quality mode to anti-alias
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Windows.Forms.BarCodeControl.AutoSize">
            <summary>
            Wether ajust image's size automatically. Recommended:true
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Windows.Forms.BarCodeControl.ImageWidth">
            <summary>
            BarCode image's width see <see cref="P:Aspose.BarCode.Windows.Forms.BarCodeControl.AutoSize"/>, if AutoSize is true, ImageWidth will 
            be increased accordingly
            Default Graphics Unit: Millimeter 
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Windows.Forms.BarCodeControl.ImageHeight">
            <summary>
            BarCode image's height see <see cref="P:Aspose.BarCode.Windows.Forms.BarCodeControl.AutoSize"/>, if AutoSize is true, Height will
            be increased accordingly
            Default Graphics Unit: Millimeter 
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Windows.Forms.BarCodeControl.CaptionAbove">
            <summary>
            Caption Above the BarCode image. see <see cref="T:Aspose.BarCode.Caption"/>
            CaptionAbove contains the following properties: 
            CaptionAbove.Font, 
            CaptionAbove.ForeColor, 
            CaptionAbove.Space, 
            CaptionAbove.Visible, 
            CaptionAbove.Text, 
            CaptionAbove.TextAlign
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Windows.Forms.BarCodeControl.CaptionBelow">
            <summary>
            Caption Below the BarCode image. see <see cref="T:Aspose.BarCode.Caption"/>
            CaptionBelow contains the following properties: 
            CaptionBelow.Font, 
            CaptionBelow.ForeColor, 
            CaptionBelow.Space, 
            CaptionBelow.Visible, 
            CaptionBelow.Text, 
            CaptionBelow.TextAlign
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Windows.Forms.BarCodeControl.GraphicsUnit">
            <summary>
            Measurement of various properties such as Width, Height etc. 
            Default GraphicsUnit: Millimeter
            see <see cref="T:System.Drawing.GraphicsUnit"/>
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Windows.Forms.BarCodeControl.Resolution">
            <summary>
            Gets or sets the resolution of the BarCode image
            see <see cref="T:Aspose.BarCode.Resolution"/>
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Windows.Forms.BarCodeControl.BorderWidth">
            <summary>
            BarCode Image's border's width
            Default Graphics Unit: Millimeter 
            see <see cref="P:Aspose.BarCode.Windows.Forms.BarCodeControl.BorderVisible"/>
            see <seealso cref="P:Aspose.BarCode.Windows.Forms.BarCodeControl.BorderDashStyle"/>
            see <seealso cref="P:Aspose.BarCode.Windows.Forms.BarCodeControl.BorderColor"/>
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Windows.Forms.BarCodeControl.BorderVisible">
            <summary>
            wether BarCode Image's border is visible
            see <see cref="P:Aspose.BarCode.Windows.Forms.BarCodeControl.BorderWidth"/>
            see <seealso cref="P:Aspose.BarCode.Windows.Forms.BarCodeControl.BorderDashStyle"/>
            see <seealso cref="P:Aspose.BarCode.Windows.Forms.BarCodeControl.BorderColor"/>
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Windows.Forms.BarCodeControl.BorderColor">
            <summary>
            BarCode Image's border's color
            see <see cref="T:System.Drawing.Color"/>
            see <see cref="P:Aspose.BarCode.Windows.Forms.BarCodeControl.BorderWidth"/>
            see <see cref="P:Aspose.BarCode.Windows.Forms.BarCodeControl.BorderVisible"/>
            see <see cref="P:Aspose.BarCode.Windows.Forms.BarCodeControl.BorderDashStyle"/>
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Windows.Forms.BarCodeControl.BorderDashStyle">
            <summary>
            BarCode Image's border's style
            see <see cref="T:Aspose.BarCode.BorderDashStyle"/>
            see <see cref="P:Aspose.BarCode.Windows.Forms.BarCodeControl.BorderWidth"/>
            see <see cref="P:Aspose.BarCode.Windows.Forms.BarCodeControl.BorderVisible"/>
            see <see cref="P:Aspose.BarCode.Windows.Forms.BarCodeControl.BorderColor"/>
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Windows.Forms.BarCodeControl.StartSymbolOfCodabar">
            <summary>
            Start symbol (character) of codabar symbology
            see <see cref="P:Aspose.BarCode.Windows.Forms.BarCodeControl.CodabarStopSymbol"/>
            see <see cref="T:Aspose.BarCode.CodabarSymbol"/>
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Windows.Forms.BarCodeControl.StopSymbolOfCodabar">
            <summary>
            Stop symbol (character) of codabar symbology
            see <see cref="P:Aspose.BarCode.Windows.Forms.BarCodeControl.CodabarStartSymbol"/>
            see <see cref="T:Aspose.BarCode.CodabarSymbol"/>
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Windows.Forms.BarCodeControl.CodabarStartSymbol">
            <summary>
            Start symbol (character) of codabar symbology
            see <see cref="P:Aspose.BarCode.Windows.Forms.BarCodeControl.CodabarStopSymbol"/>
            see <see cref="T:Aspose.BarCode.CodabarSymbol"/>
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Windows.Forms.BarCodeControl.CodabarStopSymbol">
            <summary>
            Stop symbol (character) of codabar symbology
            see <see cref="P:Aspose.BarCode.Windows.Forms.BarCodeControl.CodabarStartSymbol"/>
            see <see cref="T:Aspose.BarCode.CodabarSymbol"/>
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Windows.Forms.BarCodeControl.Code128CodeSet">
            <summary>
            "Code128 symbology type of barcode's code set, default to Code128CodeSet.Auto"
            see <see cref="T:Aspose.BarCode.Code128CodeSet"/>
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Windows.Forms.BarCodeControl.xDimension">
            <summary>
            x-dimension, smallest width unit of BarCode's bars or spaces.
            increase this will increase the whole barcode image's width if AutoSize is true
            Default Graphics Unit: Millimeter 
            see <see cref="P:Aspose.BarCode.Windows.Forms.BarCodeControl.yDimension"/>
            see <see cref="P:Aspose.BarCode.Windows.Forms.BarCodeControl.AutoSize"/>
            see <see cref="P:Aspose.BarCode.Windows.Forms.BarCodeControl.BarHeight"/>
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Windows.Forms.BarCodeControl.yDimension">
            <summary>
            y-dimension, smallest height unit of 2D BarCode's modules. 
            Some square symbols (such as DataMatrix) may ignore this and
            use x-dimension for both width unit and height unit
            
            In 2D barcode, y-dimension * rows determines BarCode's height
            In 1D barcode, BarHeight determines BarCode's height.
            Default Graphics Unit: Millimeter 
            see <see cref="P:Aspose.BarCode.Windows.Forms.BarCodeControl.xDimension"/>
            see <see cref="P:Aspose.BarCode.Windows.Forms.BarCodeControl.BarHeight"/>
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Windows.Forms.BarCodeControl.BarHeight">
            <summary>
            height of 1D barcodes' bars.
            In 2D barcode, y-dimension * rows determines BarCode's height
            In 1D barcode, BarHeight determines BarCode's height.
            Default Graphics Unit: Millimeter 
            see <see cref="P:Aspose.BarCode.Windows.Forms.BarCodeControl.yDimension"/>
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Windows.Forms.BarCodeControl.ForeColor">
            <summary>
            Foreground color of the barcode image, that is, 
            Bar's color of 1D barcode, Module's color of 2D barcode
            see <see cref="T:System.Drawing.Color"/>
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Windows.Forms.BarCodeControl.BackColor">
            <summary>
            Background color of the barcode image
            see <see cref="T:System.Drawing.Color"/>
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Windows.Forms.BarCodeControl.EnableChecksum">
            <summary>
            Enable check sum. Appliable symbology: Code11, Code39Extended, Code39Standard, 
            Code93Extended, Code93Standard, Interleaved2of5, Standard2of5
            The following SymbologyType always include checksum:
            EAN13, EAN8, BooklandEAN
            see <see cref="T:Aspose.BarCode.Symbology"/>
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Windows.Forms.BarCodeControl.AspectRatio">
            <summary>
            2D BarCode's module's height/width ratio (yDimension/xDimension). 
            calculated based on xDimension set to 0 means 
            not using this feature.
            see <see cref="P:Aspose.BarCode.Windows.Forms.BarCodeControl.xDimension"/>
            see <see cref="P:Aspose.BarCode.Windows.Forms.BarCodeControl.yDimension"/>
            </summary>
            <remarks>
            Some 2D BarCodes are square shaped, then AspectRatio is not appliable
            </remarks>
        </member>
        <member name="P:Aspose.BarCode.Windows.Forms.BarCodeControl.Columns">
            <summary>
            2D BarCode's columns, if setting is illegal then columns will be calculated automatically
            appliable SymbologyType: Pdf417
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Windows.Forms.BarCodeControl.Rows">
            <summary>
            2D BarCode's rows, if setting is illegal then rows will be calculated automatically
            appliable SymbologyType: Pdf417
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Windows.Forms.BarCodeControl.DataMatrixEncodeMode">
            <summary>
            Encode mode of Datamatrix barcode, default to Auto
            see <see cref="T:Aspose.BarCode.DataMatrixEncodeMode">DataMatrixEncodeMode </see>.
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Windows.Forms.BarCodeControl.Pdf417CompactionMode">
            <summary>
            Pdf417 symbology type of BarCode's compaction mode, default compaction mode is <bode>Auto</bode>
            see <see cref="T:Aspose.BarCode.Pdf417CompactionMode"/>
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Windows.Forms.BarCodeControl.Pdf417Truncate">
            <summary>
            whether pdf417 symbology type of BarCode is truncated (to reduce space)
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Windows.Forms.BarCodeControl.Pdf417ErrorLevel">
            <summary>
            Gets or sets Pdf417 symbology type of BarCode's error coccrection level
            ranging from level0 to level9, level0 means no error correction info, 
            level9 means best error correction which means a larger picture
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Windows.Forms.BarCodeControl.WideNarrowRatio">
            <summary>
            Wide bars to Narrow bars ratio for some 1D BarCode. 
            Default WideNarrowRatio:3, that is, wide bars are 3 times as wide as narrow bars
            Appliable symbology: Code39Extended, Code39Standard, Standard2of5, Interleaved2of5
            see <see cref="T:Aspose.BarCode.Symbology"/>
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Windows.Forms.BarCodeControl.Margins">
            <summary>
            Margin area around the core BarCode image
            If AutoSize is false, then Width and Height is fixed, thus Margins setting will be ignored
            Default Graphics Unit: Millimeter 
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Windows.Forms.BarCodeControl.SupplementData">
            <summary>
            Supplement data following BarCodes of symbology UPCA, UPCE, EAN13, EAN8, BooklandEAN, Interleaved2of5 or Standard2of5.
            see <see cref="T:Aspose.BarCode.Symbology"/>
            see <see cref="P:Aspose.BarCode.Windows.Forms.BarCodeControl.SupplementSpace"/>
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Windows.Forms.BarCodeControl.SupplementSpace">
            <summary>
            Space between main the BarCode and supplement BarCode, default Graphics Unit: millimeter
            see <see cref="T:System.Drawing.GraphicsUnit"/>
            see <see cref="P:Aspose.BarCode.Windows.Forms.BarCodeControl.SupplementData"/>
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Windows.Forms.BarCodeControl.PrinterName">
            <summary>
            Choose printer, if not specified, Print() method will choose the first available printer
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Windows.Forms.BarCodeControl.ImageQuality">
            <summary>
            Graphics quality mode, when RotationAngleF not equal to 0, 90, 180 or 270, do set quality mode to anti-alias. Type: Aspose.BarCode.ImageQualityMode
            see <see cref="T:Aspose.BarCode.ImageQualityMode"/>
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Windows.Forms.BarCodeControl.QRErrorLevel">
            <summary>
             Level of Reed-Solomon error correction for QR barcode. From low to high: LevelL, LevelM, LevelQ, LevelH. see <see cref="T:Aspose.BarCode.QRErrorLevel">QRErrorLevel</see>.
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Windows.Forms.BarCodeControl.BarCodeImage">
            <summary>
            Gets the BarCode Image. Type:Bitmap
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Windows.Forms.BarCodeControl.BorderMargins">
            <summary>
            Obsolete
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Windows.Forms.BarCodeControl.PostnetShortBarHeight">
            <summary>
            Short bar's height of Postnet barcode, it has to be between 1 millimeter and 1.5 milimeter (0.04 inch and 0.06 inch). To set up tall bar's height, see BarHeight, which has to be between 8.28 milimeter and 9.72 milimeter (0.115 inch and 0.135 inch)
            see changing see <see cref="T:System.Drawing.GraphicsUnit">GraphicsUnit</see>.
            see setting tall bar's height: see <see cref="P:Aspose.BarCode.Windows.Forms.BarCodeControl.BarHeight">BarHeight</see>.
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Windows.Forms.BarCodeControl.PlanetShortBarHeight">
            <summary>
            Short bar's height of Planet barcode, it has to be between 1 millimeter and 1.5 milimeters.
            see changing see <see cref="T:System.Drawing.GraphicsUnit">GraphicsUnit</see>.
            see setting tall bar's height: see <see cref="P:Aspose.BarCode.Windows.Forms.BarCodeControl.BarHeight">BarHeight</see>.
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Windows.Forms.BarCodeControl.AztectErrorLevel">
            <summary>
            Level of error corection of Aztect types of barcode. value should between 10 to 95
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Windows.Forms.BarCodeControl.CheckSumVisible">
            <summary>
            Gets or sets a value indicates whether the check sum digits shown in the code text. Only appliable to 1D BarCodes
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Windows.Forms.BarCodeControl.Width2NarrowRatio">
            <summary>
            Gets or sets the ratio of wide/narrow bar for some 1D barcode symbologies
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Windows.Forms.BarCodeControl.CodeAlignment">
            <summary>
            Gets or sets the see <see cref="T:System.Drawing.StringAlignment"> alignment</see> of the code text in the image. Only applicable to 1D BarCodes
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Windows.Forms.BarCodeControl.MetafileImage">
            <summary>
            Use BarCodeControl.BarCodeImage.Save method to obtain meta file
            </summary>		
        </member>
        <member name="P:Aspose.BarCode.Windows.Forms.BarCodeControl.ResolutionPrinter">
            <summary>
            Obsoleted
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Windows.Forms.BarCodeControl.BitmapImage">
            <summary>
            Obsoleted
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Windows.Forms.BarCodeControl.ShowBorder">
            <summary>
            Obsoleted
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Windows.Forms.BarCodeControl.ImageMargins">
            <summary>
            Obsoleted
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Windows.Forms.BarCodeControl.ImageUnit">
            <summary>
            Obsoleted
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Windows.Forms.BarCodeControl.Font">
            <summary>
            Obsoleted
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Windows.Forms.BarCodeControl.UPCNumberSystem">
            <summary>
            Gets or sets the Number System of the UPC-A or UPC-E barcode specification.
            </summary>
        </member>
        <member name="P:Aspose.BarCode.Windows.Forms.BarCodeControl.CodeColor">
            <summary>
            obsolete: use CodeTextColor instead
            </summary>
        </member>
        <member name="T:AssemblyConstants">
            <summary>
            Defines the constants that participate in the license check for the component.
            These used to be defined directly as assembly attributes, but I moved them into 
            separate class because in .NET Compact Framework I cannot access assembly attributes.
            Now the licensing code when compiled for the .NET Compact Framework uses these constants
            instead of the assembly attributes.
            </summary>
        </member>
        <member name="F:AssemblyConstants.Product">
            <summary>
            This is used by Aspose licensing code to verify the license is for the correct product.
            </summary>
        </member>
        <member name="F:AssemblyConstants.ReleaseDate">
            <summary>
            This is used by Aspose licensing code to check for subscription expiry.
            You need to set this to the date you publish a release or a hotfix.
            </summary>
        </member>
        <member name="T:Aspose.BarCode.BarCodeException">
            <summary>
             Represents the exception for creating barcode image.
            </summary>
        </member>
        <member name="M:Aspose.BarCode.BarCodeException.#ctor">
            <summary>
            Initilize an instance of <see cref="T:Aspose.BarCode.BarCodeException">BarCodeException</see> class
            </summary>
        </member>
        <member name="M:Aspose.BarCode.BarCodeException.#ctor(System.String)">
            <summary>
            Initilize an instance of <see cref="T:Aspose.BarCode.BarCodeException">BarCodeException</see> class with specified error message.
            </summary>
            <param name="message">The error message of the exception.</param>
        </member>
        <member name="M:Aspose.BarCode.BarCodeException.#ctor(System.String,System.Exception)">
            <summary>
            Initilize an instance of <see cref="T:Aspose.BarCode.BarCodeException">BarCodeException</see> class with the specified error message and the current exception.
            </summary>
            <param name="message">The error message of the exception.</param>
            <param name="innerException">The current exception is thrown.</param>
        </member>
        <member name="T:Aspose.BarCode.InvalidCodeException">
            <summary>
            The Exception will be thrown when invalid characters contained in the code text.
            </summary>
        </member>
        <member name="M:Aspose.BarCode.InvalidCodeException.#ctor(Aspose.BarCode.Symbology)">
            <summary>
            Initialize an instance of <see cref="T:Aspose.BarCode.InvalidCodeException">InvalidCodeException</see> class with specified barcode specification type.
            </summary>
            <param name="symbologyType"></param>
        </member>
        <member name="M:Aspose.BarCode.InvalidCodeException.#ctor(System.String)">
            <summary>
            Exception
            </summary>
            <param name="message"></param>
        </member>
        <member name="T:Aspose.BarCode.RecognitionException">
            <summary>
            General exception thrown by BarCodeReader, inherited from BarCodeException
            </summary>
        </member>
        <member name="M:Aspose.BarCode.RecognitionException.#ctor(System.String)">
            <summary>
            Constructure
            </summary>
            <param name="message">error message</param>
        </member>
        <member name="T:Aspose.BarCode.Symbology">
            <summary>
            Specifies the type of barcode specification.
            </summary>
        </member>
        <member name="F:Aspose.BarCode.Symbology.Codabar">
            <summary>
            Specifies that the data should be encoded with <b>CODABAR</b> barcode specification 
            </summary>
        </member>
        <member name="F:Aspose.BarCode.Symbology.Code11">
            <summary>
            Specifies that the data should be encoded with <b>CODE 11</b> barcode specification 
            </summary>
        </member>
        <member name="F:Aspose.BarCode.Symbology.Code128">
            <summary>
            Specifies that the data should be encoded with <b>CODE 128</b> barcode specification 
            </summary>
        </member>
        <member name="F:Aspose.BarCode.Symbology.Code39Extended">
            <summary>
            Specifies that the data should be encoded with <b>Extended CODE 39</b> barcode specification 
            </summary>
        </member>
        <member name="F:Aspose.BarCode.Symbology.Code93Extended">
            <summary>
            Specifies that the data should be encoded with <b>Extended CODE 93</b> barcode specification 
            </summary>
        </member>
        <member name="F:Aspose.BarCode.Symbology.DataMatrix">
            <summary>
            2D barcode symbology DataMatrix
            </summary>
        </member>
        <member name="F:Aspose.BarCode.Symbology.EAN13">
            <summary>
            Specifies that the data should be encoded with <b>EAN-13</b> barcode specification 
            </summary>
        </member>
        <member name="F:Aspose.BarCode.Symbology.EAN8">
            <summary>
            Specifies that the data should be encoded with <b>EAN-8</b> barcode specification 
            </summary>
        </member>
        <member name="F:Aspose.BarCode.Symbology.Interleaved2of5">
            <summary>
            Specifies that the data should be encoded with <b>INTERLEAVED 2 of 5</b> barcode specification 
            </summary>
        </member>
        <member name="F:Aspose.BarCode.Symbology.ITF14">
            <summary>
            Specifies that the data should be encoded with <b>ITF14</b> barcode specification
            </summary>
        </member>
        <member name="F:Aspose.BarCode.Symbology.Pdf417">
            <summary>
            2D barcode symbology Pdf417
            </summary>
        </member>
        <member name="F:Aspose.BarCode.Symbology.Planet">
            <summary>
            Specifies that the data should be encoded with <b>Planet</b> barcode specification
            </summary>
        </member>
        <member name="F:Aspose.BarCode.Symbology.Postnet">
            <summary>
            Specifies that the data should be encoded with <b>Postnet</b> barcode specification 
            </summary>
        </member>
        <member name="F:Aspose.BarCode.Symbology.QR">
            <summary>
            Specifies that the data should be encoded with <b>QR Code</b> barcode specification
            </summary>
        </member>
        <member name="F:Aspose.BarCode.Symbology.UPCA">
            <summary>
            Specifies that the data should be encoded with <b>UPC-A</b> barcode specification 
            </summary>
        </member>
        <member name="F:Aspose.BarCode.Symbology.UPCE">
            <summary>
            Specifies that the data should be encoded with <b>UPC-E</b> barcode specification 
            </summary>
        </member>
        <member name="F:Aspose.BarCode.Symbology.Code39Standard">
            <summary>
            Specifies that the data should be encoded with <b>Standard CODE 39</b> barcode specification 
            </summary>
        </member>
        <member name="F:Aspose.BarCode.Symbology.Code93Standard">
            <summary>
            Specifies that the data should be encoded with <b>Standard CODE 93</b> barcode specification 
            </summary>
        </member>
        <member name="F:Aspose.BarCode.Symbology.MSI">
            <summary>
            Specifies that the data should be encoded with <b>MSI Plessey</b> barcode specification 
            </summary>
        </member>
        <member name="F:Aspose.BarCode.Symbology.Standard2of5">
            <summary>
            Specifies that the data should be encoded with <b>Standard 2 of 5</b> barcode specification 
            </summary>
        </member>
        <member name="F:Aspose.BarCode.Symbology.BooklandEAN">
            <summary>
            Specifies that the data should be encoded with <b>Bookland-EAN</b> barcode specification 
            </summary>
        </member>
        <member name="F:Aspose.BarCode.Symbology.EAN128">
            <summary>
            Specifies that the data should be encoded with <b>EAN128</b> barcode specification 
            </summary>
        </member>
        <member name="F:Aspose.BarCode.Symbology.Aztec">
            <summary>
            Specifies that the data should be encoded with <b>Aztec</b> barcode specification
            </summary>
        </member>
        <member name="F:Aspose.BarCode.Symbology.EAN14">
            <summary>
            Specifies that the data should be encoded with <b>EAN14/ SCC14</b> barcode specification
            </summary>
        </member>
        <member name="F:Aspose.BarCode.Symbology.SSCC18">
            <summary>
            Specifies that the data should be encoded with <b>SSCC18</b> barcode specification
            </summary>
        </member>
    </members>
</doc>
