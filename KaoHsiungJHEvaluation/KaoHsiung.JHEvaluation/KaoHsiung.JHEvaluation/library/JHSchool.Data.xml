<?xml version="1.0"?>
<doc>
    <assembly>
        <name>JHSchool.Data</name>
    </assembly>
    <members>
        <member name="T:JHSchool.Data.JHUpdateReocrdBatchRecord">
            <summary>
            異動名冊記錄物件
            </summary>
        </member>
        <member name="T:JHSchool.Data.JHTagConfig">
            <summary>
            標籤設定類別，提供方法用來取得、新增、修改及刪除標籤設定
            </summary>
        </member>
        <member name="M:JHSchool.Data.JHTagConfig.SelectAll">
            <summary>
            取得所有標籤設定列表。
            </summary>
            <returns>List&lt;JHTagConfigRecord&gt;，代表多筆標籤設定物件。</returns>
            <seealso cref="T:JHSchool.Data.JHTagConfigRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;JHTagConfigRecord&gt; records = JHTagConfig.SelectAll();
                
                foreach(JHTagConfigRecord record in records)
                    System.Console.Writeln(record.Name); 
                </code>
            </example>
            <remarks></remarks>        
        </member>
        <member name="M:JHSchool.Data.JHTagConfig.SelectByID(System.String)">
            <summary>
            根據單筆標籤設定編號取得標籤設定物件。
            </summary>
            <param name="TagConfigRecordID">標籤設定編號</param>
            <returns>JHTagConfigRecord，代表單筆標籤設定物件。</returns>
            <seealso cref="T:JHSchool.Data.JHTagConfigRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                JHTagConfigRecord record = JHTagConfig.SelectByID(TagConfigID);
                
               if (record != null)
                   System.Console.WriteLine(record.Name);
                </code>
            </example>
            <remarks>若是TagConfigID不則在則會傳回null</remarks>
        </member>
        <member name="M:JHSchool.Data.JHTagConfig.SelectByIDs(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            根據多筆標籤設定編號取得標籤設定物件。
            </summary>
            <param name="TagConfigIDs">多筆標籤設定編號</param>
            <returns>List&lt;JHTagConfigRecord&gt;，代表多筆標籤設定物件。</returns>
            <seealso cref="T:JHSchool.Data.JHTagConfigRecord"/> 
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;JHTagConfigRecord&gt; records = JHTagConfig.SelectByIDs(TagConfigIDs);
                
                foreach(JHTagConfigRecord record in records)
                    Console.WrlteLine(record.Name);
                </code>
            </example>
            <remarks>可能情況若是傳5筆ID，但是其中1筆沒有資料，就只會回傳4筆資料</remarks>
        </member>
        <member name="M:JHSchool.Data.JHTagConfig.SelectByCategory(K12.Data.TagCategory)">
             <summary>
             根據標籤設定所屬分類( TagCategory )，取得該分類的標籤設定
             </summary>
             <param name="TagCategory">標籤設定所屬分類，參考 TagCategory 列舉型別。</param>
             <returns>List&lt;JHTagConfigRecord&gt;，指定標籤分類中的所有標籤設定</returns>
             <seealso cref="T:K12.Data.TagCategory"/>
             <seealso cref="T:JHSchool.Data.JHTagConfigRecord"/>
             <exception cref="T:System.Exception">
             </exception>
             <example>
                 <code>
                 List&lt;JHTagConfigRecord&gt; records = JHTagConfig.SelectByCategory(TagCategory.Student);
                 
                 foreach(JHTagConfigRecord record in records)
                     Console.WrlteLine(record.Name);
                 </code>
            </example>
            <remarks>傳入的參數可為TagCategory.Student、TagCategory.Class、TagCategory、Teacher、TagCategory.Course</remarks>
        </member>
        <member name="M:JHSchool.Data.JHTagConfig.SelectByCategoryAndPrefix(K12.Data.TagCategory,System.String)">
            <summary>
            根據標籤設定所屬分類( TagCategory )以及標籤設定類別（Prefix），取得該分類的標籤設定
            </summary>
            <param name="TagCategory">標籤設定所屬分類，參考 TagCategory 列舉型別。</param>
            <param name="Prefix">標籤設定類別（Prefix）</param>
            <returns>List&lt;JHTagConfigRecord&gt;，多筆標籤設定</returns>
            <seealso cref="T:K12.Data.TagCategory"/>
            <seealso cref="T:JHSchool.Data.JHTagConfigRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    List&lt;string&gt; records = JHTagConfig.SelectPrefixByCategory(TagCategory.Student);
                
                    foreach(string record in records)
                        Console.WrlteLine(record);
                </code>
            </example>
        </member>
        <member name="M:JHSchool.Data.JHTagConfig.Insert(JHSchool.Data.JHTagConfigRecord)">
            <summary>
            新增單筆標籤設定記錄
            </summary>
            <param name="TagConfigRecord">標籤設定記錄物件</param>
            <returns>string，傳回新增物件的系統編號。</returns>
            <seealso cref="T:JHSchool.Data.JHTagConfigRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    JHTagConfigRecord newrecord = new JHTagConfigRecord();
                    newrecord.Prefix = (new System.Random()).NextDouble().ToString();
                    newrecord.Name = (new System.Random()).NextDouble().ToString();
                    newrecord.Category = "student";
                    strng NewID = JHTagConfig.Insert(newrecord)
                    JHTagConfigRecord record = JHTagConfig.SelectByID(NewID);
                    System.Console.Writeln(record.Name);
                </code>
            </example>
            <remarks>
            新增一律傳回新增物件的編號。
            </remarks>
        </member>
        <member name="M:JHSchool.Data.JHTagConfig.Insert(System.Collections.Generic.IEnumerable{JHSchool.Data.JHTagConfigRecord})">
            <summary>
            新增多筆標籤設定記錄
            </summary>
            <param name="TagConfigRecords">多筆標籤設定記錄物件</param> 
            <returns>List&lt;string&gt;，傳回新增物件的系統編號列表。</returns>
            <seealso cref="T:JHSchool.Data.JHTagConfigRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    JHTagConfigRecord record = new JHTagConfigRecord();
                    record.Prefix = (new System.Random()).NextDouble().ToString();
                    record.Name = (new System.Random()).NextDouble().ToString();
                    record.Category = "student";
                    List&lt;JHTagConfigRecord&gt; records = new List&lt;JHTagConfigRecord&gt;();
                    records.Add(record);
                    List&lt;string&gt; NewID = JHTagConfig.Insert(records);
                </code>
            </example>
        </member>
        <member name="M:JHSchool.Data.JHTagConfig.Update(JHSchool.Data.JHTagConfigRecord)">
            <summary>
            更新單筆標籤設定記錄
            </summary>
            <param name="TagConfigRecord">標籤設定記錄物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHTagConfigRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                JHTagConfigRecord record = JHTagConfig.SelectByID(TagConfigID);
                record.Name = (new System.Random()).NextDouble().ToString();
                int UpdateCount = JHTagConfig.Update(record);
                </code>
            </example>
            <remarks>傳回值為成功更新的筆數。</remarks>
        </member>
        <member name="M:JHSchool.Data.JHTagConfig.Update(System.Collections.Generic.IEnumerable{JHSchool.Data.JHTagConfigRecord})">
            <summary>
            更新多筆標籤設定記錄
            </summary>
            <param name="TagConfigRecords">多筆標籤設定記錄</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHTagConfigRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                JHTagConfigRecord record = JHTagConfig.SelectByID(TagConfigID);
                record.Name = (new System.Random()).NextDouble().ToString();
                List&lt;JHTagConfigRecord&gt; records = new List&lt;JHTagConfigRecord&gt;();
                records.Add(record);
                int UpdateCount = JHTagConfig.Update(records);
                </code>
            </example>
            <remarks>傳回值為成功更新的筆數。</remarks>
        </member>
        <member name="M:JHSchool.Data.JHTagConfig.Delete(System.Collections.Generic.IEnumerable{JHSchool.Data.JHTagConfigRecord})">
            <summary>
            刪除多筆標籤設定記錄
            </summary>
            <param name="TagConfigRecords">多筆標籤設定記錄物件</param>
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHTagConfigRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                  List&lt;JHTagConfigRecord&gt; records = JHTagConfig.SelectByIDs(TagConfigIDs);
                  int DeleteCount = JHTagConfig.Delete(records);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>
        </member>
        <member name="M:JHSchool.Data.JHTagConfig.Delete(JHSchool.Data.JHTagConfigRecord)">
            <summary>
            刪除單筆標籤設定記錄
            </summary>
            <param name="TagConfigRecord">標籤設定記錄物件</param>
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHTagConfigRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                  JHTagConfigRecord record = JHTagConfig.SelectByID(TagConfigID);
                  int DeleteCount = JHTagConfig.Delete(record);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>
        </member>
        <member name="M:JHSchool.Data.JHTagConfig.Delete(System.String)">
            <summary>
            刪除單筆標籤設定記錄
            </summary>
            <param name="TagConfigID">標籤設定記錄編號</param>
            <returns>int，傳回成功更新的筆數。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                  int DeleteCount = JHTagConfig.Delete(TagConfigID);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>
        </member>
        <member name="M:JHSchool.Data.JHTagConfig.Delete(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            刪除多筆標籤設定記錄
            </summary>
            <param name="TagConfigIDs">多筆標籤設定記錄編號</param>
            <returns>int，傳回成功更新的筆數。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                  int DeleteCount = TagConfig.Delete(TagConfigIDs);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>
        </member>
        <member name="T:JHSchool.Data.JHSCAttend">
            <summary>
            學生修課類別，提供方法用來取得、新增、修改及刪除學生修課資訊
            </summary>
        </member>
        <member name="M:JHSchool.Data.JHSCAttend.SelectAll">
            <summary>
            取得所有學生修課列表。
            </summary>
            <returns>List&lt;JHSCAttendRecord&gt;，代表多筆學生修課記錄物件。</returns>
            <seealso cref="T:JHSchool.Data.JHSCAttendRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                List&lt;SCAttendRecord&gt; records = JHSCAttend.SelectAll();
            </example>
        </member>
        <member name="M:JHSchool.Data.JHSCAttend.Select(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.String,System.String)">
            <summary>
            根據條件取得學生修課列表。
            </summary>
            <param name="StudentIDs">多筆學生編號</param>
            <param name="CourseIDs">多筆課程編號</param>
            <param name="SCAttendIDs">多筆學生修課列表</param>
            <param name="SchoolYear">學年度</param>
            <param name="Semester">學期</param>
            <returns>List&lt;JHSCAttendRecord&gt;，代表多筆學生修課記錄物件。</returns>
        </member>
        <member name="M:JHSchool.Data.JHSCAttend.SelectByID(System.String)">
            <summary>
            根據單筆學生修課編號取得學生修課列表。
            </summary>
            <param name="SCAttendID">單筆學生修課編號</param>
            <returns>JHSCAttendRecord，代表單筆學生修課記錄物件。</returns>
            <seealso cref="T:JHSchool.Data.JHSCAttendRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                JHSCAttendRecord record = JHSCAttend.SelectByID(SCAttendID);
            </example>
        </member>
        <member name="M:JHSchool.Data.JHSCAttend.SelectByIDs(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            根據多筆學生修課編號取得學生修課列表。
            </summary>
            <param name="SCAttendIDs">多筆學生修課編號</param>
            <returns>List&lt;JHSCAttendRecord&gt;，代表多筆學生修課記錄物件。</returns>
            <seealso cref="T:JHSchool.Data.JHSCAttendRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                List&lt;JHSCAttendRecord&gt; records = JHSCAttend.SelectByIDs(SCAttendIDs);
            </example>
        </member>
        <member name="M:JHSchool.Data.JHSCAttend.SelectByStudentIDAndCourseID(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            根據多筆學生編號及多筆課程編號取得學生修課列表。
            </summary>
            <param name="StudentIDs">多筆學生編號</param>
            <param name="CourseIDs">多筆課程編號</param>
            <returns>List&lt;SCAttendRecord&gt;，代表多筆學生修課記錄物件。</returns>
            <seealso cref="T:JHSchool.Data.JHSCAttendRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                List&lt;JHSCAttendRecord&gt; records = JHSCAttend.GetByStudentIDsAndCourseIDs(StudentIDs,CourseIDs);
            </example>
        </member>
        <member name="M:JHSchool.Data.JHSCAttend.SelectByStudentID(System.String)">
            <summary>
            根據單筆學生編號取得學生修課列表。
            </summary>
            <param name="StudentID">單筆學生編號</param>
            <returns>List&lt;JHSCAttendRecord&gt;，代表多筆學生修課記錄物件。</returns>
            <seealso cref="T:JHSchool.Data.JHSCAttendRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                List&lt;JHSCAttendRecord&gt; records = JHSCAttend.SelectByStudentID(StudentID);
            </example>
        </member>
        <member name="M:JHSchool.Data.JHSCAttend.SelectByStudentIDs(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            根據多筆學生編號取得學生修課列表。
            </summary>
            <param name="StudentIDs">多筆學生編號</param>
            <returns>List&lt;JHSCAttendRecord&gt;，代表多筆學生修課記錄物件。</returns>
            <seealso cref="T:JHSchool.Data.JHSCAttendRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                List&lt;JHSCAttendRecord&gt; records = JHSCAttend.SelectByStudentIDs(StudentIDs);
            </example>
        </member>
        <!-- 忽略成員 "M:JHSchool.Data.JHSCAttend.Insert(JHSchool.Data.JHSCAttendRecord)" 中格式錯誤的 XML 註解 -->
        <!-- 忽略成員 "M:JHSchool.Data.JHSCAttend.Insert(System.Collections.Generic.IEnumerable{JHSchool.Data.JHSCAttendRecord})" 中格式錯誤的 XML 註解 -->
        <member name="M:JHSchool.Data.JHSCAttend.Update(JHSchool.Data.JHSCAttendRecord)">
            <summary>
            更新單筆學生修課記錄
            </summary>
            <param name="SCAttendRecord">學生修課記錄物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHSCAttendRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:JHSchool.Data.JHSCAttend.Update(System.Collections.Generic.IEnumerable{JHSchool.Data.JHSCAttendRecord})">
            <summary>
            更新多筆學生修課記錄
            </summary>
            <param name="SCAttendRecords">多筆學生修課記錄</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHSCAttendRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:JHSchool.Data.JHSCAttend.Delete(JHSchool.Data.JHSCAttendRecord)">
            <summary>
            刪除單筆學生修課記錄
            </summary>
            <param name="SCAttendRecord">學生修課記錄物件</param> 
            <returns>int，傳回成功刪除的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHSCAttendRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:JHSchool.Data.JHSCAttend.Delete(System.String)">
            <summary>
            刪除單筆學生修課記錄
            </summary>
            <param name="SCAttendID">學生修課編號</param> 
            <returns>int，傳回成功刪除的筆數。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:JHSchool.Data.JHSCAttend.Delete(System.Collections.Generic.IEnumerable{JHSchool.Data.JHSCAttendRecord})">
            <summary>
            刪除多筆學生修課記錄
            </summary>
            <param name="SCAttendRecords">多筆學生修課記錄物件</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <seealso cref="T:K12.Data.SCAttendRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:JHSchool.Data.JHSCAttend.Delete(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            刪除多筆學生修課記錄
            </summary>
            <param name="SCAttendIDs">多筆學生修課編號</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="T:JHSchool.Data.JHUpdateRecordRecord">
            <summary>
            學生異動記錄資訊
            </summary>
        </member>
        <member name="P:JHSchool.Data.JHUpdateRecordRecord.Student">
            <summary>
            所屬學生
            </summary>
        </member>
        <member name="P:JHSchool.Data.JHUpdateRecordRecord.OriginAddress">
            <summary>
            地址，一般是從學生（StudentRecord、AddressRecord）複製過來的地址
            </summary>
        </member>
        <member name="P:JHSchool.Data.JHUpdateRecordRecord.OriginClassName">
            <summary>
            班級名稱，一般是從學生（StudentRecord）身上複製過來的班級名稱
            </summary>
        </member>
        <member name="P:JHSchool.Data.JHUpdateRecordRecord.SeatNo">
            <summary>
            座號，一般是從學生（StudentRecord）身上複製過來的座號
            </summary>
        </member>
        <member name="P:JHSchool.Data.JHUpdateRecordRecord.NewIDNumber">
            <summary>
            異動後的身份證字號
            </summary>
        </member>
        <member name="P:JHSchool.Data.JHUpdateRecordRecord.NewName">
            <summary>
            異動後的姓名
            </summary>
        </member>
        <member name="P:JHSchool.Data.JHUpdateRecordRecord.NewBirthday">
            <summary>
            異動後的生日
            </summary>
        </member>
        <member name="P:JHSchool.Data.JHUpdateRecordRecord.NewGender">
            <summary>
            異動後的性別
            </summary>
        </member>
        <member name="P:JHSchool.Data.JHUpdateRecordRecord.GraduateSchool">
            <summary>
            畢業國小
            </summary>
        </member>
        <member name="P:JHSchool.Data.JHUpdateRecordRecord.EnrollmentSchoolYear">
            <summary>
            入學年月
            </summary>
        </member>
        <member name="P:JHSchool.Data.JHUpdateRecordRecord.GraduateCertificateNumber">
            <summary>
            畢業證書字號
            </summary>
        </member>
        <member name="P:JHSchool.Data.JHUpdateRecordRecord.GraduateSchoolYear">
            <summary>
            畢業年月
            </summary>
        </member>
        <member name="P:JHSchool.Data.JHUpdateRecordRecord.BirthPlace">
            <summary>
            出生地
            </summary>
        </member>
        <member name="P:JHSchool.Data.JHUpdateRecordRecord.Graduate">
            <summary>
            畢修業別，分為畢業及修業。
            </summary>
        </member>
        <member name="P:JHSchool.Data.JHUpdateRecordRecord.ImportExportSchool">
            <summary>
            轉出入學校，轉入或轉出學校。
            </summary>
        </member>
        <member name="T:JHSchool.Data.JHPhoneRecord">
            <summary>
            學生電話資訊
            </summary>
        </member>
        <member name="P:JHSchool.Data.JHPhoneRecord.Student">
            <summary>
            所屬學生
            </summary>
        </member>
        <member name="T:JHSchool.Data.JHProgramPlan">
            <summary>
            課程規劃類別，提供方法用來取得、新增、修改及刪除課程規劃資訊
            </summary>
        </member>
        <member name="M:JHSchool.Data.JHProgramPlan.SelectAllDetail">
            <summary>
            取得所有課程規劃明細列表。
            </summary>
            <returns></returns>
        </member>
        <member name="M:JHSchool.Data.JHProgramPlan.SelectAll">
            <summary>
            取得所有課程規劃列表。
            </summary>
            <returns>List&lt;JHProgramPlanRecord&gt;，代表多筆課程規劃記錄物件。</returns>
            <seealso cref="T:JHSchool.Data.JHProgramPlanRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;JHProgramPlanRecord&gt; records = ProgramPlan.SelectAll();
                </code>
            </example>
        </member>
        <member name="M:JHSchool.Data.JHProgramPlan.SelectByID(System.String)">
            <summary>
            根據單筆課程規劃編號取得課程規劃物件。
            </summary>
            <param name="ProgramPalnID">課程規劃篇號</param>
            <returns>JHProgramPlanRecord</returns>
            <seealso cref="T:JHSchool.Data.JHProgramPlanRecord"/>
        </member>
        <member name="M:JHSchool.Data.JHProgramPlan.SelectByIDs(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            根據多筆課程規劃編號取得課程規劃列表。
            </summary>
            <param name="ProgramPlanIDs">多筆課程規劃編號</param>
            <returns>List&lt;JHProgramPlanRecord&gt;，代表多筆課程規劃記錄物件。</returns>
            <seealso cref="T:JHSchool.Data.JHProgramPlanRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                List&lt;JHProgramPlanRecord&gt; records = JHProgramPlan.SelectByIDs(ProgramPlanIDs);
            </example>
        </member>
        <!-- 忽略成員 "M:JHSchool.Data.JHProgramPlan.Insert(JHSchool.Data.JHProgramPlanRecord)" 中格式錯誤的 XML 註解 -->
        <!-- 忽略成員 "M:JHSchool.Data.JHProgramPlan.Insert(System.Collections.Generic.IEnumerable{JHSchool.Data.JHProgramPlanRecord})" 中格式錯誤的 XML 註解 -->
        <member name="M:JHSchool.Data.JHProgramPlan.Update(JHSchool.Data.JHProgramPlanRecord)">
            <summary>
            更新單筆課程規劃記錄
            </summary>
            <param name="ProgramPlanRecord">課程規劃記錄物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHProgramPlanRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:JHSchool.Data.JHProgramPlan.Update(System.Collections.Generic.IEnumerable{JHSchool.Data.JHProgramPlanRecord})">
            <summary>
            更新多筆課程規劃記錄
            </summary>
            <param name="ProgramPlanRecords">多筆課程規劃記錄</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHProgramPlanRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:JHSchool.Data.JHProgramPlan.Delete(JHSchool.Data.JHProgramPlanRecord)">
            <summary>
            刪除單筆課程規劃記錄
            </summary>
            <param name="ProgramPlanRecord">課程規劃記錄物件</param> 
            <returns>int，傳回成功刪除的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHProgramPlanRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:JHSchool.Data.JHProgramPlan.Delete(System.String)">
            <summary>
            刪除單筆課程規劃記錄
            </summary>
            <param name="ProgramPlanID">課程規劃編號</param> 
            <returns>int，傳回成功刪除的筆數。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:JHSchool.Data.JHProgramPlan.Delete(System.Collections.Generic.IEnumerable{JHSchool.Data.JHProgramPlanRecord})">
            <summary>
            刪除多筆課程規劃記錄
            </summary>
            <param name="ProgramPlanRecords">多筆課程規劃記錄物件</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHProgramPlanRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:JHSchool.Data.JHProgramPlan.Delete(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            刪除多筆課程規劃記錄
            </summary>
            <param name="ProgramPlanIDs">多筆課程規劃編號</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="T:JHSchool.Data.JHCourse">
            <summary>
            課程類別，提供方法用來取得、新增、修改及刪除課程資訊
            </summary>
        </member>
        <member name="M:JHSchool.Data.JHCourse.SelectAll">
            <summary>
            取得所有課程列表。
            </summary>
            <returns>List&lt;JHCourseRecord&gt;，代表課程物件。</returns>
            <seealso cref="T:JHSchool.Data.JHCourseRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;JHCourseRecord&gt; records = JHCourseRecord.SelectAll();
                
                foreach(JHCourseRecord record in records)
                    System.Console.Writeln(record.Name); 
                </code>
            </example>
            <remarks>
            請先using K12.Data;
            </remarks>
        </member>
        <member name="M:JHSchool.Data.JHCourse.SelectByClass(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{JHSchool.Data.JHClassRecord})">
            <summary>
            根據學年度、學期及班級記錄物件列表取得課程列表。
            </summary>
            <param name="SchoolYear">學年度，傳入null代表取得所有學年度資料。</param>
            <param name="Semester">學期，傳入null代表取得所有學期資料。</param>
            <param name="ClassRecs">多筆班級記錄物件</param>
            <returns>List&lt;CourseRecord&gt;，代表課程物件。</returns>
            <seealso cref="T:JHSchool.Data.JHCourseRecord"/>
            <seealso cref="T:JHSchool.Data.JHClassRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
              <code>
                List&lt;JHCourseRecord&gt; records = JHCourse.SelectByClass(SchoolYear,Semester,ClassRecs);
                
                foreach(JHCourseRecord record in records)
                    System.Console.Writeln(record.Name); 
               </code>
            </example>
            <remarks></remarks>
        </member>
        <member name="M:JHSchool.Data.JHCourse.SelectByClass(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            根據學年度、學期及班級記錄編號列表取得課程列表。
            </summary>
            <param name="SchoolYear">學年度，傳入null代表取得所有學年度資料。</param>
            <param name="Semester">學期，傳入null代表取得所有學期資料。</param>
            <param name="ClassIDs">多筆班級記錄編號</param>
            <returns>List&lt;JHCourseRecord&gt;，代表課程物件。</returns>
            <seealso cref="T:JHSchool.Data.JHCourseRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
              <code>
                List&lt;JHCourseRecord&gt; records = JHCourse.SelectByClass(SchoolYear,Semester,ClassIDs);
                
                foreach(JHCourseRecord record in records)
                    System.Console.Writeln(record.Name); 
               </code>
            </example>
            <remarks></remarks>
        </member>
        <member name="M:JHSchool.Data.JHCourse.SelectByClass(System.Nullable{System.Int32},System.Nullable{System.Int32},JHSchool.Data.JHClassRecord)">
            <summary>
            根據學年度、學期及班級記錄物件取得課程列表。
            </summary>
            <param name="SchoolYear">學年度，傳入null代表取得所有學年度資料。</param>
            <param name="Semester">學期，傳入null代表取得所有學期資料。</param>
            <param name="ClassRec">班級記錄物件</param>
            <returns>List&lt;JHCourseRecord&gt;，代表課程物件。</returns>
            <seealso cref="T:JHSchool.Data.JHCourseRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
              <code>
                List&lt;JHCourseRecord&gt; records = JHCourse.SelectByClass(SchoolYear,Semester,ClassRec);
                
                foreach(JHCourseRecord record in records)
                    System.Console.Writeln(record.Name); 
               </code>
            </example>
            <remarks></remarks>
        </member>
        <member name="M:JHSchool.Data.JHCourse.SelectByClass(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            根據學年度、學期及班級記錄編號取得課程列表。
            </summary>
            <param name="SchoolYear">學年度，傳入null代表取得所有學年度資料。</param>
            <param name="Semester">學期，傳入null代表取得所有學期資料。</param>
            <param name="ClassID">班級記錄編號</param>
            <returns>List&lt;CourseRecord&gt;，代表課程物件。</returns>
            <seealso cref="T:JHSchool.Data.JHCourseRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
              <code>
                List&lt;JHCourseRecord&gt; records = JHCourse.SelectByClass(SchoolYear,Semester,ClassID);
                
                foreach(JHCourseRecord record in records)
                    System.Console.Writeln(record.Name); 
               </code>
            </example>
            <remarks></remarks>
        </member>
        <member name="M:JHSchool.Data.JHCourse.SelectBySchoolYearAndSemester(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            根據學年度及學期取得課程列表。
            </summary>
            <param name="SchoolYear">學年度，傳入null代表取得所有學年度資料。</param>
            <param name="Semester">學期，傳入null代表取得所有學期資料。</param>
            <returns>List&lt;JHCourseRecord&gt;，代表課程物件。</returns>
            <seealso cref="T:JHSchool.Data.JHCourseRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
              <code>
                List&lt;JHCourseRecord&gt; records = JHCourse.SelectBySchoolYearAndSemester(SchoolYear,Semester);
                
                foreach(JHCourseRecord record in records)
                    System.Console.Writeln(record.Name); 
               </code>
            </example>
            <remarks></remarks>
        </member>
        <member name="M:JHSchool.Data.JHCourse.SelectBySchoolYearAndSemester(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            根據學年度、學期及課程名稱取得課程列表。
            </summary>
            <param name="SchoolYear">學年度，傳入null代表取得所有學年度資料。</param>
            <param name="Semester">學期，傳入null代表取得所有學期資料。</param>
            <param name="CourseName">課程名稱</param> 
            <returns>List&lt;JHCourseRecord&gt;，代表課程物件。</returns>
            <seealso cref="T:JHSchool.Data.JHCourseRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                  List&lt;JHCourseRecord&gt; records = JHCourse.SelectBySchoolYearAndSemester(SchoolYear,Semester,CourseName);
                
                  foreach(JHCourseRecord record in records)
                    System.Console.Writeln(record.Name); 
                </code>
            </example>
            <remarks></remarks>
        </member>
        <member name="M:JHSchool.Data.JHCourse.SelectByID(System.String)">
            <summary>
            根據單筆課程編號取得課程物件。
            </summary>
            <param name="CourseID">課程編號</param>
            <returns>JHCourseRecord，代表課程物件。</returns>
            <seealso cref="T:JHSchool.Data.JHCourseRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                JHCourseRecord record = JHCourse.SelectByID(CourseID);
                
                if (record != null)
                   System.Console.WriteLine(record.Name);
                </code>
            </example>
            <remarks>若是CourseID不則在則會傳回null</remarks>
        </member>
        <member name="M:JHSchool.Data.JHCourse.SelectByIDs(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            根據多筆課程編號取得課程物件列表。
            </summary>
            <param name="CourseIDs">多筆課程編號</param>
            <returns>List&lt;JHCourseRecord&gt;，代表課程物件。</returns>
            <seealso cref="T:JHSchool.Data.JHCourseRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;JHCourseRecord&gt; records = JHCourse.SelectByIDs(CourseIDs);
                
                foreach(JHCourseRecord record in records)
                    Console.WrlteLine(record.Name);
                </code>
            </example>
            <remarks>可能情況若是傳5筆ID，但是其中1筆沒有資料，就只會回傳4筆資料</remarks>
        </member>
        <member name="M:JHSchool.Data.JHCourse.Insert(JHSchool.Data.JHCourseRecord)">
            <summary>
            新增單筆課程記錄
            </summary>
            <param name="CourseRecord">課程記錄物件</param> 
            <returns>string，傳回新增物件的系統編號。</returns>
            <seealso cref="T:JHSchool.Data.JHCourseRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    JHCourseRecord record = new JHCourseRecord();
                    record.Name = (new System.Random()).NextDouble().ToString();
                    strng NewID = JHCourse.Insert(record);
                    JHCourseRecord actual = JHCourse.SelectByID(NewID);
                    System.Console.Writeln(actual.Name);
                </code>
            </example>
            <remarks>
            1.新增一律傳回新增物件的編號。
            2.新增必填欄位為課程名稱（Name）。
            </remarks>
        </member>
        <member name="M:JHSchool.Data.JHCourse.Insert(System.Collections.Generic.IEnumerable{JHSchool.Data.JHCourseRecord})">
            <summary>
            新增多筆課程記錄
            </summary>
            <param name="CourseRecords">課程記錄物件</param> 
            <returns>List&lt;string&gt;，傳回新增物件的系統編號列表。</returns>
            <seealso cref="T:JHSchool.Data.JHCourseRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    JHCourseRecord record = new JHCourseRecord();
                    record.Name = (new System.Random()).NextDouble().ToString();
                    List&lt;JHCourseRecord&gt; records = new List&lt;JHCourseRecord&gt;();
                    records.Add(record);
                    List&lt;string&gt; NewID = Course.Insert(records)
                </code>
            </example>
        </member>
        <member name="M:JHSchool.Data.JHCourse.Update(JHSchool.Data.JHCourseRecord)">
            <summary>
            更新單筆課程記錄
            </summary>
            <param name="CourseRecord">課程記錄物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHCourseRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                JHCourseRecord record = JHCourse.SelectByID(CourseID);
                record.Name = (new System.Random()).NextDouble().ToString();
                int UpdateCount = JHCourse.Update(record);
                </code>
            </example>
            <remarks>傳回值為成功更新的筆數。</remarks>
        </member>
        <member name="M:JHSchool.Data.JHCourse.Update(System.Collections.Generic.IEnumerable{JHSchool.Data.JHCourseRecord})">
            <summary>
            更新多筆課程記錄
            </summary>
            <param name="CourseRecords">課程記錄物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHCourseRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                JHCourseRecord record = JHCourse.SelectByID(CourseID);
                record.Name = (new System.Random()).NextDouble().ToString();
                List&lt;JHCourseRecord&gt; records = new List&lt;JHCourseRecord&gt;();
                records.Add(record);
                int UpdateCount = JHCourse.Update(records);
                </code>
            </example>
            <remarks>傳回值為成功更新的筆數。</remarks>
        </member>
        <member name="M:JHSchool.Data.JHCourse.Delete(System.Collections.Generic.IEnumerable{JHSchool.Data.JHCourseRecord})">
            <summary>
            刪除多筆課程記錄
            </summary>
            <param name="CourseRecords">多筆課程記錄物件</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHCourseRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                  List&lt;JHCourseRecord&gt; records = JHCourse.SelectByIDs(CourseIDs);
                  int DeleteCount = JHCourse.Delete(records);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>
        </member>
        <member name="M:JHSchool.Data.JHCourse.Delete(JHSchool.Data.JHCourseRecord)">
            <summary>
            刪除單筆課程記錄
            </summary>
            <param name="CourseRecord">課程記錄物件</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHCourseRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                  JHCourseRecord record = JHCourse.SelectByID(CourseID);
                  int DeleteCount = JHCourse.Delete(record);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>
        </member>
        <member name="M:JHSchool.Data.JHCourse.Delete(System.String)">
            <summary>
            刪除單筆課程記錄
            </summary>
            <param name="CourseID">課程記錄系統編號</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                  int DeleteCount = JHCourse.Delete(CourseID);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>
        </member>
        <member name="M:JHSchool.Data.JHCourse.Delete(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            刪除多筆課程記錄
            </summary>
            <param name="CourseIDs">多筆課程記錄系統編號</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                  int DeleteCount = JHCourse.Delete(CourseIDs);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>
        </member>
        <member name="T:JHSchool.Data.JHLeaveInfoRecord">
            <summary>
            學生離校資訊
            </summary>
        </member>
        <member name="P:JHSchool.Data.JHLeaveInfoRecord.Student">
            <summary>
            所屬學生
            </summary>
        </member>
        <member name="T:JHSchool.Data.JHBeforeEnrollment">
            <summary>
            學生前級畢業資訊類別，提供方法用來取得及修改學生前級畢業資訊。
            </summary>
        </member>
        <member name="M:JHSchool.Data.JHBeforeEnrollment.SelectAll">
            <summary>
            取得所有學生前級畢業資訊物件列表。
            </summary>
            <returns>List&lt;JHBeforeEnrollmentRecord&gt;，代表多筆學生前級畢業資訊物件。</returns>
            <seealso cref="T:JHSchool.Data.JHBeforeEnrollmentRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;JHBeforeEnrollmentRecord&gt; records = JHBeforeEnrollment.SelectAll();
                
                foreach(JHBeforeEnrollmentRecord record in records)
                    Console.WrlteLine(record.Reason);
                </code>
            </example>
        </member>
        <member name="M:JHSchool.Data.JHBeforeEnrollment.SelectByStudent(JHSchool.Data.JHStudentRecord)">
            <summary>
            根據單筆學生記錄物件取得學生前級畢業資訊物件。
            </summary>
            <param name="Student">學生記錄物件</param>
            <returns>JHLeaveInfoRecord，代表學生前級畢業資訊物件。</returns>
            <seealso cref="T:JHSchool.Data.JHStudentRecord"/>
            <seealso cref="T:JHSchool.Data.JHBeforeEnrollmentRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                JHBeforeEnrollmentRecord record = JHBeforeEnrollment.SelectByStudent(Student);
                
               if (record != null)
                   System.Console.WriteLine(record.Memo);
                </code>
            </example>
            <remarks>若是Student不則在則會傳回null</remarks>
        </member>
        <member name="M:JHSchool.Data.JHBeforeEnrollment.SelectByStudentID(System.String)">
            <summary>
            根據單筆學生記錄編號取得學生前級畢業資訊物件。
            </summary>
            <param name="StudentID">學生記錄編號</param>
            <returns>JHBeforeEnrollmentRecord，代表學生前級畢業資訊物件。</returns>
            <seealso cref="T:JHSchool.Data.JHBeforeEnrollmentRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                JHBeforeEnrollmentRecord record = JHBeforeEnrollment.SelectByStudentID(StudentID);
                
                if (record != null)
                   System.Console.WriteLine(record.Reason);
                </code>
            </example>
            <remarks>若是StudentID不則在則會傳回null</remarks>
        </member>
        <member name="M:JHSchool.Data.JHBeforeEnrollment.SelectByStudents(System.Collections.Generic.IEnumerable{JHSchool.Data.JHStudentRecord})">
            <summary>
            根據多筆學生記錄物件取得學生前級畢業資訊物件列表。
            </summary>
            <param name="Students">多筆學生記錄物件</param>
            <returns>List&lt;JHBeforeEnrollmentRecord&gt;，代表多筆學生前級畢業資訊物件。</returns>
            <seealso cref="T:JHSchool.Data.JHBeforeEnrollmentRecord"/>
            <seealso cref="T:JHSchool.Data.JHStudentRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;JHBeforeEnrollmentRecord&gt; records = JHBeforeEnrollment.SelectByStudents(Students);
                
                foreach(JHBeforeEnrollmentRecord record in records)
                    Console.WrlteLine(record.Reason);
                </code>
            </example>
            <remarks>可能情況若是傳5筆學生，但是其中1筆沒有資料，就只會回傳4筆資料</remarks>
        </member>
        <member name="M:JHSchool.Data.JHBeforeEnrollment.SelectByStudentIDs(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            根據多筆學生記錄編號取得學生前級畢業資訊物件列表。
            </summary>
            <param name="StudentIDs">多筆學生記錄編號</param>
            <returns>List&lt;JHBeforeEnrollmentRecord&gt;，代表多筆學生前級畢業資訊物件。</returns>
            <seealso cref="T:JHSchool.Data.JHBeforeEnrollmentRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;JHBeforeEnrollmentRecord&gt; records = JHBeforeEnrollment.SelectByStudentIDs(StudentIDs);
                
                foreach(JHBeforeEnrollmentRecord record in records)
                    Console.WrlteLine(record.Reason);
                </code>
            </example>
            <remarks>可能情況若是傳5筆學生，但是其中1筆沒有資料，就只會回傳4筆資料</remarks>
        </member>
        <member name="M:JHSchool.Data.JHBeforeEnrollment.Update(JHSchool.Data.JHBeforeEnrollmentRecord)">
            <summary>
            更新單筆學生離校資訊
            </summary>
            <param name="BeforeEnrollmentRecord">學生前級畢業資訊物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHBeforeEnrollmentRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                JHBeforeEnrollmentRecord record = JHBeforeEnrollment.SelectByStudentID(StudentID);
                record.Reason = (new System.Random()).NextDouble().ToString();
                int UpdateCount = JHBeforeEnrollment.Update(record);
                </code>
            </example>
            <remarks>傳回值為成功更新的筆數。</remarks>
        </member>
        <member name="M:JHSchool.Data.JHBeforeEnrollment.Update(System.Collections.Generic.IEnumerable{JHSchool.Data.JHBeforeEnrollmentRecord})">
            <summary>
            更新多筆學生離校資訊
            </summary>
            <param name="BeforeEnrollmentRecords">多筆學生離校資訊物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHBeforeEnrollmentRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                JHBeforeEnrollmentRecord record = JHBeforeEnrollment.SelectByStudentID(StudentID);
                record.Memo = (new System.Random()).NextDouble().ToString();
                List&lt;JHBeforeEnrollment&gt; records = new List&lt;JHBeforeEnrollment&gt;();
                records.Add(record);
                int UpdateCount = JHBeforeEnrollment.Update(records);
                </code>
            </example>
            <remarks>傳回值為成功更新的筆數。</remarks>
        </member>
        <member name="T:JHSchool.Data.JHTagConfigRecord">
            <summary>
            標籤設定資訊
            </summary>
        </member>
        <member name="T:JHSchool.Data.JHSemesterHistoryRecord">
            <summary>
            學生學期歷程資訊
            </summary>
        </member>
        <member name="P:JHSchool.Data.JHSemesterHistoryRecord.Student">
            <summary>
            所屬學生
            </summary>
        </member>
        <member name="T:JHSchool.Data.JHSCETakeRecord">
            <summary>
            學生期中成績資訊
            </summary>
        </member>
        <member name="M:JHSchool.Data.JHSCETakeRecord.Load(System.Xml.XmlElement)">
            <summary>
            從XML參數載入設定值
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:JHSchool.Data.JHSCETakeRecord.Load(System.String)">
            <summary>
            從XML字串參數載入設定值
            </summary>
            <param name="data"></param>
        </member>
        <member name="P:JHSchool.Data.JHSCETakeRecord.Effort">
            <summary>
            努力程度
            </summary>
        </member>
        <member name="P:JHSchool.Data.JHSCETakeRecord.Score">
            <summary>
            成績
            </summary>
        </member>
        <member name="P:JHSchool.Data.JHSCETakeRecord.Student">
            <summary>
            所屬學生
            </summary>
        </member>
        <member name="P:JHSchool.Data.JHSCETakeRecord.SCAttend">
            <summary>
            所屬學生修課
            </summary>
        </member>
        <member name="P:JHSchool.Data.JHSCETakeRecord.Exam">
            <summary>
            所屬試別設定
            </summary>
        </member>
        <member name="P:JHSchool.Data.JHSCETakeRecord.Course">
            <summary>
            所屬課程
            </summary>
        </member>
        <member name="T:JHSchool.Data.JHDisciplineRecord">
            <summary>
            學生獎懲資訊
            </summary>
        </member>
        <member name="P:JHSchool.Data.JHDisciplineRecord.Student">
            <summary>
            所屬學生
            </summary>
        </member>
        <member name="T:JHSchool.Data.JHTeacher">
            <summary>
            教師類別，提供方法用來取得、新增、修改及刪除教師資訊
            </summary>
        </member>
        <member name="M:JHSchool.Data.JHTeacher.SelectAll">
            <summary>
            取得所有教師記錄列表。
            </summary>
            <returns>List&lt;JHTeacherRecord&gt;，代表多筆教師記錄物件。</returns>
            <seealso cref="T:JHSchool.Data.JHTeacherRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;JHTeacherRecord&gt; records = JHTeacher.SelectAll();
                
                foreach(JHTeacherRecord record in records)
                    System.Console.Writeln(record.Name); 
                </code>
            </example>
            <remarks>
            請先using K12.Data;
            </remarks> 
        </member>
        <member name="M:JHSchool.Data.JHTeacher.SelectByID(System.String)">
            <summary>
            根據單筆教師編號取得教師記錄物件。
            </summary>
            <param name="TeacherID">教師編號</param>
            <returns>JHTeacherRecord，代表教師記錄物件。</returns>
            <seealso cref="T:JHSchool.Data.JHTeacherRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                JHTeacherRecord record = JHTeacher.SelectByID(TeacherID);
                
               if (record != null)
                   System.Console.WriteLine(record.Name);
                </code>
            </example>
            <remarks>若是TeacherID不則在則會傳回null</remarks>
        </member>
        <member name="M:JHSchool.Data.JHTeacher.SelectByIDs(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            根據多筆教師編號取得教師記錄列表。
            </summary>
            <param name="TeacherIDs">多筆教師編號</param>
            <returns>List&lt;JHTeacherRecord&gt;，代表多教師記錄物件。</returns>
            <seealso cref="T:JHSchool.Data.JHTeacherRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;JHTeacherRecord&gt; records = JHTeacher.SelectByIDs(TeacherIDs);
                
                foreach(JHTeacherRecord record in records)
                    Console.WrlteLine(record.Name);
                </code>
            </example>
            <remarks>可能情況若是傳5筆ID，但是其中1筆沒有資料，就只會回傳4筆資料</remarks>
        </member>
        <member name="M:JHSchool.Data.JHTeacher.Insert(JHSchool.Data.JHTeacherRecord)">
            <summary>
            新增單筆教師記錄
            </summary>
            <param name="TeacherRecord">教師記錄物件</param>
            <returns>string，傳回新增物件的系統編號。</returns>
            <seealso cref="T:JHSchool.Data.JHTeacherRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    JHTeacherRecord newrecord = new JHTeacherRecord();
                    newrecord.Name = (new System.Random()).NextDouble().ToString();
                    strng NewID = JHTeacher.Insert(newrecord)
                    JHTeacherRecord record = JHTeacher.SelectByID(NewID);
                    System.Console.Writeln(record.Name);
                </code>
            </example>
            <remarks>
            1.新增一律傳回新增物件的編號。
            2.新增必填欄位為課程名稱（Name）。
            </remarks>
        </member>
        <member name="M:JHSchool.Data.JHTeacher.Insert(System.Collections.Generic.IEnumerable{JHSchool.Data.JHTeacherRecord})">
            <summary>
            新增多筆教師記錄
            </summary>
            <param name="TeacherRecords">多筆教師記錄物件</param> 
            <returns>List&lt;string&gt;，傳回新增物件的系統編號列表。</returns>
            <seealso cref="T:JHSchool.Data.JHTeacherRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    JHTeacherRecord record = new JHTeacherRecord();
                    record.Name = (new System.Random()).NextDouble().ToString();
                    List&lt;JHTeacherRecord&gt; records = new List&lt;JHTeacherRecord&gt;();
                    records.Add(record);
                    List&lt;string&gt; NewID = JHTeacher.Insert(records)
                </code>
            </example>
        </member>
        <member name="M:JHSchool.Data.JHTeacher.Update(JHSchool.Data.JHTeacherRecord)">
            <summary>
            更新單筆教師記錄
            </summary>
            <param name="TeacherRecord">教師記錄物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHTeacherRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                JHTeacherRecord record = JHTeacher.SelectByID(TeacherID);
                record.Name = (new System.Random()).NextDouble().ToString();
                int UpdateCount = JHTeacher.Update(record);
                </code>
            </example>
            <remarks>傳回值為成功更新的筆數。</remarks>
        </member>
        <member name="M:JHSchool.Data.JHTeacher.Update(System.Collections.Generic.IEnumerable{JHSchool.Data.JHTeacherRecord})">
            <summary>
            更新多筆教師記錄
            </summary>
            <param name="TeacherRecords">多筆教師記錄物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHTeacherRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                JHTeacherRecord record = JHTeacher.SelectByID(CourseID);
                record.Name = (new System.Random()).NextDouble().ToString();
                List&lt;JHTeacherRecord&gt; records = new List&lt;JHTeacherRecord&gt;();
                records.Add(record);
                int UpdateCount = JHTeacher.Update(records);
                </code>
            </example>
            <remarks>傳回值為成功更新的筆數。</remarks>
        </member>
        <member name="M:JHSchool.Data.JHTeacher.Delete(System.Collections.Generic.IEnumerable{JHSchool.Data.JHTeacherRecord})">
            <summary>
            刪除多筆教師記錄
            </summary>
            <param name="TeacherRecords">多筆教師記錄物件</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHTeacherRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                  List&lt;JHTeacherRecord&gt; records = JHTeacher.SelectByIDs(CourseIDs);
                  int DeleteCount = JHTeacher.Delete(records);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>
        </member>
        <member name="M:JHSchool.Data.JHTeacher.Delete(JHSchool.Data.JHTeacherRecord)">
            <summary>
            刪除單筆教師記錄
            </summary>
            <param name="TeacherRecord">教師記錄物件</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHTeacherRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                  JHTeacherRecord record = JHTeacher.SelectByID(TeacherID);
                  int DeleteCount = JHTeacher.Delete(record);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>
        </member>
        <member name="M:JHSchool.Data.JHTeacher.Delete(System.String)">
            <summary>
            刪除單筆教師記錄
            </summary>
            <param name="TeacherID">教師記錄編號</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                  int DeleteCount = JHTeacher.Delete(TeacherID);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>
        </member>
        <member name="M:JHSchool.Data.JHTeacher.Delete(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            刪除多筆教師記錄
            </summary>
            <param name="TeacherIDs">多筆教師記錄編琥</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                  int DeleteCount = JHTeacher.Delete(TeacherIDs);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>
        </member>
        <member name="T:JHSchool.Data.JHTeacherTag">
            <summary>
            教師標籤類別，提供方法用來取得、新增、修改及刪除班級標籤資訊
            </summary>
        </member>
        <member name="M:JHSchool.Data.JHTeacherTag.SelectAll">
            <summary>
            取得所有教師標籤列表。
            </summary>
            <returns>List&lt;JHTeacherTagRecord&gt;，代表多筆教師標籤物件。</returns>
            <seealso cref="T:JHSchool.Data.JHTeacherTagRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    List&lt;JHTeacherTagRecord&gt; records = JHTeacherTag.SelectAll();
                   
                    foreach(JHTeacherTagRecord record in records)
                        System.Console.WriteLine(record.Name);
                </code>
            </example>
        </member>
        <member name="M:JHSchool.Data.JHTeacherTag.SelectByTeacherID(System.String)">
            <summary>
            根據單筆教師編號取得教師標籤列表。
            </summary>
            <param name="TeacherID">教師編號</param>
            <returns>List&lt;JHTeacherTagRecord&gt;，代表多筆教師標籤物件。</returns>
            <seealso cref="T:JHSchool.Data.JHTeacherTagRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <sample>
                <code>
                    List&lt;JHTeacherTagRecord&gt; records = JHTeacherTag.SelectByTeacherID(TeacherID);
                   
                    foreach(JHTeacherTagRecord record in records)
                      System.Console.WriteLine(record.Name);
                </code>
            </sample>
        </member>
        <member name="M:JHSchool.Data.JHTeacherTag.SelectByTeacherIDs(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            根據多筆教師編號取得教師標籤列表。
            </summary>
            <param name="TeacherIDs">多筆教師編號</param>
            <returns>List&lt;JHTeacherTagRecord&gt;，代表多筆教師標籤物件。</returns>
            <seealso cref="T:JHSchool.Data.JHTeacherTagRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;JHTeacherTagRecord&gt; records = JHTeacherTag.SelectByTeacherIDs(TeacherIDs);
               
                forech(JHTeacherTagRecord record in records)
                    System.Console.WriteLine(record.Name);
                </code>
            </example>
        </member>
        <member name="M:JHSchool.Data.JHTeacherTag.Insert(JHSchool.Data.JHTeacherTagRecord)">
            <summary>
            新增單筆教師標籤記錄
            </summary>
            <param name="TeacherTagRecord">教師標籤記錄物件</param>
            <returns>string，傳回新增物件的系統編號。</returns>
            <seealso cref="T:JHSchool.Data.JHTeacherTagRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                JHTeacherTagRecord  record = new JHTeacherTagRecord(TeacherID, TagConfigID);
                string NewID = JHTeacherTag.Insert(record); 
                </code>
            </example>
            <remarks>
            1.新增傳入的參數為教師編號以及標籤編號。
            2.回傳值為新增物件的系統編號。
            </remarks>
        </member>
        <member name="M:JHSchool.Data.JHTeacherTag.Insert(System.Collections.Generic.IEnumerable{JHSchool.Data.JHTeacherTagRecord})">
            <summary>
            新增多筆教師標籤記錄
            </summary>
            <param name="TeacherTagRecords">多筆教師標籤記錄物件</param> 
            <returns>List&lt;string&gt;，傳回新增物件的系統編號列表。</returns>
            <seealso cref="T:JHSchool.Data.JHTeacherTagRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                JHTeacherTagRecord record = new JHTeacherTagRecord(TeacherID, TagConfigID);
                List&lt;JHTeacherTagRecord&gt; records = new List&lt;JHTeacherTagRecord&gt;();
                records.Add(record);
                List&lt;string&gt; NewIDs = JHTeacherTag.Insert(records); 
                </code>
            </example>
            <remarks>
            1.新增傳入的參數為教師編號以及標籤編號。
            2.回傳值為新增物件的系統編號。
            </remarks>
        </member>
        <member name="M:JHSchool.Data.JHTeacherTag.Update(JHSchool.Data.JHTeacherTagRecord)">
            <summary>
            更新單筆教師標籤記錄
            </summary>
            <param name="TeacherTagRecord"> 教師標籤記錄物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHTeacherTagRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    List&lt;JHTeacherTagRecord&gt; records = JHTeacherTag.SelectByTeacherID(TeacherID);       
                    records[0].RefEntityID = TeacherID;
                    records[0].RefTagID = TagConfigID;
                    int UpdateCount = JHTeacherTag.Update(record[0]);
                </code>
            </example>
            <remarks>
            1.更新的欄位值只有TeacherID及TagConfigID，其它為唯讀欄位。
            2.傳回值為成功更新的筆數。
            </remarks>       
        </member>
        <member name="M:JHSchool.Data.JHTeacherTag.Update(System.Collections.Generic.IEnumerable{JHSchool.Data.JHTeacherTagRecord})">
            <summary>
            更新多筆教師標籤記錄
            </summary>
            <param name="TeacherTagRecords">多筆教師標籤記錄物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHTeacherTagRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    List&lt;JHTeacherTagRecord&gt; records = JHTeacherTag.SelectByTeacherID(TeacherID);       
                    records[0].RefEntityID = TeacherID;
                    records[0].RefTagID = TagConfigID;
                    int UpdateCount = JHTeacherTag.Update(records);
                </code>
            </example>
            <remarks>
            1.更新的欄位值只有TeacherID及TagConfigID，其它為唯讀欄位。
            2.傳回值為成功更新的筆數。
            </remarks>
        </member>
        <member name="M:JHSchool.Data.JHTeacherTag.Delete(System.Collections.Generic.IEnumerable{JHSchool.Data.JHTeacherTagRecord})">
            <summary>
            刪除多筆教師標籤記錄
            </summary>
            <param name="TeacherTagRecords">多筆教師標籤記錄物件</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHTeacherTagRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    List&lt;JHTeacherTagRecord&gt; records = JHTeacherTag.SelectByTeacherID(TeacherID);
                    int DeleteCount = JHTeacherTag.Delete(records);
                </code>
            </example>
            <remarks>
            傳回值為成功刪除的筆數。
            </remarks>
        </member>
        <member name="M:JHSchool.Data.JHTeacherTag.Delete(JHSchool.Data.JHTeacherTagRecord)">
            <summary>
            刪除單筆教師記錄
            </summary>
            <param name="TeacherTagRecord">教師記錄物件</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHTeacherTagRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    List&lt;JHTeacherTagRecord&gt; records = JHTeacherTag.SelectByTeacherID(TeacherID);
                    int DeleteCount = JHTeacherTag.Delete(records[0]);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>
        </member>
        <member name="T:JHSchool.Data.JHAEInclude">
            <summary>
            評分樣板類別，提供方法用來取得、新增、修改及刪除評分樣板資訊
            </summary>
        </member>
        <member name="M:JHSchool.Data.JHAEInclude.SelectAll">
            <summary>
            取得所有評分樣板列表。
            </summary>
            <returns>List&lt;JHAEIncludeRecord&gt;，代表多筆評分樣板記錄物件。</returns>
            <seealso cref="T:JHSchool.Data.JHAEIncludeRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                List&lt;JHAEIncludeRecord&gt; records = JHAEInclude.SelectAll();
            </example>
        </member>
        <member name="M:JHSchool.Data.JHAEInclude.SelectByIDs(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            根據多筆評分樣板編號取得評分樣板列表。
            </summary>
            <param name="AEIncludeIDs">多筆評分樣板編號</param>
            <returns>List&lt;JHAEIncludeRecord&gt;，代表多筆評分樣板記錄物件。</returns>
            <seealso cref="T:JHSchool.Data.JHAEIncludeRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                List&lt;JHAEIncludeRecord&gt; records = JHAEInclude.SelectByIDs(AEIncludeIDs);
            </example>
        </member>
        <member name="M:JHSchool.Data.JHAEInclude.SelectByAssessmentSetupID(System.String)">
            <summary>
            根據單筆評量設定編號取得評分樣板列表。
            </summary>
            <param name="AssessmentSetupID">單筆評量設定編號</param>
            <returns>List&lt;AEIncludeRecord&gt;，代表多筆評分樣板記錄物件。</returns>
            <seealso cref="T:K12.Data.AEIncludeRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                List&lt;AEIncludeRecord&gt; aeincluderecords = AEInclude.SelectByIDs(AEIncludeIDs);
            </example>
        </member>
        <member name="M:JHSchool.Data.JHAEInclude.SelectByAssessmentSetupIDs(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            根據多筆單筆評量設定編號取得評分樣板列表。
            </summary>
            <param name="AssessmentSetupIDs">多筆評量設定編號</param>
            <returns>List&lt;AEIncludeRecord&gt;，代表多筆評分樣板記錄物件。</returns>
            <seealso cref="T:K12.Data.AEIncludeRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                List&lt;AEIncludeRecord&gt; aeincluderecords = AEInclude.SelectByIDs(AEIncludeIDs);
            </example>
        </member>
        <!-- 忽略成員 "M:JHSchool.Data.JHAEInclude.Insert(JHSchool.Data.JHAEIncludeRecord)" 中格式錯誤的 XML 註解 -->
        <!-- 忽略成員 "M:JHSchool.Data.JHAEInclude.Insert(System.Collections.Generic.IEnumerable{JHSchool.Data.JHAEIncludeRecord})" 中格式錯誤的 XML 註解 -->
        <member name="M:JHSchool.Data.JHAEInclude.Update(JHSchool.Data.JHAEIncludeRecord)">
            <summary>
            更新單筆評分樣板記錄
            </summary>
            <param name="AEIncludeRecord">評分樣板記錄物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHAEIncludeRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:JHSchool.Data.JHAEInclude.Update(System.Collections.Generic.IEnumerable{JHSchool.Data.JHAEIncludeRecord})">
            <summary>
            更新多筆評分樣板記錄
            </summary>
            <param name="AEIncludeRecords">多筆評分樣板記錄</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHAEIncludeRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:JHSchool.Data.JHAEInclude.Delete(JHSchool.Data.JHAEIncludeRecord)">
            <summary>
            刪除單筆評分樣板記錄
            </summary>
            <param name="AEIncludeRecord">評分樣板記錄物件</param> 
            <returns>int，傳回成功刪除的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHAEIncludeRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:JHSchool.Data.JHAEInclude.Delete(System.String)">
            <summary>
            刪除單筆評分樣板記錄
            </summary>
            <param name="AEIncludeRecordID">評分樣板記錄編號</param> 
            <returns>int，傳回成功刪除的筆數。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:JHSchool.Data.JHAEInclude.Delete(System.Collections.Generic.IEnumerable{JHSchool.Data.JHAEIncludeRecord})">
            <summary>
            刪除多筆評分樣板記錄
            </summary>
            <param name="AEIncludeRecords">多筆評分樣板記錄物件</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHAEIncludeRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:JHSchool.Data.JHAEInclude.Delete(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            刪除多筆評分樣板記錄
            </summary>
            <param name="AEIncludeRecordIDs">多筆評分樣板記錄編號</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="T:JHSchool.Data.JHBeforeEnrollmentRecord">
            <summary>
            入學前資訊
            詳細規格：https://docs.google.com/a/ischool.com.tw/View?id=dcw7gq95_29ff6fpfhd
            </summary>
        </member>
        <member name="P:JHSchool.Data.JHBeforeEnrollmentRecord.Student">
            <summary>
            所屬學生記錄物件
            </summary>
        </member>
        <member name="T:JHSchool.Data.JHExamRecord">
            <summary>
            試別項目資訊
            </summary>
        </member>
        <member name="T:JHSchool.Data.JHPeriodMappingInfo">
            <summary>
            節次對照表資訊，一個物件代表一個節次的假別對照資訊
            </summary>
        </member>
        <member name="T:JHSchool.Data.JHPeriodMapping">
            <summary>
            節次對照表類別，提供方法用來取得節次對照資訊
            </summary>
        </member>
        <member name="M:JHSchool.Data.JHPeriodMapping.SelectAll">
            <summary>
            取得所有節次對照表清單
            </summary>
            <returns>List&lt;JHPeriodMappingInfo&gt;，代表節次對照資訊物件列表。</returns>
        </member>
        <member name="T:JHSchool.Data.JHDiscipline">
            <summary>
            學生獎懲類別，提供方法用來取得、新增、修改及刪除學生獎懲資訊
            </summary>
        </member>
        <member name="M:JHSchool.Data.JHDiscipline.SelectAll">
            <summary>
            取得所有學生獎懲記錄物件列表。
            </summary>
            <returns>List&lt;JHDisciplineRecord&gt;，代表多筆學生獎懲記錄物件。</returns>
            <seealso cref="T:JHSchool.Data.JHDisciplineRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;JHDisciplineRecord&gt; records = JHDisciplineRecord.SelectAll();
                
                foreach(JHDisciplineRecord record in records)
                    System.Console.WriteLine(record.RefStudentID);
                </code>
            </example>
        </member>
        <member name="M:JHSchool.Data.JHDiscipline.SelectByStudentIDs(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            根據多筆學生編號取得學生獎懲記錄物件列表。
            </summary>
            <param name="StudentIDs">多筆學生編號</param>
            <returns>List&lt;JHDisciplineRecord&gt;，代表多筆學生獎懲記錄物件。</returns>
            <seealso cref="T:JHSchool.Data.JHDisciplineRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;JHDisciplineRecord&gt; records = JHDiscipline.SelectByStudentIDs(StudentIDs);
                
                foreach(JHDisciplineRecord record in records)
                    Console.WrlteLine(record.RefStudentID);
                </code>
            </example>
        </member>
        <member name="M:JHSchool.Data.JHDiscipline.SelectByRegisterDate(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            根據多筆學生編號及登錄日期取得學生獎懲記錄物件列表。
            </summary>
            <param name="StudentIDs">多筆學生編號</param>
            <param name="StartRegisterDate">登錄開始日期</param>
            <param name="EndRegisterDate">登錄結束日期</param>
            <returns>List&lt;JHDisciplineRecord&gt;，代表多筆學生獎懲記錄物件。</returns>
            <seealso cref="T:JHSchool.Data.JHDisciplineRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;JHDisciplineRecord&gt; records = JHDiscipline.SelectRegisterDate(StudentIDs,StartRegisterDate,EndRegisterDate);
                
                foreach(JHDisciplineRecord record in records)
                    Console.WrlteLine(record.RefStudentID);
                </code>
            </example>
        </member>
        <member name="M:JHSchool.Data.JHDiscipline.SelectByOccurDate(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            根據多筆學生編號及發生日期取得學生獎懲記錄物件列表。
            </summary>
            <param name="StudentIDs">多筆學生編號</param>
            <param name="StartOccurDate">發生開始日期</param>
            <param name="EndOccurDate">發生結束日期</param>
            <returns>List&lt;JHDisciplineRecord&gt;，代表多筆學生獎懲記錄物件。</returns>
            <seealso cref="T:JHSchool.Data.JHDisciplineRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;JHDisciplineRecord&gt; records = JHDiscipline.SelectByOccurDate(StudentIDs,StartOccurDate,EndOccurDate);
                
                foreach(JHDisciplineRecord record in records)
                    Console.WrlteLine(record.RefStudentID);
                </code>
            </example>
        </member>
        <member name="M:JHSchool.Data.JHDiscipline.Insert(JHSchool.Data.JHDisciplineRecord)">
            <summary>
            新增單筆學生獎懲記錄
            </summary>
            <param name="DisciplineRecord">學生獎懲記錄物件</param>
            <returns>string，傳回新增物件的系統編號。</returns>
            <seealso cref="T:JHSchool.Data.JHDisciplineRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    JHDisciplineRecord newrecord = new JHDisciplineRecord();
                    newrecord.RefStudentID = RefStudentID;
                    newrecord.SchoolYear = SchoolYear;
                    newrecord.Semester = Semester;
                    newrecord.OccurDate = DateTime.Today;
                    strng NewID = JHDiscipline.Insert(newrecord)
                    JHDisciplineRecord record = JHDiscipline.SelectByID(NewID);
                    System.Console.Writeln(record.RefStudentID);
                </code>
            </example>
            <remarks>
            1.新增一律傳回新增物件的編號。
            2.新增必填欄位為學生記錄編號（RefStudentID）、學年度（SchoolYear）、學期（Semester）、缺曠日期（OccurDate）。
            </remarks>
        </member>
        <member name="M:JHSchool.Data.JHDiscipline.Insert(System.Collections.Generic.IEnumerable{JHSchool.Data.JHDisciplineRecord})">
            <summary>
            新增多筆學生獎懲記錄
            </summary>
            <param name="DisciplineRecords">多筆學生獎懲記錄物件</param> 
            <returns>List&lt;string&gt;，傳回新增物件的系統編號列表。</returns>
            <seealso cref="T:JHSchool.Data.JHDisciplineRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    JHDisciplineRecord record = new JHDisciplineRecord();
                    newrecord.RefStudentID = RefStudentID;
                    newrecord.SchoolYear = SchoolYear;
                    newrecord.Semester = Semester;
                    newrecord.OccurDate = DateTime.Today;
                    
                    List&lt;JHDisciplineRecord&gt; records = new List&lt;JHDisciplineRecord&gt;();
                    records.Add(record);
                    List&lt;string&gt; NewID = JHDiscipline.Insert(records)
                </code>
            </example>
        </member>
        <member name="M:JHSchool.Data.JHDiscipline.Update(JHSchool.Data.JHDisciplineRecord)">
            <summary>
            更新單筆學生獎懲記錄
            </summary>
            <param name="DisciplineRecord">學生獎懲記錄物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHDisciplineRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                JHDisciplineRecord record = JHDiscipline.SelectByStudentIDs(StudentIDs)[0];
                record.OccurDate = DateTime.Today;
                int UpdateCount = JHDiscipline.Update(record);
                </code>
            </example>
            <remarks>傳回值為成功更新的筆數。</remarks>
        </member>
        <member name="M:JHSchool.Data.JHDiscipline.Update(System.Collections.Generic.IEnumerable{JHSchool.Data.JHDisciplineRecord})">
            <summary>
            更新多筆學生獎懲記錄
            </summary>
            <param name="DisciplineRecords">多筆學生獎懲記錄物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHDisciplineRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                JHDisciplineRecord record = JHDiscipline.SelectByStudentIDs(StudentIDs)[0];
                record.OccurDate = DateTime.Today;
                List&lt;JHDisciplineRecord&gt; records = new List&lt;JHDisciplineRecord&gt;();
                records.Add(record);
                int UpdateCount = JHDiscipline.Update(records);
                </code>
            </example>
            <remarks>傳回值為成功更新的筆數。</remarks>
        </member>
        <member name="M:JHSchool.Data.JHDiscipline.Delete(JHSchool.Data.JHDisciplineRecord)">
            <summary>
            刪除單筆學生獎懲記錄
            </summary>
            <param name="DisciplineRecord">學生獎懲記錄物件</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHDisciplineRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                  List&lt;JHDisciplineRecord&gt; records = JHDiscipline.SelectByStudentIDs(StudentIDs);
                  int DeleteCount = JHDiscipline.Delete(records[0]);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>
        </member>
        <member name="M:JHSchool.Data.JHDiscipline.Delete(System.String)">
            <summary>
            刪除單筆學生獎懲記錄
            </summary>
            <param name="DisciplineID">學生獎懲記錄編號</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                  int DeleteCount = JHDiscipline.Delete(DisciplineID);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>
        </member>
        <member name="M:JHSchool.Data.JHDiscipline.Delete(System.Collections.Generic.IEnumerable{JHSchool.Data.JHDisciplineRecord})">
            <summary>
            刪除多筆學生獎懲記錄
            </summary>
            <param name="DisciplineRecords">多筆學生獎懲記錄物件</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHDisciplineRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                  List&lt;JHDisciplineRecord&gt; records = JHDiscipline.SelectByStudentIDs(StudentIDs);
                  int DeleteCount = JHDiscipline.Delete(records);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>
        </member>
        <member name="M:JHSchool.Data.JHDiscipline.Delete(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            刪除多筆學生獎懲記錄
            </summary>
            <param name="DisciplineIDs">多筆學生獎懲記錄編號</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                  int DeleteCount = JHDiscipline.Delete(DisciplineIDs);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>
        </member>
        <member name="T:JHSchool.Data.JHAbsenceMappingInfo">
            <summary>
            假別對照表資訊
            </summary>
        </member>
        <member name="T:JHSchool.Data.JHClassRecord">
            <summary>
            班級資訊
            </summary>
        </member>
        <member name="P:JHSchool.Data.JHClassRecord.Teacher">
            <summary>
            班導師
            </summary>
        </member>
        <member name="P:JHSchool.Data.JHClassRecord.ProgramPlan">
            <summary>
            所屬課程規劃
            </summary>
        </member>
        <member name="P:JHSchool.Data.JHClassRecord.ScoreCalcRule">
            <summary>
            所屬成績計算規則
            </summary>
        </member>
        <member name="P:JHSchool.Data.JHClassRecord.Students">
            <summary>
            取得班級學生
            </summary>
        </member>
        <member name="T:JHSchool.Data.JHCourseRecord">
            <summary>
            課程資訊
            </summary>
        </member>
        <member name="P:JHSchool.Data.JHCourseRecord.Class">
            <summary>
            所屬班級
            </summary>
        </member>
        <member name="P:JHSchool.Data.JHCourseRecord.AssessmentSetup">
            <summary>
            所屬試別設定
            </summary>
        </member>
        <member name="P:JHSchool.Data.JHCourseRecord.Domain">
            <summary>
            領域
            </summary>
        </member>
        <member name="P:JHSchool.Data.JHCourseRecord.CalculationFlag">
            <summary>
            是否列入學期成績計算，1:列入學期成績，2:不列入學期成績。
            </summary>
        </member>
        <member name="T:JHSchool.Data.JHClassTagRecord">
            <summary>
            班級標籤資訊
            </summary>
        </member>
        <member name="T:JHSchool.Data.JHDemeritRecord">
            <summary>
            學生懲戒資訊
            </summary>
        </member>
        <member name="P:JHSchool.Data.JHDemeritRecord.Student">
            <summary>
            所屬學生
            </summary>
        </member>
        <member name="T:JHSchool.Data.JHAbsenceMapping">
            <summary>
            假別對照表類別，提供方法用來取得假別對照資訊
            </summary>
        </member>
        <member name="M:JHSchool.Data.JHAbsenceMapping.SelectAll">
            <summary>
            取得所有假別對照資訊
            </summary>
            <returns>List&lt;JHAbsenceMappingInfo&gt;，代表假別對照資訊物件列表。</returns>
        </member>
        <member name="T:JHSchool.Data.JHCourseTag">
            <summary>
            課程標籤類別，提供方法用來取得、新增、修改及刪除課程標籤資訊
            </summary>
        </member>
        <member name="M:JHSchool.Data.JHCourseTag.SelectAll">
            <summary>
            取得所有課程標籤列表。
            </summary>
            <returns>List&lt;JHCourseTagRecord&gt;，代表多筆課程標籤物件。</returns>
            <seealso cref="T:JHSchool.Data.JHCourseTagRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;JHCourseTagRecord&gt; records = JHCourseTag.SelectAll();
                    foreach(JHCourseTagRecord record in records)
                        System.Console.WriteLine(record.Name);
                </code>
            </example>
            <remarks></remarks>
        </member>
        <member name="M:JHSchool.Data.JHCourseTag.SelectByCourseID(System.String)">
            <summary>
            根據單筆課程編號取得課程標籤列表。
            </summary>
            <param name="CourseID">課程編號</param>
            <returns>List&lt;JHCourseTagRecord&gt;，代表多筆課程標籤物件。</returns>
            <seealso cref="T:JHSchool.Data.JHCourseTagRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                  List&lt;JHCourseTagRecord&gt; records = JHCourseTag.SelectByCourseID(CourseID);
                  
                  foreach(JHCourseTagRecord record in records)
                      System.Console.WriteLine(record.Name);
                </code>
            </example>
            <remarks></remarks>
        </member>
        <member name="M:JHSchool.Data.JHCourseTag.SelectByCourseIDs(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            根據多筆課程編號取得課程標籤列表。
            </summary>
            <param name="CourseIDs">多筆課程編號</param>
            <returns>List&lt;JHCourseTagRecord&gt;，代表多筆課程標籤物件。</returns>
            <seealso cref="T:JHSchool.Data.JHClassTagRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    List&lt;JHCourseTagRecord&gt; records = JHCourseTag.SelectByCourseIDs(CourseIDs);
                    
                    forech(JHCourseTagRecord record in records)
                        System.Console.WriteLine(record.Name);
                </code>
            </example>
            <remarks></remarks>
        </member>
        <member name="M:JHSchool.Data.JHCourseTag.Insert(JHSchool.Data.JHCourseTagRecord)">
            <summary>
            新增單筆課程標籤記錄
            </summary>
            <param name="CourseTagRecord">課程標籤記錄物件</param>
            <returns>string，傳回新增物件的系統編號。</returns>
            <seealso cref="T:JHSchool.Data.JHCourseTagRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
               <code>
                JHCourseTagRecord  record = new JHCourseTagRecord(CourseID, TagConfigID); 
                string NewID = JHCourseTag.Insert(record);  
               </code>
            </example>
            <remarks>
            1.新增傳入的參數為課程編號以及標籤編號。
            2.回傳值為新增物件的系統編號。
            </remarks> 
        </member>
        <member name="M:JHSchool.Data.JHCourseTag.Insert(System.Collections.Generic.IEnumerable{JHSchool.Data.JHCourseTagRecord})">
            <summary>
            新增多筆課程標籤記錄
            </summary>
            <param name="CourseTagRecords">多筆課程記錄物件</param> 
            <returns>List&lt;string&gt;，傳回新增物件的系統編號列表。</returns>
            <seealso cref="T:JHSchool.Data.JHCourseTagRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                JHCourseTagRecord record = new JHCourseTagRecord(ClassID, TagConfigID); 
                List&lt;JHCourseTagRecord&gt; records = new List&lt;JHCourseTagRecord&gt;();
                records.Add(record);
                List&lt;string&gt; NewIDs = JHCourseTag.Insert(records);  
                </code>
            </example>
            <remarks>
            1.新增傳入的參數為課程編號以及標籤編號。
            2.回傳值為新增物件的系統編號。
            </remarks>
        </member>
        <member name="M:JHSchool.Data.JHCourseTag.Update(JHSchool.Data.JHCourseTagRecord)">
            <summary>
            更新單筆課程標籤記錄
            </summary>
            <param name="CourseTagRecord">課程標籤記錄物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHCourseTagRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    List&lt;JHCourseTagRecord&gt; records = JHCourseTag.SelectByCourseID(CourseID);        
                    records[0].RefEntityID = CourseID;
                    records[0].RefTagID = TagConfigID;
                    int UpdateCount = JHCourseTag.Update(record[0]);
                </code>
            </example>
        </member>
        <member name="M:JHSchool.Data.JHCourseTag.Update(System.Collections.Generic.IEnumerable{JHSchool.Data.JHCourseTagRecord})">
            <summary>
            更新多筆課程標籤記錄
            </summary>
            <param name="CourseTagRecords">多筆課程標籤記錄物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHCourseTagRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    List&lt;JHCourseTagRecord&gt; records = JHCourseTag.SelectByCourseID(CourseID);        
                    records[0].RefEntityID = CourseID;
                    records[0].RefTagID = TagConfigID;
                    int UpdateCount = JHCourseTag.Update(records);
                </code>
            </example>
            <remarks>
            1.更新的欄位值只有CourseID及TagConfigID，其它為唯讀欄位。
            2.傳回值為成功更新的筆數。
            </remarks>
        </member>
        <member name="M:JHSchool.Data.JHCourseTag.Delete(System.Collections.Generic.IEnumerable{JHSchool.Data.JHCourseTagRecord})">
            <summary>
            刪除多筆課程標籤記錄
            </summary>
            <param name="CourseTagRecords">多筆班級課程記錄物件</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHCourseTagRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    List&lt;JHCourseTagRecord&gt; records = JHCourseTag.SelectByCourseID(CourseID);
                    int DeleteCount = JHCourseTag.Delete(records);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>
        </member>
        <member name="M:JHSchool.Data.JHCourseTag.Delete(JHSchool.Data.JHCourseTagRecord)">
            <summary>
            刪除單筆課程標籤記錄
            </summary>
            <param name="CourseTagRecord">課程標籤記錄物件</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHCourseTagRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    List&lt;JHCourseTagRecord&gt; records = JHCourseTag.SelectByCourseID(CourseID);
                    int DeleteCount = JHCourseTag.Delete(records[0]);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>
        </member>
        <member name="T:JHSchool.Data.JHSemesterScoreRecord">
            <summary>
            學生學期成績資訊
            </summary>
        </member>
        <member name="P:JHSchool.Data.JHSemesterScoreRecord.LearnDomainScore">
            <summary>
            學期學習領域成績，由ischool介面所計算
            </summary>
        </member>
        <member name="P:JHSchool.Data.JHSemesterScoreRecord.Domains">
            <summary>
            學期領域成績明細
            </summary>
        </member>
        <member name="P:JHSchool.Data.JHSemesterScoreRecord.Student">
            <summary>
            所屬學生
            </summary>
        </member>
        <member name="T:JHSchool.Data.JHAddress">
            <summary>
            學生地址類別，提供方法用來取得及修改學生地址資訊
            </summary>
        </member>
        <member name="M:JHSchool.Data.JHAddress.SelectAll">
            <summary>
            取得所有學生地址記錄物件列表。
            </summary>
            <returns>List&lt;JHAddressRecord&gt;，代表多筆學生地址記錄物件。</returns>
            <seealso cref="T:JHSchool.Data.JHAddressRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;JHAddressRecord&gt; records = JHAddress.SelectAll();
                
                foreach(JHAddressRecord record in records)
                    System.Console.WriteLine(record.Name); 
                </code>
            </example>
        </member>
        <member name="M:JHSchool.Data.JHAddress.SelectByStudent(JHSchool.Data.JHStudentRecord)">
            <summary>
            根據單筆學生記錄物件取得學生地址記錄物件。
            </summary>
            <param name="Student">學生記錄物件</param>
            <returns>JHAddressRecord，代表學生地址物件。</returns>
            <seealso cref="T:JHSchool.Data.JHStudentRecord"/>
            <seealso cref="T:JHSchool.Data.JHAddressRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    JHAddressRecord record = JHAddress.SelectByStudent(Student);
                    
                    if (record!=null)
                        System.Console.WriteLine(record.Permanent.ZipCode); 
                </code>
            </example>
            <remarks>若是Student不存在則會傳回null</remarks>
        </member>
        <member name="M:JHSchool.Data.JHAddress.SelectByStudentID(System.String)">
            <summary>
            根據單筆學生記錄編號取得學生地址記錄物件。
            </summary>
            <param name="StudentID">學生記錄編號</param>
            <returns>JHAddressRecord，代表學生地址記錄物件。</returns>
            <seealso cref="T:JHSchool.Data.JHAddressRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    JHAddressRecord record = JHAddress.SelectByStudentID(StudentID);
                    
                    if (record!=null)
                        System.Console.WriteLine(record.Permanent.ZipCode); 
                </code>
            </example>
            <remarks>若是StudentID不存在則會傳回null</remarks>
        </member>
        <member name="M:JHSchool.Data.JHAddress.SelectByStudents(System.Collections.Generic.IEnumerable{JHSchool.Data.JHStudentRecord})">
            <summary>
            根據多筆學生記錄物件取得地址記錄物件列表。
            </summary>
            <param name="Students">多筆學生記錄物件</param>
            <returns>List&lt;JHAddressRecord&gt;，代表多筆學生地址記錄物件。</returns>
            <seealso cref="T:JHSchool.Data.JHAddressRecord"/>
            <seealso cref="T:JHSchool.Data.JHStudentRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;JHAddressRecord&gt; records = JHAddress.SelectByStudents(Students);
                
                foreach(JHAddressRecord record in records)
                    System.Console.WriteLine(record.Name); 
                </code>
            </example>
            <remarks>可能情況若是傳5筆ID，但是其中1筆沒有資料，就只會回傳4筆資料</remarks>
        </member>
        <member name="M:JHSchool.Data.JHAddress.SelectByStudentIDs(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            根據多筆學生記錄編號取得地址記錄物件列表。
            </summary>
            <param name="StudentIDs">多筆學生記錄編號</param>
            <returns>List&lt;JHAddressRecord&gt;，代表多筆學生地址記錄物件。</returns>
            <seealso cref="T:JHSchool.Data.JHAddressRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;JHAddressRecord&gt; records = JHAddress.SelectByStudentIDs(StudentIDs);
                
                foreach(JHAddressRecord record in records)
                    System.Console.WriteLine(record.Name); 
                </code>
            </example>
            <remarks>可能情況若是傳5筆ID，但是其中1筆沒有資料，就只會回傳4筆資料</remarks>
        </member>
        <member name="M:JHSchool.Data.JHAddress.Update(JHSchool.Data.JHAddressRecord)">
            <summary>
            更新單筆學生地址記錄
            </summary>
            <param name="AddressRecord">學生地址記錄物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHAddressRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                JHAddressRecord record = JHAddress.SelectByStudentID(StudentID);
                record.PerPermanent.ZipCode = (new System.Random()).NextDouble().ToString();
                int UpdateCount = JHAddress.Update(record);
                </code>
            </example>
            <remarks>傳回值為成功更新的筆數。</remarks>
        </member>
        <member name="M:JHSchool.Data.JHAddress.Update(System.Collections.Generic.IEnumerable{JHSchool.Data.JHAddressRecord})">
            <summary>
            更新多筆學生地址記錄
            </summary>
            <param name="AddressRecords">多筆學生地址記錄物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHAddressRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                JHAddressRecord record = JHAddress.SelectByStudentID(StudentID);
                record.PerPermanent.ZipCode = (new System.Random()).NextDouble().ToString();
                List&lt;JHAddressRecord&gt; records = new List&lt;JHAddressRecord&gt;();
                records.Add(record);
                int UpdateCount = JHAddress.Update(records);
                </code>
            </example>
            <remarks>傳回值為成功更新的筆數。</remarks>
        </member>
        <member name="T:JHSchool.Data.JHSchoolInfo">
            <summary>
            提供學校相關資訊。
            </summary>
        </member>
        <member name="P:JHSchool.Data.JHSchoolInfo.EnglishAddress">
            <summary>
            取得學校英文地址。
            </summary>
        </member>
        <member name="P:JHSchool.Data.JHSchoolInfo.ChancellorChineseName">
            <summary>
            取得校長中文名稱。
            </summary>
        </member>
        <member name="P:JHSchool.Data.JHSchoolInfo.ChancellorEnglishName">
            <summary>
            取得校長英文名稱。
            </summary>
        </member>
        <member name="P:JHSchool.Data.JHSchoolInfo.EduDirectorName">
            <summary>
            取得教務主任名稱。
            </summary>
        </member>
        <member name="P:JHSchool.Data.JHSchoolInfo.StuDirectorName">
            <summary>
            取得學務主任名稱。
            </summary>
        </member>
        <member name="T:JHSchool.Data.JHProgramPlanRecord">
            <summary>
            課程規劃資訊
            </summary>
        </member>
        <member name="T:JHSchool.Data.JHExam">
            <summary>
            試別項目類別，提供方法用來取得、新增、修改及刪除試別項目資訊
            </summary>
        </member>
        <member name="M:JHSchool.Data.JHExam.SelectAll">
            <summary>
            取得所有考試項目列表。
            </summary>
            <returns>List&lt;JHExamRecord&gt;，代表多筆考試項目記錄物件。</returns>
            <seealso cref="T:JHSchool.Data.JHExamRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                List&lt;JHExamRecord&gt; records = JHExam.SelectAll();
            </example>
        </member>
        <member name="M:JHSchool.Data.JHExam.SelectByID(System.String)">
            <summary>
            根據單筆考試項目編號取得考試項目。
            </summary>
            <param name="ExamID">單筆考試項目編號</param>
            <returns>JHExamRecord，代表單筆考試項目記錄物件。</returns>
            <seealso cref="T:JHSchool.Data.JHExamRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                JHExamRecord record = JHExam.SelectByID(ExamID);
            </example>
        </member>
        <member name="M:JHSchool.Data.JHExam.SelectByIDs(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            根據多筆考試項目編號取得考試項目列表。
            </summary>
            <param name="ExamIDs">多筆考試項目編號</param>
            <returns>List&lt;JHExamRecord&gt;，代表多筆考試項目記錄物件。</returns>
            <seealso cref="T:JHSchool.Data.JHExamRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                List&lt;JHExamRecord&gt; records = JHExam.SelectByIDs(ExamIDs);
            </example>
        </member>
        <!-- 忽略成員 "M:JHSchool.Data.JHExam.Insert(JHSchool.Data.JHExamRecord)" 中格式錯誤的 XML 註解 -->
        <!-- 忽略成員 "M:JHSchool.Data.JHExam.Insert(System.Collections.Generic.IEnumerable{JHSchool.Data.JHExamRecord})" 中格式錯誤的 XML 註解 -->
        <member name="M:JHSchool.Data.JHExam.Update(JHSchool.Data.JHExamRecord)">
            <summary>
            更新單筆考試項目記錄
            </summary>
            <param name="ExamRecord">考試項目記錄物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHExamRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:JHSchool.Data.JHExam.Update(System.Collections.Generic.IEnumerable{JHSchool.Data.JHExamRecord})">
            <summary>
            更新多筆考試項目記錄
            </summary>
            <param name="ExamRecords">多筆考試項目記錄</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHExamRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:JHSchool.Data.JHExam.Delete(JHSchool.Data.JHExamRecord)">
            <summary>
            刪除單筆考試項目記錄
            </summary>
            <param name="ExamRecord">考試項目記錄物件</param> 
            <returns>int，傳回成功刪除的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHExamRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:JHSchool.Data.JHExam.Delete(System.String)">
            <summary>
            刪除單筆考試項目記錄
            </summary>
            <param name="ExamRecordID">考試項目記錄編號</param> 
            <returns>int，傳回成功刪除的筆數。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:JHSchool.Data.JHExam.Delete(System.Collections.Generic.IEnumerable{JHSchool.Data.JHExamRecord})">
            <summary>
            刪除多筆考試項目記錄
            </summary>
            <param name="ExamRecords">多筆考試項目記錄物件</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <seealso cref="T:K12.Data.ExamRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:JHSchool.Data.JHExam.Delete(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            刪除多筆考試項目記錄
            </summary>
            <param name="ExamRecordIDs">多筆考試項目記錄編號</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="T:JHSchool.Data.JHAEIncludeRecord">
            <summary>
            評分樣板資訊
            </summary>
        </member>
        <member name="P:JHSchool.Data.JHAEIncludeRecord.UseEffort">
            <summary>
            是否有努力程度
            </summary>
        </member>
        <member name="P:JHSchool.Data.JHAEIncludeRecord.UseText">
            <summary>
            是否有文字評量
            </summary>
        </member>
        <member name="P:JHSchool.Data.JHAEIncludeRecord.AssessmentSetup">
            <summary>
            試別樣版記錄物件
            </summary>
        </member>
        <member name="P:JHSchool.Data.JHAEIncludeRecord.Exam">
            <summary>
            試別項目記錄物件
            </summary>
        </member>
        <member name="T:JHSchool.Data.JHUpdateRecord">
            <summary>
            學生異動記錄類別，提供方法用來取得、新增、修改及刪除學生異動記錄
            </summary>
        </member>
        <member name="M:JHSchool.Data.JHUpdateRecord.SelectAll">
            <summary>
            取得所有學生異動記錄列表。
            </summary>
            <returns>List&lt;JHUpdateRecordRecord&gt;，代表多筆學生異動記錄物件。</returns>
            <seealso cref="T:JHSchool.Data.JHUpdateRecordRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;JHUpdateRecordRecord&gt; records = JHUpdateRecord.SelectAll();
                
                foreach(JHUpdateRecordRecord record in records)
                    Console.WrlteLine(record.StudentName);
                </code>
            </example>
        </member>
        <member name="M:JHSchool.Data.JHUpdateRecord.SelectByStudentID(System.String)">
            <summary>
            根據單筆學生編號取得學生異動記錄列表。
            </summary>
            <param name="StudentID">學生記錄編號</param>
            <returns>List&lt;JHUpdateRecordRecord&gt;，代表多筆學生異動記錄列表。</returns>
            <seealso cref="T:JHSchool.Data.JHUpdateRecordRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;JHUpdateRecordRecord&gt; record = JHUpdateRecord.SelectByStudentID(StudentID);
                
                if (record != null)
                   System.Console.WriteLine(record.StudentName);
                </code>
            </example>
            <remarks>若是StudentID不則在則會傳回null</remarks>
        </member>
        <member name="M:JHSchool.Data.JHUpdateRecord.SelectByStudent(JHSchool.Data.JHStudentRecord)">
            <summary>
            根據單筆學生編號取得學生異動記錄列表。
            </summary>
            <param name="Student">學生記錄物件</param>
            <returns>List&lt;JHUpdateRecordRecord&gt;，代表多筆學生異動記錄列表。</returns>
            <seealso cref="T:JHSchool.Data.JHStudentRecord"/>
            <seealso cref="T:JHSchool.Data.JHUpdateRecordRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;JHUpdateRecordRecord&gt; record = JHUpdateRecord.SelectByStudent(Student);
                
                if (record != null)
                   System.Console.WriteLine(record.StudentName);
                </code>
            </example>
        </member>
        <member name="M:JHSchool.Data.JHUpdateRecord.SelectByStudentIDs(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            根據多筆學生編號取得學生異動記錄列表。
            </summary>
            <param name="StudentIDs">多筆學生記錄編號</param>
            <returns>List&lt;JHUpdateRecordRecord&gt;，代表多筆學生異動記錄物件。</returns>
            <seealso cref="T:JHSchool.Data.JHUpdateRecordRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;JHUpdateRecordRecord&gt; records = JHUpdateRecord.SelectByStudentIDs(StudentIDs);
                
                foreach(JHUpdateRecordRecord record in records)
                    System.Console.WriteLine(record.StudentName);
                </code>
            </example>
        </member>
        <member name="M:JHSchool.Data.JHUpdateRecord.SelectByStudents(System.Collections.Generic.IEnumerable{JHSchool.Data.JHStudentRecord})">
            <summary>
            根據多筆學生物件取得學生異動記錄列表。
            </summary>
            <param name="Students">多筆學生記錄物件</param>
            <returns>List&lt;JHUpdateRecordRecord&gt;，代表多筆學生異動記錄物件。</returns>
            <seealso cref="T:JHSchool.Data.JHUpdateRecordRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;JHUpdateRecordRecord&gt; records = JHUpdateRecord.SelectByStudents(Students);
                
                foreach(JHUpdateRecordRecord record in records)
                    System.Console.WriteLine(record.StudentName);
                </code>
            </example>
        </member>
        <member name="M:JHSchool.Data.JHUpdateRecord.SelectByIDs(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            根據多筆異動記錄編號取得學生異動記錄列表。
            </summary>
            <param name="IDs">多筆異動記錄編號</param>
            <returns>List&lt;JHUpdateRecordRecord&gt;，代表多筆學生異動記錄物件。</returns>
            <seealso cref="T:JHSchool.Data.JHUpdateRecordRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;JHUpdateRecordRecord&gt; records = JHUpdateRecord.SelectByIDs(IDs);
                
                foreach(JHUpdateRecordRecord record in records)
                    System.Console.WriteLine(record.StudentName);
                </code>
            </example>
        </member>
        <member name="M:JHSchool.Data.JHUpdateRecord.SelectByUpdateCodes(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            根據異動代碼取得學生異動記錄列表。
            </summary>
            <param name="UpdateCodes">多個異動代碼</param>
            <returns>List&lt;JHUpdateRecordRecord&gt;，代表多筆學生異動記錄物件。</returns>
            <seealso cref="T:JHSchool.Data.JHUpdateRecordRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;JHUpdateRecordRecord&gt; records = JHUpdateRecord.SelectByUpdateCodes(UpdateCodes);
                </code>
            </example>
        </member>
        <member name="M:JHSchool.Data.JHUpdateRecord.Insert(JHSchool.Data.JHUpdateRecordRecord)">
            <summary>
            新增單筆學生異動記錄
            </summary>
            <param name="UpdateRecordRecord">學生異動記錄物件</param>
            <returns>string，傳回新增物件的系統編號。</returns>
            <seealso cref="T:JHSchool.Data.JHUpdateRecordRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    JHUpdateRecordRecord newrecord = new JHUpdateRecordRecord();
                    newrecord.StudentID = StudentID;
                    newrecord.UpdateDate = "2009/9/9";
                    strng NewID = JHUpdateRecord.Insert(newrecord)
                    JHUpdateRecordRecord record = JHUpdateRecord.SelectByID(NewID);
                    System.Console.Writeln(record.Name);
                </code>
            </example>
            <remarks>
            1.新增一律傳回新增物件的編號。
            2.新增必填欄位為學生編號及異動日期。
            </remarks>
        </member>
        <member name="M:JHSchool.Data.JHUpdateRecord.Insert(System.Collections.Generic.IEnumerable{JHSchool.Data.JHUpdateRecordRecord})">
            <summary>
            新增多筆學生異動記錄
            </summary>
            <param name="UpdateRecordRecords">多筆學生異動記錄物件</param> 
            <returns>List&lt;string&gt;，傳回新增物件的系統編號列表。</returns>
            <seealso cref="T:JHSchool.Data.JHUpdateRecordRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    JHUpdateRecordRecord record = new JHUpdateRecordRecord();
                    record.StudentID = StudentID;
                    record.UpdateDate = "2009/9/9";
                    List&lt;JHUpdateRecordRecord&gt; records = new List&lt;JHUpdateRecordRecord&gt;();
                    records.Add(record);
                    List&lt;string&gt; NewID = JHupdateRecord.Insert(records)
                </code>
            </example>
        </member>
        <member name="M:JHSchool.Data.JHUpdateRecord.Update(JHSchool.Data.JHUpdateRecordRecord)">
            <summary>
            更新單筆學生異動記錄
            </summary>
            <param name="UpdateRecordRecord">學生異動記錄物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHUpdateRecordRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                JHUpdateRecordRecord record = JHUpdateRecord.SelectByID(ClassID);
                record.StudentName = (new System.Random()).NextDouble().ToString();
                int UpdateCount = JHUpdateRecord.Update(record);
                </code>
            </example>
            <remarks>傳回值為成功更新的筆數。</remarks>
        </member>
        <member name="M:JHSchool.Data.JHUpdateRecord.Update(System.Collections.Generic.IEnumerable{JHSchool.Data.JHUpdateRecordRecord})">
            <summary>
            更新多筆學生異動記錄
            </summary>
            <param name="UpdateRecordRecords">多筆學生異動記錄物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHUpdateRecordRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                JHUpdateRecordRecord record = JHUpdateRecord.SelectByID(UpdateRecordID);
                record.StudentName = (new System.Random()).NextDouble().ToString();
                List&lt;JHUpdateRecordRecord&gt; records = new List&lt;JHUpdateRecordRecord&gt;();
                records.Add(record);
                int UpdateCount = JHUpdateRecord.Update(records);
                </code>
            </example>
            <remarks>傳回值為成功更新的筆數。</remarks>
        </member>
        <member name="M:JHSchool.Data.JHUpdateRecord.Delete(System.Collections.Generic.IEnumerable{JHSchool.Data.JHUpdateRecordRecord})">
            <summary>
            刪除多筆學生異動記錄
            </summary>
            <param name="UpdateRecordRecords">多筆學生異動記錄物件</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHUpdateRecordRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                  List&lt;JHUpdateRecordRecord&gt; records = JHUpdateRecord.SelectByIDs(UpdateRecordIDs);
                  int DeleteCount = JHUpdateRecord.Delete(records);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>
        </member>
        <member name="M:JHSchool.Data.JHUpdateRecord.Delete(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            刪除多筆學生異動記錄
            </summary>
            <param name="UpdateRecordIDs">多筆學生異動記錄編號</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
               <code>
               int DeleteCount = JHUpdateRecord.Delete(UpdateRecordIDs);
               </code>
            </example>
        </member>
        <member name="M:JHSchool.Data.JHUpdateRecord.Delete(JHSchool.Data.JHUpdateRecordRecord)">
            <summary>
            刪除單筆學生異動記錄
            </summary>
            <param name="UpdateRecordRecord">單筆學生異動記錄物件</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHUpdateRecordRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                  JHUpdateRecordRecord&gt; record = JHUpdateRecord.SelectByID(UpdateRecordID);
                  int DeleteCount = JHUpdateRecord.Delete(record);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>
        </member>
        <member name="M:JHSchool.Data.JHUpdateRecord.Delete(System.String)">
            <summary>
            刪除單筆學生異動記錄
            </summary>
            <param name="UpdateRecordID">單筆學生異動記錄編號</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                  int DeleteCount = JHUpdateRecord.Delete(UpdateRecordID);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>
        </member>
        <member name="T:JHSchool.Data.JHAddressRecord">
            <summary>
            學生地址資訊
            </summary>
        </member>
        <member name="P:JHSchool.Data.JHAddressRecord.Student">
            <summary>
            所屬學生
            </summary>
        </member>
        <member name="T:JHSchool.Data.JHClassTag">
            <summary>
            班級標籤類別，提供方法用來取得、新增、修改及刪除班級標籤資訊
            </summary>
        </member>
        <member name="M:JHSchool.Data.JHClassTag.SelectAll">
            <summary>
            取得所有班級標籤列表。
            </summary>
            <returns>List&lt;JHClassTagRecord&gt;，代表多筆班級標籤物件。</returns>
            <seealso cref="T:JHSchool.Data.JHClassTagRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    List&lt;JHClassTagRecord&gt; records = JHClassTag.SelectAll();
                    
                    foreach(JHClassTagRecord record in records)
                        System.Console.WriteLine(record.Name);
                </code>
            </example>
            <remarks></remarks>       
        </member>
        <member name="M:JHSchool.Data.JHClassTag.SelectByClassID(System.String)">
            <summary>
            根據單筆班級編號取得班級標籤列表。
            </summary>
            <param name="ClassID">班級編號</param>
            <returns>List&lt;JHClassTagRecord&gt;，代表多筆班級標籤物件。</returns>
            <seealso cref="T:JHSchool.Data.JHClassTagRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    List&lt;JHClassTagRecord&gt; records = JHClassTag.SelectByClassID(ClassID);
                    
                    foreach(JHClassTagRecord record in records)
                      System.Console.WriteLine(record.Name);
                </code>
            </example>
            <remarks></remarks>
        </member>
        <member name="M:JHSchool.Data.JHClassTag.SelectByClassIDs(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            根據多筆班級編號取得班級標籤列表。
            </summary>
            <param name="ClassIDs">多筆班級編號</param>
            <returns>List&lt;JHClassTagRecord&gt;，代表多筆班級標籤物件。</returns>
            <seealso cref="T:JHSchool.Data.JHClassTagRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;JHClassTagRecord&gt; records = JHClassTag.SelectByClassIDs(ClassIDs);
                
                forech(JHClassTagRecord record in records)
                    System.Console.WriteLine(record.Name);
                </code>
            </example>
        </member>
        <member name="M:JHSchool.Data.JHClassTag.Insert(JHSchool.Data.JHClassTagRecord)">
            <summary>
            新增單筆班級標籤記錄
            </summary>
            <param name="ClassTagRecord">班級標籤記錄物件</param> 
            <returns>string，傳回新增物件的系統編號。</returns>
            <seealso cref="T:JHSchool.Data.JHClassTagRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                JHClassTagRecord record = new JHClassTagRecord(ClassID, TagConfigID); 
                string NewID = JHClassTag.Insert(record);  
                </code>
            </example>
            <remarks>
            1.新增傳入的參數為班級編號以及標籤編號。
            2.回傳值為新增物件的系統編號。
            </remarks>        
        </member>
        <member name="M:JHSchool.Data.JHClassTag.Insert(System.Collections.Generic.IEnumerable{JHSchool.Data.JHClassTagRecord})">
            <summary>
            新增多筆班級標籤記錄
            </summary>
            <param name="ClassTagRecords">多筆班級記錄物件</param> 
            <returns>List&lt;string&gt;，傳回新增物件的系統編號列表。</returns>
            <seealso cref="T:JHSchool.Data.JHClassTagRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                JHClassTagRecord record = new JHClassTagRecord(ClassID, TagConfigID); 
                List&lt;JHClassTagRecord&gt; records = new List&lt;JHClassTagRecord&gt;();
                records.Add(record);
                List&lt;string&gt; NewIDs = JHClassTag.Insert(records);  
                </code>
            </example>
            <remarks>
            1.新增傳入的參數為班級編號以及標籤編號。
            2.回傳值為新增物件的系統編號。
            </remarks>
        </member>
        <member name="M:JHSchool.Data.JHClassTag.Update(JHSchool.Data.JHClassTagRecord)">
            <summary>
            更新單筆班級標籤記錄
            </summary>
            <param name="ClassTagRecord">班級標籤記錄物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHClassTagRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    List&lt;JHClassTagRecord&gt; records = JHClassTag.SelectByClassID(ClassID);        
                    records[0].RefEntityID = ClassID;
                    records[0].RefTagID = TagConfigID;
                    int UpdateCount = JHClassTag.Update(record[0]);
                </code>
            </example>
            <remarks>
            1.更新的欄位值只有ClassID及TagConfigID，其它為唯讀欄位。
            2.傳回值為成功更新的筆數。
            </remarks>
        </member>
        <member name="M:JHSchool.Data.JHClassTag.Update(System.Collections.Generic.IEnumerable{JHSchool.Data.JHClassTagRecord})">
            <summary>
            更新多筆班級標籤記錄
            </summary>
            <param name="ClassTagRecords">多筆班級標籤記錄物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHClassTagRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    List&lt;JHClassTagRecord&gt; records = JHClassTag.SelectByClassID(ClassID);
                    records[0].RefEntityID = ClassID;
                    records[0].RefTagID = TagConfigID;
                    int UpdateCount = JHClassTag.Update(records);
                </code>
            </example>
            <remarks>
            1.更新的欄位值只有ClassID及TagConfigID，其它為唯讀欄位。
            2.傳回值為成功更新的筆數。
            </remarks>
        </member>
        <member name="M:JHSchool.Data.JHClassTag.Delete(System.Collections.Generic.IEnumerable{JHSchool.Data.JHClassTagRecord})">
            <summary>
            刪除多筆班級標籤記錄
            </summary>
            <param name="ClassTagRecords">多筆班級標籤記錄物件</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHClassTagRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    List&lt;JHClassTagRecord&gt; records = JHClassTag.SelectByClassID(ClassID);
                    int DeleteCount = JHClassTag.Delete(records);
                </code>
            </example>
            <remarks>
            傳回值為成功刪除的筆數。
            </remarks>
        </member>
        <member name="M:JHSchool.Data.JHClassTag.Delete(JHSchool.Data.JHClassTagRecord)">
            <summary>
            刪除單筆班級記錄
            </summary>
            <param name="ClassTagRecord">班級記錄物件</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHClassTagRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    List&lt;JHClassTagRecord&gt; records = JHClassTag.SelectByClassID(ClassID);
                    int DeleteCount = JHClassTag.Delete(records[0]);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>
        </member>
        <member name="T:JHSchool.Data.JHMoralScore">
            <summary>
            學期德行評量類別，提供方法用來取得、新增、修改及刪除學期德行評量資訊
            </summary>
        </member>
        <member name="M:JHSchool.Data.JHMoralScore.SelectAll">
            <summary>
            取得所有學期德行評量列表。
            </summary>
            <returns>List&lt;JHMoralScoreRecord&gt;，代表多筆學期德行評量記錄物件。</returns>
            <seealso cref="T:JHSchool.Data.JHMoralScoreRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;JHMoralScoreRecord&gt; records = JHMoralScore.SelectAll();
                </code>
            </example>
        </member>
        <member name="M:JHSchool.Data.JHMoralScore.Select(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            取得德行評量列表
            </summary>
            <param name="IDs">德行評量記錄物件編號列表。</param>
            <param name="StudentIDs">學生編號列表。</param>
            <param name="SchoolYear">學年度。</param>
            <param name="Semester">學期。</param>
            <returns>List&lt;MoralScoreRecord&gt;，代表多筆學期德行評量記錄物件。</returns>
        </member>
        <member name="M:JHSchool.Data.JHMoralScore.Select(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{K12.Data.SchoolYearSemester})">
            <summary>
            取得德行評量列表 
            </summary>
            <param name="IDs">德行評量記錄物件編號列表。</param>
            <param name="StudentIDs">學生編號列表。</param>
            <param name="SchoolYear">學年度。</param>
            <param name="Semester">學期。</param>
            <param name="SchoolYearSemesters">學年度學期列表。</param>
            <returns>List&lt;JHMoralScoreRecord&gt;，代表多筆學期德行評量記錄物件。</returns>
        </member>
        <member name="M:JHSchool.Data.JHMoralScore.SelectBySchoolYearAndSemester(System.String,System.Int32,System.Int32)">
            <summary>
            根據學生編號、學年度及學期取得學期德行評量列表。
            </summary>
            <param name="StudentID">學生編號</param>
            <param name="SchoolYear">學年度</param>
            <param name="Semester">學期</param>
            <returns>List&lt;JHMoralScoreRecord&gt;，代表多筆學期德行評量記錄物件。</returns>
            <seealso cref="T:JHSchool.Data.JHMoralScoreRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                List&lt;JHMoralScoreRecord&gt; records = JHMoralScore.SelectBySchoolYearAndSemester(StudentID,SchoolYear,Semester);
            </example>
        </member>
        <member name="M:JHSchool.Data.JHMoralScore.SelectByStudentIDs(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            根據多筆學生編號取得學期德行評量列表。
            </summary>
            <param name="StudentIDs">多筆學生編號</param>
            <returns>List&lt;JHMoralScoreRecord&gt;，代表多筆學期德行評量記錄物件。</returns>
            <seealso cref="T:JHSchool.Data.JHMoralScoreRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                List&lt;JHMoralScoreRecord&gt; records = JHMoralScore.SelectByStudentIDs(StudentIDs);
            </example>
        </member>
        <!-- 忽略成員 "M:JHSchool.Data.JHMoralScore.Insert(JHSchool.Data.JHMoralScoreRecord)" 中格式錯誤的 XML 註解 -->
        <!-- 忽略成員 "M:JHSchool.Data.JHMoralScore.Insert(System.Collections.Generic.IEnumerable{JHSchool.Data.JHMoralScoreRecord})" 中格式錯誤的 XML 註解 -->
        <member name="M:JHSchool.Data.JHMoralScore.Update(JHSchool.Data.JHMoralScoreRecord)">
            <summary>
            更新單筆學期德行評量記錄
            </summary>
            <param name="MoralScoreRecord">學期德行評量記錄物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHMoralScoreRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:JHSchool.Data.JHMoralScore.Update(System.Collections.Generic.IEnumerable{JHSchool.Data.JHMoralScoreRecord})">
            <summary>
            更新多筆學期德行評量記錄
            </summary>
            <param name="MoralScoreRecords">多筆學期德行評量記錄</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHMoralScoreRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:JHSchool.Data.JHMoralScore.Delete(JHSchool.Data.JHMoralScoreRecord)">
            <summary>
            刪除單筆學期德行評量記錄
            </summary>
            <param name="MoralScoreRecord">學期德行評量記錄物件</param> 
            <returns>int，傳回成功刪除的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHMoralScoreRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:JHSchool.Data.JHMoralScore.Delete(System.String)">
            <summary>
            刪除單筆學期德行評量記錄
            </summary>
            <param name="MoralScoreID">學期德行評量記錄編號</param> 
            <returns>int，傳回成功刪除的筆數。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:JHSchool.Data.JHMoralScore.Delete(System.Collections.Generic.IEnumerable{JHSchool.Data.JHMoralScoreRecord})">
            <summary>
            刪除多筆學期德行評量記錄
            </summary>
            <param name="MoralScoreRecords">多筆學期德行評量記錄物件</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHMoralScoreRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:JHSchool.Data.JHMoralScore.Delete(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            刪除多筆學期德行評量記錄
            </summary>
            <param name="MoralScoreIDs">多筆學期德行評量記錄編號</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="T:JHSchool.Data.JHParentRecord">
            <summary>
            家長及監護人資訊
            </summary>
        </member>
        <member name="P:JHSchool.Data.JHParentRecord.Student">
            <summary>
            所屬學生記錄物件
            </summary>
        </member>
        <member name="T:JHSchool.Data.JHSemesterHistory">
            <summary>
            學期歷程類別，提供方法用來取得及修改學期歷程資訊
            </summary>
        </member>
        <member name="M:JHSchool.Data.JHSemesterHistory.SelectAllDetail">
            <summary>
            取得所有學生學期歷程細項列表。
            </summary>
            <returns></returns>
        </member>
        <member name="M:JHSchool.Data.JHSemesterHistory.SelectAll">
            <summary>
            取得所有學生學期歷程列表。
            </summary>
            <returns>List&lt;JHSemesterHistoryRecord&gt;，代表多筆學期歷程物件。</returns>
            <seealso cref="T:JHSchool.Data.JHSemesterHistoryRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    List&lt;JHSemesterHistoryRecord&gt; records = JHSemesterHistory.SelectAll();
                    
                    foreach(JHSemesterHistoryRecord record in records)
                        System.Console.Writeln(record.SchoolYear); 
                </code>
            </example>
        </member>
        <member name="M:JHSchool.Data.JHSemesterHistory.SelectByStudentID(System.String)">
            <summary>
            根據學生編號取得學期歷程。
            </summary>
            <param name="StudentID">學生編號</param>
            <returns>JHSemesterHistoryRecord，代表學期歷程物件。</returns>
            <seealso cref="T:JHSchool.Data.JHSemesterHistoryRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                JHSemesterHistoryRecord record = JHSemesterHistory.SelectByStudentID(StudentID);
                
                if (record != null)
                {
                   System.Console.WriteLine(record.SchoolYear);
                   System.Console.WriteLine(record.Semester);
                }
                </code>
            </example>
            <remarks>若是StudentID不存在則會傳回null</remarks>
        </member>
        <member name="M:JHSchool.Data.JHSemesterHistory.SelectByStudent(JHSchool.Data.JHStudentRecord)">
             <summary>
             根據學生物件取得學期歷程。
             </summary>
             <param name="Student">學生物件</param>
             <returns>JHSemesterHistoryRecord，代表學期歷程物件。</returns>
             <seealso cref="T:JHSchool.Data.JHStudentRecord"/>
             <seealso cref="T:JHSchool.Data.JHSemesterHistoryRecord"/>
             <exception cref="T:System.Exception">
             </exception>
             <sample>
                 <code>
                 JHSemesterHistoryRecord record = JHSemesterHistory.SelectByStudent(Student);
                 
                 if (record != null)
                 {
                    System.Console.WriteLine(record.SchoolYear);
                    System.Console.WriteLine(record.Semester);
                 }
                 </code>
            </sample>
             <remarks>若是StudentID不存在則會傳回null</remarks>
        </member>
        <member name="M:JHSchool.Data.JHSemesterHistory.SelectByStudents(System.Collections.Generic.IEnumerable{JHSchool.Data.JHStudentRecord})">
            <summary>
            根據多筆學生物件取得學期歷程列表。
            </summary>
            <param name="Students">多筆學生物件</param>
            <returns>List&lt;JHSemesterHistoryRecord&gt;，代表多筆學期歷程物件。</returns>
            <seealso cref="T:JHSchool.Data.JHStudentRecord"/>
            <seealso cref="T:JHSchool.Data.JHSemesterHistoryRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    List&lt;JHSemesterHistoryRecord&gt; records = JHSemesterHistory.SelectByStudents(Students);
                    
                    foreach(JHSemesterHistoryRecord record in records)
                        System.Console.Writeln(record.SchoolYear); 
                </code>
            </example>
            <remarks>可能情況若是傳5筆ID，但是其中1筆沒有資料，就只會回傳4筆資料</remarks>
        </member>
        <member name="M:JHSchool.Data.JHSemesterHistory.SelectByStudentIDs(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            根據多筆學生編號取得學期歷程列表。
            </summary>
            <param name="StudentIDs">多筆學生編號</param>
            <returns>List&lt;JHSemesterHistoryRecord&gt;，代表多筆學期歷程物件。</returns>
            <seealso cref="T:JHSchool.Data.JHSemesterHistoryRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    List&lt;JHSemesterHistoryRecord&gt; records = JHSemesterHistory.SelectByStudentIDs(StudentIDs);
                    
                    foreach(JHSemesterHistoryRecord record in records)
                        System.Console.Writeln(record.SchoolYear); 
                </code>
            </example>
            <remarks>可能情況若是傳5筆ID，但是其中1筆沒有資料，就只會回傳4筆資料</remarks>
        </member>
        <member name="M:JHSchool.Data.JHSemesterHistory.Update(JHSchool.Data.JHSemesterHistoryRecord)">
            <summary>
            更新單筆學期歷程記錄
            </summary>
            <param name="SemesterHistoryRecord">學期歷程記錄</param>
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHSemesterHistoryRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                JHSemesterHistoryRecord record = JHSmesterHistory.SelectByStudentID(StudentID);
                record.SchoolYear = 100;
                int UpdateCount = JHSmesterHistory.Update(record);
                </code>
            </example>
            <remarks>傳回值為成功更新的筆數。</remarks>
        </member>
        <member name="M:JHSchool.Data.JHSemesterHistory.Update(System.Collections.Generic.IEnumerable{JHSchool.Data.JHSemesterHistoryRecord})">
            <summary>
            更新多筆學期歷程記錄
            </summary>
            <param name="SemesterHistoryRecords">多筆學期歷程記錄物件</param>
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHSemesterHistoryRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                JHSemesterHistoryRecord record = JHSemesterHistory.SelectByStudentID(StudentID);
                record.SchoolYear = 100;
                List&lt;JHSemesterHistoryRecord&gt; records = new List&lt;JHSemesterHistoryRecord&gt;();
                records.Add(record);
                int UpdateCount = JHSemesterHistory.Update(records);
                </code>
            </example>
            <remarks>傳回值為成功更新的筆數。</remarks>
        </member>
        <member name="T:JHSchool.Data.JHStudent">
            <summary>
            學生類別，提供方法用來取得、新增、修改及刪除學生資訊
            </summary>
        </member>
        <member name="M:JHSchool.Data.JHStudent.SelectAll">
            <summary>
            取得所有學生記錄列表。
            </summary>
            <returns>List&lt;JHStudentRecord&gt;，代表多筆學生記錄物件。</returns>
            <seealso cref="T:JHSchool.Data.JHStudentRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;JHStudentRecord&gt; records = JHStudent.SelectAll();
                
                foreach(JHStudentRecord record in records)
                    System.Console.Writeln(record.Name); 
                </code>
            </example>
            <remarks>
            請先using K12.Data;
            </remarks>
        </member>
        <member name="M:JHSchool.Data.JHStudent.SelectByClass(JHSchool.Data.JHClassRecord)">
            <summary>
            根據班級記錄物件取得學生記錄編號列表。
            </summary>
            <param name="ClassRec">班級記錄物件</param>
            <returns>List&lt;JHStudentRecord&gt;，代表多筆學生記錄物件。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;JHStudentRecord&gt; records = JHStudent.SelectByClass(ClassRec);
                
                foreach(JHStudentRecord record in records)
                    System.Console.Writeln(record.Name); 
                </code>
            </example>
            <remarks>
            請先using K12.Data;
            </remarks>
        </member>
        <member name="M:JHSchool.Data.JHStudent.SelectByClassID(System.String)">
            <summary>
            根據班級編號取得學生記錄編號列表。
            </summary>
            <param name="ClassID">班級編號</param>
            <returns>List&lt;JHStudentRecord&gt;，代表多筆學生記錄物件。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;JHStudentRecord&gt; records = JHStudent.SelectByClassID(ClassID);
                
                foreach(JHStudentRecord record in records)
                    System.Console.Writeln(record.Name); 
                </code>
            </example>
            <remarks>
            請先using K12.Data;
            </remarks>
        </member>
        <member name="M:JHSchool.Data.JHStudent.SelectByClasses(System.Collections.Generic.IEnumerable{JHSchool.Data.JHClassRecord})">
            <summary>
            根據多筆班級記錄物件取得學生記錄編號列表。
            </summary>
            <param name="ClassRecs">多筆班級記錄物件</param>
            <returns>List&lt;JHStudentRecord&gt;，代表多筆學生記錄物件。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;JHStudentRecord&gt; records = JHStudent.SelectByClasses(ClassRecs);
                
                foreach(JHStudentRecord record in records)
                    System.Console.Writeln(record.Name); 
                </code>
            </example>
            <remarks>
            請先using K12.Data;
            </remarks>
        </member>
        <member name="M:JHSchool.Data.JHStudent.SelectByClassIDs(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            根據多筆班級編號取得學生記錄編號列表。
            </summary>
            <param name="ClassIDs">多筆班級編號</param>
            <returns>List&lt;JHStudentRecord&gt;，代表多筆學生記錄物件。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;JHHStudentRecord&gt; records = JHStudent.SelectByClassIDs(ClassIDs);
                
                foreach(JHStudentRecord record in records)
                    System.Console.Writeln(record.Name); 
                </code>
            </example>
            <remarks>
            請先using K12.Data;
            </remarks>
        </member>
        <member name="M:JHSchool.Data.JHStudent.SelectByID(System.String)">
            <summary>
            根據單筆學生編號取得學生記錄。
            </summary>
            <param name="StudentID">學生編號</param>
            <returns>JHStudentRecord，代表學生記錄物件</returns>
            <seealso cref="T:JHSchool.Data.JHStudentRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                JHStudentRecord record = JHStudent.SelectByID(StudentID);
                
                if (record != null)
                    System.Console.WriteLine(record.Name);
                </code>
            </example>
            <remarks>若是StudentID不則在則會傳回null</remarks>
        </member>
        <member name="M:JHSchool.Data.JHStudent.SelectByIDs(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            根據多筆學生編號取得學生記錄列表。
            </summary>
            <param name="StudentIDs">多筆學生編號</param>
            <returns>List&lt;JHStudentRecord&gt;，代表多筆學生記錄物件。</returns>
            <seealso cref="T:JHSchool.Data.JHStudentRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;JHStudentRecord&gt; records = JHStudent.SelectByIDs(CourseIDs);
                
                foreach(JHStudentRecord record in records)
                    Console.WrlteLine(record.Name);
                </code>
            </example>
            <remarks>可能情況若是傳5筆ID，但是其中1筆沒有資料，就只會回傳4筆資料</remarks>
        </member>
        <member name="M:JHSchool.Data.JHStudent.Insert(JHSchool.Data.JHStudentRecord)">
            <summary>
            新增單筆學生記錄
            </summary>
            <param name="StudentRecord">學生記錄物件</param>
            <returns>string，傳回新增物件的系統編號。</returns>
            <seealso cref="T:JHSchool.Data.JHStudentRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    JHStudentRecord newrecord = new JHStudentRecord();
                    newrecord.Name = (new System.Random()).NextDouble().ToString();
                    newrecord.Gender = "男";
                    strng NewID = JHStudent.Insert(newrecord)
                    StudentRecord record = JHStudent.SelectByID(NewID);
                    System.Console.Writeln(record.Name);
                </code>
            </example>
            <remarks>
            1.新增一律傳回新增物件的編號。
            2.新增必填欄位為課程名稱（Name）。
            </remarks>
        </member>
        <member name="M:JHSchool.Data.JHStudent.Insert(System.Collections.Generic.IEnumerable{JHSchool.Data.JHStudentRecord})">
            <summary>
            新增多筆學生記錄
            </summary>
            <param name="StudentRecords">多筆班級記錄物件</param>
            <returns>List&lt;string&gt;，傳回新增物件的系統編號列表。</returns>
            <seealso cref="T:JHSchool.Data.JHStudentRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    JHStudentRecord record = new JHStudentRecord();
                    record.Name = (new System.Random()).NextDouble().ToString();
                    List&lt;JHStudentRecord&gt; records = new List&lt;JHStudentRecord&gt;();
                    records.Add(record);
                    List&lt;string&gt; NewID = JHStudent.Insert(records)
                </code>
            </example>
        </member>
        <member name="M:JHSchool.Data.JHStudent.Update(JHSchool.Data.JHStudentRecord)">
            <summary>
            更新單筆學生記錄
            </summary>
            <param name="StudentRecord">學生記錄物件</param>
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHStudentRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                JHStudentRecord record = JHStudent.SelectByID(StudentID);
                record.Name = (new System.Random()).NextDouble().ToString();
                int UpdateCount = JHStudent.Update(record);
                </code>
            </example>
            <remarks>傳回值為成功更新的筆數。</remarks>
        </member>
        <member name="M:JHSchool.Data.JHStudent.Update(System.Collections.Generic.IEnumerable{JHSchool.Data.JHStudentRecord})">
            <summary>
            更新多筆學生記錄
            </summary>
            <param name="StudentRecords">多筆學生記錄物件</param>
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHStudentRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                JHStudentRecord record = JHStudent.SelectByID(StudentID);
                record.Name = (new System.Random()).NextDouble().ToString();
                List&lt;JHStudentRecord&gt; records = new List&lt;JHStudentRecord&gt;();
                records.Add(record);
                int UpdateCount = JHStudent.Update(records);
                </code>
            </example>
            <remarks>傳回值為成功更新的筆數。</remarks>
        </member>
        <member name="M:JHSchool.Data.JHStudent.Delete(System.Collections.Generic.IEnumerable{JHSchool.Data.JHStudentRecord})">
            <summary>
            刪除多筆學生記錄
            </summary>
            <param name="StudentRecords">多筆學生記錄物件</param>
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHStudentRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                  List&lt;JHStudentRecord&gt; records = JHStudent.SelectByIDs(StudentIDs);
                  int DeleteCount = Student.Delete(records);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>
        </member>
        <member name="M:JHSchool.Data.JHStudent.Delete(JHSchool.Data.JHStudentRecord)">
            <summary>
            刪除單筆學生記錄
            </summary>
            <param name="StudentRecord">學生記錄物件</param>
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHStudentRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                  JHStudentRecord record = JHStudent.SelectByID(StudentID);
                  int DeleteCount = JHStudent.Delete(record);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>
        </member>
        <member name="M:JHSchool.Data.JHStudent.Delete(System.String)">
            <summary>
            刪除單筆學生記錄
            </summary>
            <param name="StudentID">學生記錄編號</param>
            <returns>int，傳回成功更新的筆數。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                  int DeleteCount = JHStudent.Delete(StudentID);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>
        </member>
        <member name="M:JHSchool.Data.JHStudent.Delete(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            刪除多筆學生標籤記錄
            </summary>
            <param name="StudentIDs">多筆學生記錄編號</param>
            <returns>int，傳回成功更新的筆數。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                  int DeleteCount = JHStudent.Delete(StudentIDs);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>
        </member>
        <member name="T:JHSchool.Data.JHTCInstruct">
            <summary>
            教師教授課程類別，提供方法用來取得、新增、修改及刪除教師教授課程資訊
            </summary>
        </member>
        <member name="M:JHSchool.Data.JHTCInstruct.SelectAll">
            <summary>
            取得所有教師教授課程列表。
            </summary>
            <returns>List&lt;JHTCInstructRecord&gt;，代表多筆教師教授課程記錄物件。</returns>
            <seealso cref="T:JHSchool.Data.JHTCInstructRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;JHTCInstructRecord&gt; records = JHTCInstruct.SelectAll();
                </code>
            </example>
        </member>
        <member name="M:JHSchool.Data.JHTCInstruct.SelectByIDs(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            根據多筆教師教授課程編號取得教師教授課程列表。
            </summary>
            <param name="TCInstructIDs">多筆教師教授課程編號</param>
            <returns>List&lt;JHTCInstructRecord&gt;，代表多筆教師教授課程記錄物件。</returns>
            <seealso cref="T:JHSchool.Data.JHTCInstructRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                List&lt;JHTCInstructRecord&gt; records = JHTCInstruct.SelectByIDs(TCInstructIDs);
            </example>
        </member>
        <member name="M:JHSchool.Data.JHTCInstruct.SelectByTeacherIDAndCourseID(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            根據多筆教師教授課程編號及課程編號取得教師教授課程列表。
            </summary>
            <param name="CourseIDs">多筆課程編號</param>
            <param name="TeacherIDs">多筆教師編號</param>
            <returns>List&lt;JHTCInstructRecord&gt;，代表多筆教師教授課程記錄物件。</returns>
            <seealso cref="T:JHSchool.Data.JHTCInstructRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    List&lt;JHTCInstructRecord&gt; records = JHTCInstruct.SelectByTeacherIDAndCourseID(TeacherIDs,CourseIDs);
                </code>
            </example>
        </member>
        <member name="M:JHSchool.Data.JHTCInstruct.Insert(JHSchool.Data.JHTCInstructRecord)">
            <summary>
            新增單筆教師教授課程記錄
            </summary>
            <param name="TCInstructRecord">教師教授課程記錄物件</param>
            <returns>string，傳回新增物件的系統編號。</returns>
            <seealso cref="T:JHSchool.Data.JHTCInstructRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
            </example>
        </member>
        <!-- 忽略成員 "M:JHSchool.Data.JHTCInstruct.Insert(System.Collections.Generic.IEnumerable{JHSchool.Data.JHTCInstructRecord})" 中格式錯誤的 XML 註解 -->
        <member name="M:JHSchool.Data.JHTCInstruct.Update(JHSchool.Data.JHTCInstructRecord)">
            <summary>
            更新單筆教師教授課程記錄
            </summary>
            <param name="TCInstructRecord">教師教授課程記錄物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHTCInstructRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:JHSchool.Data.JHTCInstruct.Update(System.Collections.Generic.IEnumerable{JHSchool.Data.JHTCInstructRecord})">
            <summary>
            更新多筆教師教授課程記錄
            </summary>
            <param name="TCInstructRecords">多筆教師教授課程記錄</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHTCInstructRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:JHSchool.Data.JHTCInstruct.Delete(JHSchool.Data.JHTCInstructRecord)">
            <summary>
            刪除單筆教師教授課程記錄
            </summary>
            <param name="TCInstructRecord">教師教授課程記錄物件</param> 
            <returns>int，傳回成功刪除的筆數。</returns>
            <seealso cref="T:K12.Data.TCInstructRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:JHSchool.Data.JHTCInstruct.Delete(System.String)">
            <summary>
            刪除單筆教師教授課程記錄
            </summary>
            <param name="TCInstructID">教師教授課程編號</param> 
            <returns>int，傳回成功刪除的筆數。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:JHSchool.Data.JHTCInstruct.Delete(System.Collections.Generic.IEnumerable{JHSchool.Data.JHTCInstructRecord})">
            <summary>
            刪除多筆教師教授課程記錄
            </summary>
            <param name="TCInstructRecords">多筆教師教授課程記錄物件</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHTCInstructRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:JHSchool.Data.JHTCInstruct.Delete(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            刪除多筆教師教授課程記錄
            </summary>
            <param name="TCInstructIDs">多筆教師教授課程編號</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="T:JHSchool.Data.JHSemesterScore">
            <summary>
            學生學期成績類別，提供方法用來取得、新增、修改及刪除學生學期成績資訊
            </summary>
        </member>
        <member name="M:JHSchool.Data.JHSemesterScore.SelectAllSubjectScore">
            <summary>
            取得所有科目成績
            </summary>
            <returns></returns>
        </member>
        <member name="M:JHSchool.Data.JHSemesterScore.SelectAllDomainScore">
            <summary>
            取得所有領域成績
            </summary>
            <returns></returns>
        </member>
        <member name="M:JHSchool.Data.JHSemesterScore.SelectAll">
            <summary>
            取得所有學生學期成績記錄物件。
            </summary>
            <returns>List&lt;JHSemesterScoreRecord&gt;</returns>
        </member>
        <member name="M:JHSchool.Data.JHSemesterScore.SelectBySchoolYearAndSemester(System.String,System.Int32,System.Int32)">
            <summary>
            根據學生編號、學年度及學期取得學生學期成績。
            </summary>
            <param name="StudentID">學生編號</param>
            <param name="SchoolYear">學年度</param>
            <param name="Semester">學期</param>
            <returns>JHSemesterScoreRecord，代表學生學期成績記錄物件。</returns>
            <seealso cref="T:JHSchool.Data.JHSemesterScoreRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                JHSemesterScoreRecord record = JHSemesterScore.SelectBySchoolYearAndSemester(StudentID,SchoolYear,Semester);
            </example>
        </member>
        <member name="M:JHSchool.Data.JHSemesterScore.SelectBySchoolYearAndSemester(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            根據多筆學生編號、學年度、學期取得學生學期成績列表。
            </summary>
            <param name="StudentIDs">多筆學生編號</param>
            <param name="SchoolYear">學年度，傳入null代表取得所有學年度資料。</param>
            <param name="Semester">學期，傳入null代表取得所有學期資料。</param>
            <returns>List&lt;JHSemesterScoreRecord&gt;，代表多筆學生學期成績記錄物件。</returns>
            <seealso cref="T:JHSchool.Data.JHSemesterScoreRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                List&lt;JHSemesterScoreRecord&gt; records = JHSemesterScore.SelectBySchoolYearAndSemester(StudentIDs,SchoolYear,Semester);
            </example>
        </member>
        <member name="M:JHSchool.Data.JHSemesterScore.SelectByStudentIDs(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            根據多筆學生編號取得學生學期成績列表。
            </summary>
            <param name="StudentIDs">多筆學生編號</param>
            <returns>List&lt;JHSemesterScoreRecord&gt;，代表多筆學生學期成績記錄物件。</returns>
            <seealso cref="T:JHSchool.Data.JHSemesterScoreRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                List&lt;JHSemesterScoreRecord&gt; records = JHSemesterScore.SelectByStudentIDs(StudentIDs);
            </example>
        </member>
        <member name="M:JHSchool.Data.JHSemesterScore.SelectByStudents(System.Collections.Generic.IEnumerable{JHSchool.Data.JHStudentRecord})">
            <summary>
            根據多筆學生記錄物件取得學生學期成績列表。
            </summary>
            <param name="Students">多筆學生記錄物件</param>
            <returns>List&lt;JHSemesterScoreRecord&gt;，代表多筆學生學期成績記錄物件。</returns>
            <seealso cref="T:JHSchool.Data.JHSemesterScoreRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                List&lt;JHSemesterScoreRecord&gt; records = JHSemesterScore.SelectByStudents(Students);
            </example>
        </member>
        <member name="M:JHSchool.Data.JHSemesterScore.SelectByStudentID(System.String)">
            <summary>
            根據學生編號取得學生學期成績列表。
            </summary>
            <param name="StudentID">學生編號</param>
            <returns>List&lt;JHSemesterScoreRecord&gt;，代表多筆學生學期成績記錄物件。</returns>
            <seealso cref="T:JHSchool.Data.JHSemesterScoreRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                List&lt;JHSemesterScoreRecord&gt; records = JHSemesterScore.SelectByStudentID(StudentID);
            </example>
        </member>
        <member name="M:JHSchool.Data.JHSemesterScore.SelectByStudent(JHSchool.Data.JHStudentRecord)">
            <summary>
            根據學生記錄物件取得學生學期成績列表。
            </summary>
            <param name="Student">學生記錄物件</param>
            <returns>List&lt;JHSemesterScoreRecord&gt;，代表多筆學生學期成績記錄物件。</returns>
            <seealso cref="T:JHSchool.Data.JHSemesterScoreRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                List&lt;JHSemesterScoreRecord&gt; records = JHSemesterScore.SelectByStudent(Student);
            </example>
        </member>
        <!-- 忽略成員 "M:JHSchool.Data.JHSemesterScore.Insert(JHSchool.Data.JHSemesterScoreRecord)" 中格式錯誤的 XML 註解 -->
        <!-- 忽略成員 "M:JHSchool.Data.JHSemesterScore.Insert(System.Collections.Generic.IEnumerable{JHSchool.Data.JHSemesterScoreRecord})" 中格式錯誤的 XML 註解 -->
        <member name="M:JHSchool.Data.JHSemesterScore.Update(JHSchool.Data.JHSemesterScoreRecord)">
            <summary>
            更新單筆學生學期成績記錄
            </summary>
            <param name="SemesterScoreRecord">學生學期成績記錄物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHSemesterScoreRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:JHSchool.Data.JHSemesterScore.Update(System.Collections.Generic.IEnumerable{JHSchool.Data.JHSemesterScoreRecord})">
            <summary>
            更新多筆學生學期成績記錄
            </summary>
            <param name="SemesterScoreRecords">多筆學生學期成績記錄</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHSemesterScoreRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:JHSchool.Data.JHSemesterScore.Delete(JHSchool.Data.JHSemesterScoreRecord)">
            <summary>
            刪除單筆學生學期成績記錄
            </summary>
            <param name="SemesterScoreRecord">學生學期成績記錄物件</param> 
            <returns>int，傳回成功刪除的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHSemesterScoreRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:JHSchool.Data.JHSemesterScore.Delete(System.String)">
            <summary>
            刪除單筆學生學期成績記錄
            </summary>
            <param name="SemesterScoreID">學生學期成績編號</param> 
            <returns>int，傳回成功刪除的筆數。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:JHSchool.Data.JHSemesterScore.Delete(System.Collections.Generic.IEnumerable{JHSchool.Data.JHSemesterScoreRecord})">
            <summary>
            刪除多筆學生學期成績記錄
            </summary>
            <param name="SemesterScoreRecords">多筆學生學期成績記錄物件</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHSemesterScoreRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:JHSchool.Data.JHSemesterScore.Delete(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            刪除多筆學生學期成績記錄
            </summary>
            <param name="SemesterScoreIDs">多筆學生學期成績編號</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="T:JHSchool.Data.JHAttendanceRecord">
            <summary>
            學生缺曠資訊
            </summary>
        </member>
        <member name="P:JHSchool.Data.JHAttendanceRecord.Student">
            <summary>
            所屬學生
            </summary>
        </member>
        <member name="T:JHSchool.Data.JHTeacherRecord">
            <summary>
            教師資訊
            </summary>
        </member>
        <member name="T:JHSchool.Data.JHAssessmentSetup">
            <summary>
            評量設定類別，提供方法用來取得、新增、修改及刪除評量設定資訊
            </summary>
        </member>
        <member name="M:JHSchool.Data.JHAssessmentSetup.SelectAll">
            <summary>
            取得所有評量設定列表。
            </summary>
            <returns>List&lt;JHAssessmentSetupRecord&gt;，代表多筆評量設定記錄物件。</returns>
            <seealso cref="T:JHSchool.Data.JHAssessmentSetupRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                List&lt;JHAssessmentSetupRecord&gt; records = JHAssessmentSetup.SelectAll();
            </example>
        </member>
        <member name="M:JHSchool.Data.JHAssessmentSetup.SelectByID(System.String)">
            <summary>
            根據評量設定編號取得評量設定記錄物件。
            </summary>
            <param name="AssessmentSetupID">評量設定編號</param>
            <returns>JHAssessmentSetupRecord，代表評量設定記錄物件。</returns>
            <seealso cref="T:JHSchool.Data.JHAssessmentSetupRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                List&lt;JHAssessmentSetupRecord&gt; records = JHAssessmentSetup.SelectByID(AssessmentSetupID);
            </example>
        </member>
        <member name="M:JHSchool.Data.JHAssessmentSetup.SelectByIDs(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            根據多筆評量設定編號取得評量設定列表。
            </summary>
            <param name="AssessmentSetupIDs">多筆評量設定編號</param>
            <returns>List&lt;JHAssessmentSetupRecord&gt;，代表多筆評量設定記錄物件。</returns>
            <seealso cref="T:JHSchool.Data.JHAssessmentSetupRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                List&lt;JHAssessmentSetupRecord&gt; records = JHAssessmentSetup.SelectByIDs(AssessmentSetupIDs);
            </example>
        </member>
        <!-- 忽略成員 "M:JHSchool.Data.JHAssessmentSetup.Insert(JHSchool.Data.JHAssessmentSetupRecord)" 中格式錯誤的 XML 註解 -->
        <!-- 忽略成員 "M:JHSchool.Data.JHAssessmentSetup.Insert(System.Collections.Generic.IEnumerable{JHSchool.Data.JHAssessmentSetupRecord})" 中格式錯誤的 XML 註解 -->
        <member name="M:JHSchool.Data.JHAssessmentSetup.Update(JHSchool.Data.JHAssessmentSetupRecord)">
            <summary>
            更新單筆評量設定記錄
            </summary>
            <param name="AssessmentSetupRecord">評量設定記錄物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:K12.Data.AssessmentSetupRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:JHSchool.Data.JHAssessmentSetup.Update(System.Collections.Generic.IEnumerable{JHSchool.Data.JHAssessmentSetupRecord})">
            <summary>
            更新多筆評量設定記錄
            </summary>
            <param name="AssessmentSetupRecords">多筆評量設定記錄</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:K12.Data.AssessmentSetupRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:JHSchool.Data.JHAssessmentSetup.Delete(JHSchool.Data.JHAssessmentSetupRecord)">
            <summary>
            刪除單筆評量設定記錄
            </summary>
            <param name="AssessmentSetupRecord">評量設定記錄物件</param> 
            <returns>int，傳回成功刪除的筆數。</returns>
            <seealso cref="T:K12.Data.AssessmentSetupRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:JHSchool.Data.JHAssessmentSetup.Delete(System.String)">
            <summary>
            刪除單筆評量設定記錄
            </summary>
            <param name="AssessmentSetupRecordID">評量設定記錄編號</param> 
            <returns>int，傳回成功刪除的筆數。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:JHSchool.Data.JHAssessmentSetup.Delete(System.Collections.Generic.IEnumerable{JHSchool.Data.JHAssessmentSetupRecord})">
            <summary>
            刪除多筆評量設定記錄
            </summary>
            <param name="AssessmentSetupRecords">多筆評量設定記錄物件</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <seealso cref="T:K12.Data.AssessmentSetupRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:JHSchool.Data.JHAssessmentSetup.Delete(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            刪除多筆評量設定記錄
            </summary>
            <param name="AssessmentSetupRecordIDs">多筆評量設定記錄編號</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="T:JHSchool.Data.JHClass">
            <summary>
            班級類別，提供方法用來取得、新增、修改及刪除班級資訊
            </summary>
        </member>
        <member name="M:JHSchool.Data.JHClass.SelectAll">
            <summary>
            取得所有班級列表。
            </summary>
            <returns>List&lt;JHClassRecord&gt;，代表班級物件列表。</returns>
            <seealso cref="T:JHSchool.Data.JHClassRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;JHClassRecord&gt; records = JHClass.SelectAll();
                
                foreach(JHClassRecord record in records)
                    System.Console.Writeln(record.Name); 
                </code>
            </example>
            <remarks>
            請先using K12.Data;
            </remarks>
        </member>
        <member name="M:JHSchool.Data.JHClass.SelectByID(System.String)">
             <summary>
             根據單筆班級編號取得班級物件。
             </summary>
             <param name="ClassID">班級編號</param>
             <returns>JHClassRecord，代表班級物件。</returns>
             <seealso cref="T:JHSchool.Data.JHClassRecord"/>
             <exception cref="T:System.Exception">
             </exception>
             <example>
                 <code>
                 List&lt;JHClassRecord&gt; records = JHClass.SelectAll();
             
                 JHClassRecord record = JHClass.SelectByID(records[(new System.Random()).Next(records.Count - 1)].ID);
            
                if (record != null)
                    System.Console.WriteLine(record.Name);
                 </code>
             </example>
             <remarks>若是ClassID不則在則會傳回null</remarks>
        </member>
        <member name="M:JHSchool.Data.JHClass.SelectByIDs(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            根據多筆班級編號取得班級物件列表。
            </summary>
            <param name="ClassIDs">多筆班級編號</param>
            <returns>List&lt;JHClassRecord&gt;，代表班級物件。</returns>
            <seealso cref="T:JHSchool.Data.JHClassRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;JHClassRecord&gt; allrecords = JHClass.SelectAll();
                
                List&lt;string&gt; IDs = new List&lt;string&gt;();
                
                foreach(JHClassRecord record in allrecords)
                    IDs.Add(record.ID);
            
                List&lt;JHClassRecord&gt; records = JHClass.SelectByIDs(IDs);
                </code>
            </example>
            <remarks>可能情況若是傳5筆ID，但是其中1筆沒有資料，就只會回傳4筆資料</remarks>
        </member>
        <member name="M:JHSchool.Data.JHClass.Insert(JHSchool.Data.JHClassRecord)">
            <summary>
            新增單筆班級記錄
            </summary>
            <param name="ClassRecord">班級記錄物件</param>
            <returns>string，傳回新增物件的系統編號。</returns>
            <seealso cref="T:JHSchool.Data.JHClassRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    JHClassRecord newrecord = new JHClassRecord();
                    newrecord.Name = (new System.Random()).NextDouble().ToString();
                    strng NewID = JHClass.Insert(newrecord)
                    JHClassRecord record = JHClass.SelectByID(NewID);
                    System.Console.Writeln(record.Name);
                </code>
            </example>
            <remarks>
            1.新增一律傳回新增物件的編號。
            2.新增必填欄位為課程名稱（Name）。
            </remarks>
        </member>
        <member name="M:JHSchool.Data.JHClass.Insert(System.Collections.Generic.IEnumerable{JHSchool.Data.JHClassRecord})">
            <summary>
            新增多筆班級記錄
            </summary>
            <param name="ClassRecords">多筆班級記錄物件</param> 
            <returns>List&lt;string&gt;，傳回新增物件的系統編號列表。</returns>
            <seealso cref="T:JHSchool.Data.JHClassRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    JHClassRecord record = new JHClassRecord();
                    record.Name = (new System.Random()).NextDouble().ToString();
                    List&lt;JHClassRecord&gt; records = new List&lt;JHClassRecord&gt;();
                    records.Add(record);
                    List&lt;string&gt; NewID = JHClass.Insert(records);
                </code>
            </example>
        </member>
        <member name="M:JHSchool.Data.JHClass.Update(JHSchool.Data.JHClassRecord)">
            <summary>
            更新單筆班級記錄
            </summary>
            <param name="ClassRecord">班級記錄物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHClassRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                JHClassRecord record = JHClass.SelectByID(ClassID);
                record.Name = (new System.Random()).NextDouble().ToString();
                int UpdateCount = JHClass.Update(record);
                </code>
            </example>
            <remarks>傳回值為成功更新的筆數。</remarks>
        </member>
        <member name="M:JHSchool.Data.JHClass.Update(System.Collections.Generic.IEnumerable{JHSchool.Data.JHClassRecord})">
            <summary>
            更新多筆班級記錄
            </summary>
            <param name="ClassRecords">班級記錄物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHClassRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                JHClassRecord record = JHClass.SelectByID(ClassID);
                record.Name = (new System.Random()).NextDouble().ToString();
                List&lt;JHClassRecord&gt; records = new List&lt;JHClassRecord&gt;();
                records.Add(record);
                int UpdateCount = JHClass.Update(records);
                </code>
            </example>
            <remarks>傳回值為成功更新的筆數。</remarks>
        </member>
        <member name="M:JHSchool.Data.JHClass.Delete(System.Collections.Generic.IEnumerable{JHSchool.Data.JHClassRecord})">
            <summary>
            刪除多筆班級記錄
            </summary>
            <param name="ClassRecords">多筆班級記錄物件</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHClassRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                  List&lt;JHClassRecord&gt; records = JHClass.SelectByIDs(ClassIDs);
                  int DeleteCount = JHClass.Delete(records);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>
        </member>
        <member name="M:JHSchool.Data.JHClass.Delete(JHSchool.Data.JHClassRecord)">
            <summary>
            刪除單筆班級記錄
            </summary>
            <param name="ClassRecord">班級記錄物件</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHClassRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                  List&lt;JHClassRecord&gt; record = JHClass.SelectByID(ClassID);
                  int DeleteCount = JHClass.Delete(record);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>
        </member>
        <member name="M:JHSchool.Data.JHClass.Delete(System.String)">
            <summary>
            刪除單筆班級記錄
            </summary>
            <param name="ClassID">班級記錄系統編號</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                  int DeleteCount = JHClass.Delete(ClassID);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>
        </member>
        <member name="M:JHSchool.Data.JHClass.Delete(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            刪除多筆班級記錄
            </summary>
            <param name="ClassIDs">多筆班級記錄系統編號</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                  int DeleteCount = JHClass.Delete(ClassIDs);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>
        </member>
        <member name="T:JHSchool.Data.JHPhone">
            <summary>
            學生電話類別，提供方法用來取得及修改學生電話資訊
            </summary>
        </member>
        <member name="M:JHSchool.Data.JHPhone.SelectAll">
            <summary>
            取得所有學生電話記錄物件。
            </summary>
            <returns>List&lt;JHPhoneRecord&gt;，代表多筆學生電話記錄物件。</returns>
            <seealso cref="T:JHSchool.Data.JHPhoneRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;JHPhoneRecord&gt; records = JHPhone.SelectAll();
                
                foreach(JHPhoneRecord record in records)
                    Console.WrlteLine(record.Permanent);
                </code>
            </example>
        </member>
        <member name="M:JHSchool.Data.JHPhone.SelectByStudentID(System.String)">
            <summary>
            根據單筆學生記錄編號取得學生電話記錄物件。
            </summary>
            <param name="StudentID">學生記錄編號</param>
            <returns>JHPhoneRecord，代表學生電話記錄物件。</returns>
            <seealso cref="T:JHSchool.Data.JHPhoneRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                JHPhoneRecord record = JHPhone.SelectByStudentID(StudentID);
                
               if (record != null)
                   System.Console.WriteLine(record.Permanent);
                </code>
            </example>
            <remarks>若是Student不則在則會傳回null</remarks>
        </member>
        <member name="M:JHSchool.Data.JHPhone.SelectByStudent(JHSchool.Data.JHStudentRecord)">
            <summary>
            根據單筆學生記錄物件取得學生電話記錄物件。
            </summary>
            <param name="Student">學生記錄物件</param>
            <returns>JHPhoneRecord，代表學生電話記錄物件。</returns>
            <seealso cref="T:JHSchool.Data.JHStudentRecord"/>
            <seealso cref="T:JHSchool.Data.JHPhoneRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                JHPhoneRecord record = JHPhone.SelectByStudent(Student);
                
                 if (record != null)
                   System.Console.WriteLine(record.Permanent);
                </code>
            </example>
            <remarks>若是Student不則在則會傳回null</remarks>
        </member>
        <member name="M:JHSchool.Data.JHPhone.SelectByStudents(System.Collections.Generic.List{JHSchool.Data.JHStudentRecord})">
            <summary>
            根據多筆學生記錄物件取得學生電話記錄物件列表。
            </summary>
            <param name="Students">多筆學生記錄物件</param>
            <returns>List&lt;JHPhoneRecord&gt;，代表多筆學生電話記錄物件。</returns>
            <seealso cref="T:JHSchool.Data.JHPhoneRecord"/>
            <seealso cref="T:JHSchool.Data.JHStudentRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;JHPhoneRecord&gt; records = JHPhone.SelectByStudents(Students);
                
                foreach(JHPhoneRecord record in records)
                    Console.WrlteLine(record.Permanent);
                </code>
            </example>
            <remarks>可能情況若是傳5筆學生，但是其中1筆沒有資料，就只會回傳4筆資料</remarks>
        </member>
        <member name="M:JHSchool.Data.JHPhone.SelectByStudentIDs(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            根據多筆學生記錄編號取得學生電話記錄物件列表。
            </summary>
            <param name="StudentIDs">多筆學生記錄編號</param>
            <returns>List&lt;JHPhoneRecord&gt;，代表多筆學生電話記錄物件。</returns>
            <seealso cref="T:JHSchool.Data.JHPhoneRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;JHPhoneRecord&gt; records = JHPhone.SelectByStudentIDs(StudentIDs);
                
                foreach(JHPhoneRecord record in records)
                    Console.WrlteLine(record.Permanent);
                </code>
            </example>
            <remarks>可能情況若是傳5筆學生，但是其中1筆沒有資料，就只會回傳4筆資料</remarks>
        </member>
        <member name="M:JHSchool.Data.JHPhone.Update(JHSchool.Data.JHPhoneRecord)">
            <summary>
            更新單筆學生電話記錄
            </summary>
            <param name="PhoneRecord">學生電話記錄物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHPhoneRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                JHPhoneRecord record = JHPhone.SelectByStudentID(StudentID);
                record.Permanent = (new System.Random()).NextDouble().ToString();
                int UpdateCount = JHPhone.Update(record);
                </code>
            </example>
            <remarks>傳回值為成功更新的筆數。</remarks>
        </member>
        <member name="M:JHSchool.Data.JHPhone.Update(System.Collections.Generic.IEnumerable{JHSchool.Data.JHPhoneRecord})">
            <summary>
            更新多筆學生電話記錄
            </summary>
            <param name="PhoneRecords">多筆學生電話記錄物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHPhoneRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                JHPhoneRecord record = JHPhone.SelectByStudentID(StudentID);
                record.Permanent = (new System.Random()).NextDouble().ToString();
                List&lt;JHPhoneRecord&gt; records = new List&lt;JHPhoneRecord&gt;();
                records.Add(record);
                int UpdateCount = JHPhone.Update(records);
                </code>
            </example>
            <remarks>傳回值為成功更新的筆數。</remarks>
        </member>
        <member name="T:JHSchool.Data.JHSCETake">
            <summary>
            學生期中成績類別，提供方法用來取得、新增、修改及刪除學生期中成績資訊
            </summary>
        </member>
        <member name="M:JHSchool.Data.JHSCETake.SelectAll">
            <summary>
            取得所有學生期中成績列表。
            </summary>
            <returns>List&lt;JHSCETakeRecord&gt;，代表多筆學生期中成績記錄物件。</returns>
            <seealso cref="T:JHSchool.Data.JHSCETakeRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;JHSCETakeRecord&gt; records = JHSCETake.SelectAll();
                </code>
            </example>
        </member>
        <member name="M:JHSchool.Data.JHSCETake.SelectByIDs(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            根據多筆學生期中成績編號取得學生期中成績列表。
            </summary>
            <param name="SCETakeIDs">多筆學生期中成績編號</param>
            <returns>List&lt;JHSCETakeRecord&gt;，代表多筆學生期中成績記錄物件。</returns>
            <seealso cref="T:JHSchool.Data.JHSCETakeRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                List&lt;JHSCETakeRecord&gt; records = JHSCETake.SelectByIDs(SCETakeIDs);
            </example>
        </member>
        <member name="M:JHSchool.Data.JHSCETake.SelectByCourseAndExam(System.String,System.String)">
            <summary>
            根據課程編號及考試項目編號取得學生期中成績列表。
            </summary>
            <param name="CourseID">課程編號</param> 
            <param name="ExamID">考試項目編號</param>
            <returns>List&lt;JHSCETakeRecord&gt;，代表多筆學生期中成績記錄物件。</returns>
            <seealso cref="T:JHSchool.Data.JHSCETakeRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                List&lt;JHSCETakeRecord&gt; records = JHSCETake.SelectByCourseAndExam(CourseID,ExamID);
            </example>
        </member>
        <member name="M:JHSchool.Data.JHSCETake.SelectByCourseAndExam(System.Collections.Generic.List{System.String},System.String)">
            <summary>
            根據多筆課程編號及單筆考試項目編號取得學生期中成績列表。
            </summary>
            <param name="CourseIDs">多筆課程編號</param>
            <param name="ExamID">單筆考試項目編號</param>
            <returns>List&lt;JHSCETakeRecord&gt;，代表多筆學生期中成績記錄物件。</returns>
            <seealso cref="T:JHSchool.Data.JHSCETakeRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                List&lt;JHSCETakeRecord&gt; records = JHSCETake.SelectByCourseAndExam(CourseIDs,ExamID);
            </example>
        </member>
        <member name="M:JHSchool.Data.JHSCETake.SelectByStudentAndCourse(System.String,System.String)">
            <summary>
            根據學生編號及課程編號取得學生期中成績列表。
            </summary>
            <param name="CourseID">課程編號</param> 
            <param name="StudentID">學生編號</param>
            <returns>List&lt;JHSCETakeRecord&gt;，代表多筆學生期中成績記錄物件。</returns>
            <seealso cref="T:JHSchool.Data.JHSCETakeRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                List&lt;SCETakeRecord&gt; records = JHSCETake.SelectByStudentAndCourse(StudentID,CourseID);
            </example>
        </member>
        <member name="M:JHSchool.Data.JHSCETake.SelectByStudentID(System.String)">
            <summary>
            根據單筆學生編號取得學生期中成績列表。
            </summary>
            <param name="StudentID">單筆學生編號</param>
            <returns>List&lt;JHSCETakeRecord&gt;，代表多筆學生期中成績記錄物件。</returns>
            <seealso cref="T:JHSchool.Data.JHSCETakeRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                List&lt;JHSCETakeRecord&gt; records = JHSCETake.SelectByStudentID(StudentID);
            </example>
        </member>
        <member name="M:JHSchool.Data.JHSCETake.SelectByStudentIDs(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            根據多筆學生編號取得學生期中成績列表。
            </summary>
            <param name="StudentIDs">多筆學生編號</param>
            <returns>List&lt;JHSCETakeRecord&gt;，代表多筆學生期中成績記錄物件。</returns>
            <seealso cref="T:JHSchool.Data.JHSCETakeRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                List&lt;JHSCETakeRecord&gt; records = JHSCETake.SelectByStudentID(StudentIDs);
            </example>
        </member>
        <member name="M:JHSchool.Data.JHSCETake.SelectByStudentAndCourse(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            根據多筆學生編號及多筆課程編號取得學生期中成績列表。
            </summary>
            <param name="StudentIDs">多筆學生編號</param>
            <param name="CourseIDs">多筆課程編號</param> 
            <returns>List&lt;JHSCETakeRecord&gt;，代表多筆學生期中成績記錄物件。</returns>
            <seealso cref="T:JHSchool.Data.JHSCETakeRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                List&lt;JHSCETakeRecord&gt; records = JHSCETake.SelectByStudentAndCourse(StudentIDs,CourseIDs);
            </example>
        </member>
        <member name="M:JHSchool.Data.JHSCETake.Insert(JHSchool.Data.JHSCETakeRecord)">
            <summary>
            新增單筆學生期中成績記錄
            </summary>
            <param name="SCETakeRecord">學生期中成績記錄物件</param>
            <returns>string，傳回新增物件的系統編號。</returns>
            <seealso cref="T:JHSchool.Data.JHSCETakeRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
            </example>
        </member>
        <!-- 忽略成員 "M:JHSchool.Data.JHSCETake.Insert(System.Collections.Generic.IEnumerable{JHSchool.Data.JHSCETakeRecord})" 中格式錯誤的 XML 註解 -->
        <member name="M:JHSchool.Data.JHSCETake.Update(JHSchool.Data.JHSCETakeRecord)">
            <summary>
            更新單筆學生期中成績記錄
            </summary>
            <param name="SCETakeRecord">學生期中成績記錄物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:K12.Data.SCETakeRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:JHSchool.Data.JHSCETake.Update(System.Collections.Generic.IEnumerable{JHSchool.Data.JHSCETakeRecord})">
            <summary>
            更新多筆學生期中成績記錄
            </summary>
            <param name="SCETakeRecords">多筆學生期中成績記錄</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:K12.Data.SCETakeRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:JHSchool.Data.JHSCETake.Delete(JHSchool.Data.JHSCETakeRecord)">
            <summary>
            刪除單筆學生期中成績記錄
            </summary>
            <param name="SCETakeRecord">學生期中成績記錄物件</param> 
            <returns>int，傳回成功刪除的筆數。</returns>
            <seealso cref="T:K12.Data.SCETakeRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:JHSchool.Data.JHSCETake.Delete(System.String)">
            <summary>
            刪除單筆學生期中成績記錄
            </summary>
            <param name="SCETakeID">學生期中成績編號</param> 
            <returns>int，傳回成功刪除的筆數。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:JHSchool.Data.JHSCETake.Delete(System.Collections.Generic.IEnumerable{JHSchool.Data.JHSCETakeRecord})">
            <summary>
            刪除多筆學生期中成績記錄
            </summary>
            <param name="SCETakeRecords">多筆學生期中成績記錄物件</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <seealso cref="T:K12.Data.SCETakeRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:JHSchool.Data.JHSCETake.Delete(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            刪除多筆學生期中成績記錄
            </summary>
            <param name="SCETakeIDs">多筆學生期中成績編號</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="T:JHSchool.Data.JHMerit">
            <summary>
            學生獎勵類別，提供方法用來取得、新增、修改及刪除學生獎勵資訊
            </summary>
        </member>
        <member name="M:JHSchool.Data.JHMerit.SelectAll">
            <summary>
            取得所有學生獎勵記錄物件列表。
            </summary>
            <returns>List&lt;JHMeritRecord&gt;，代表多筆學生獎勵記錄物件。</returns>
            <seealso cref="T:JHSchool.Data.JHMeritRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;JHMeritRecord&gt; records = JHMerit.SelectAll();
                
                foreach(JHMeritRecord record in records)
                    System.Console.WriteLine(record.RefStudentID);
                </code>
            </example>
        </member>
        <member name="M:JHSchool.Data.JHMerit.Select(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            根據條件取得獎勵紀錄列表 
            </summary>
            <param name="StudentIDs">學生編號列表</param>
            <param name="StartDate">開始時間</param>
            <param name="EndDate">結束時間</param>
            <param name="StartRegisterDate">開始登錄時間</param>
            <param name="EndRegisterDate">結束登錄時間</param>
            <param name="SchoolYears">學年度列表</param>
            <param name="Semesters">學期列表</param>
            <returns>List&lt;JHMeritRecord&gt;，多筆獎勵紀錄物件列表</returns>
        </member>
        <member name="M:JHSchool.Data.JHMerit.Select(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{K12.Data.SchoolYearSemester})">
            <summary>
            根據條件取得獎勵紀錄列表
            </summary>
            <param name="StudentIDs">學生編號列表</param>
            <param name="StartDate">開始時間</param>
            <param name="EndDate">結束時間</param>
            <param name="StartRegisterDate">開始登錄時間</param>
            <param name="EndRegisterDate">結束登錄時間</param>
            <param name="SchoolYears">學年度列表</param>
            <param name="Semesters">學期列表</param>
            <param name="SchoolYearSemesters">學年度學期列表</param>
            <returns>List&lt;JHMeritRecord&gt;，多筆獎勵紀錄物件列表</returns>
        </member>
        <member name="M:JHSchool.Data.JHMerit.SelectBySchoolYearAndSemester(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            根據單筆學生編號、學年度及學期取得學生獎勵記錄物件列表。
            </summary>
            <param name="StudentID">單筆學生編號</param>
            <param name="SchoolYear">學年度，傳入null取得所有學年度資料</param>
            <param name="Semester">學期，傳入null取得所有學期資料</param>
            <returns>List&lt;JHMeritRecord&gt;，代表多筆學生獎勵記錄物件。</returns>
            <seealso cref="T:JHSchool.Data.JHMeritRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;JHMeritRecord&gt; records = JHMerit.SelectBySchoolYearAndSemester(StudentID,School,Semester);
                
                foreach(JHMeritRecord record in records)
                    System.Console.WriteLine(record.RefStudentID);
                </code>
            </example>
        </member>
        <member name="M:JHSchool.Data.JHMerit.SelectBySchoolYearAndSemester(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            根據多筆學生編號、學年度及學期取得學生獎勵記錄物件列表。
            </summary>
            <param name="StudentIDs">多筆學生編號</param>
            <param name="SchoolYear">學年度，傳入null代表取得所有學年度的資料</param>
            <param name="Semester">學期，傳入null代表取得所有學年度的資料</param>
            <returns>List&lt;MeritRecord&gt;，代表多筆學生獎勵記錄物件。</returns>
            <seealso cref="T:JHSchool.Data.JHMeritRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;JHMeritRecord&gt; records = JHMerit.SelectBySchoolYearAndSemester(StudentIDs,School,Semester);
                
                foreach(JHMeritRecord record in records)
                    System.Console.WriteLine(record.RefStudentID);
                </code>
            </example>
        </member>
        <member name="M:JHSchool.Data.JHMerit.SelectByStudentIDs(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            根據多筆學生編號取得學生獎勵記錄物件列表。
            </summary>
            <param name="StudentIDs">多筆學生編號</param>
            <returns>List&lt;MeritRecord&gt;，代表多筆學生獎勵記錄物件。</returns>
            <seealso cref="T:JHSchool.Data.JHMeritRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;JHMeritRecord&gt; records = JHMerit.SelectByStudentIDs(StudentIDs);
                
                foreach(JHMeritRecord record in records)
                    System.Console.WriteLine(record.RefStudentID);
                </code>
            </example>
        </member>
        <member name="M:JHSchool.Data.JHMerit.SelectByRegisterDate(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            根據多筆學生編號及登錄日期取得學生獎勵記錄物件列表。
            </summary>
            <param name="StudentIDs">多筆學生編號</param>
            <param name="StartRegisterDate">登錄開始日期</param>
            <param name="EndRegisterDate">登錄結束日期</param>
            <returns>List&lt;JHMeritRecord&gt;，代表多筆學生獎勵記錄物件。</returns>
            <seealso cref="T:JHSchool.Data.JHMeritRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;JHMeritRecord&gt; records = JHMerit.SelectByRegisterDate(StudentIDs,StartRegisterDate,EndRegisterDate);
                
                foreach(JHMeritRecord record in records)
                    System.Console.WriteLine(record.RefStudentID);
                </code>
            </example>
            <remarks>
            1.若是StartRegisterDate傳入null，則會傳回EndRegisterDate之前的資料。
            2.若是EndRegisterDate傳入null，則會傳回StartRegisterDate之後的資料。
            </remarks>
        </member>
        <member name="M:JHSchool.Data.JHMerit.SelectByOccurDate(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            根據多筆學生編號及發生日期取得學生獎勵記錄物件列表。
            </summary>
            <param name="StudentIDs">多筆學生編號</param>
            <param name="StartOccurDate">發生開始日期</param>
            <param name="EndOccurDate">發生結束日期</param>
            <returns>List&lt;JHMeritRecord&gt;，代表多筆學生獎勵記錄物件。</returns>
            <seealso cref="T:JHSchool.Data.JHMeritRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;JHMeritRecord&gt; records = JHMerit.SelectByOccurDate(StudentIDs,StartOccurDate,EndOccurDate);
                
                foreach(JHMeritRecord record in records)
                    System.Console.WriteLine(record.RefStudentID);
                </code>
            </example>
            <remarks>
            1.若是StartOccurDate傳入null，則會傳回EndOccurDate之前的資料。
            2.若是EndOccurDate傳入null，則會傳回StartOccurDate之後的資料。
            </remarks>
        </member>
        <member name="M:JHSchool.Data.JHMerit.Insert(JHSchool.Data.JHMeritRecord)">
            <summary>
            新增單筆學生獎勵記錄
            </summary>
            <param name="MeritRecord">學生獎勵記錄物件</param>
            <returns>string，傳回新增物件的系統編號。</returns>
            <seealso cref="T:JHSchool.Data.JHMeritRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    SHMeritRecord newrecord = new SHMeritRecord();
                    newrecord.RefStudentID = RefStudentID;
                    newrecord.SchoolYear = SchoolYear;
                    newrecord.Semester = Semester;
                    newrecord.OccurDate = DateTime.Today;
                    strng NewID = SHMerit.Insert(newrecord)
                    MeritRecord record = SHMerit.SelectByID(NewID);
                    System.Console.Writeln(record.RefStudentID);
                </code>
            </example>
            <remarks>
            1.新增一律傳回新增物件的編號。
            2.新增必填欄位為學生記錄編號（RefStudentID）、學年度（SchoolYear）、學期（Semester）、缺曠日期（OccurDate）。
            </remarks>
        </member>
        <member name="M:JHSchool.Data.JHMerit.Insert(System.Collections.Generic.IEnumerable{JHSchool.Data.JHMeritRecord})">
            <summary>
            新增多筆學生獎勵記錄
            </summary>
            <param name="MeritRecords">多筆學生獎勵記錄物件</param> 
            <returns>List&lt;string&gt;，傳回新增物件的系統編號列表。</returns>
            <seealso cref="T:JHSchool.Data.JHMeritRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    SHMeritRecord record = new SHMeritRecord();
                    newrecord.RefStudentID = RefStudentID;
                    newrecord.SchoolYear = SchoolYear;
                    newrecord.Semester = Semester;
                    newrecord.OccurDate = DateTime.Today;
                    
                    List&lt;SHMeritRecord&gt; records = new List&lt;SHMeritRecord&gt;();
                    records.Add(record);
                    List&lt;string&gt; NewID = SHMerit.Insert(records)
                </code>
            </example>
        </member>
        <member name="M:JHSchool.Data.JHMerit.Update(JHSchool.Data.JHMeritRecord)">
            <summary>
            更新單筆學生獎勵記錄
            </summary>
            <param name="MeritRecord">學生獎勵記錄物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHMeritRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                JHMeritRecord record = JHMerit.SelectByStudentIDs(StudentIDs)[0];
                record.OccurDate = DateTime.Today;
                int UpdateCount = JHMerit.Update(record);
                </code>
            </example>
            <remarks>傳回值為成功更新的筆數。</remarks>
        </member>
        <member name="M:JHSchool.Data.JHMerit.Update(System.Collections.Generic.IEnumerable{JHSchool.Data.JHMeritRecord})">
            <summary>
            更新多筆學生獎勵記錄
            </summary>
            <param name="MeritRecords">多筆學生獎勵記錄物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHMeritRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                JHMeritRecord record = JHMerit.SelectByStudentIDs(StudentIDs)[0];
                record.OccurDate = DateTime.Today;
                List&lt;JHMeritRecord&gt; records = new List&lt;JHMeritRecord&gt;();
                records.Add(record);
                int UpdateCount = JHMerit.Update(records);
                </code>
            </example>
            <remarks>傳回值為成功更新的筆數。</remarks>
        </member>
        <member name="M:JHSchool.Data.JHMerit.Delete(JHSchool.Data.JHMeritRecord)">
            <summary>
            刪除單筆學生獎勵記錄
            </summary>
            <param name="MeritRecord">學生獎勵記錄物件</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHMeritRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                  List&lt;JHMeritRecord&gt; records = JHMerit.SelectByStudentIDs(StudentIDs);
                  int DeleteCount = Merit.Delete(records[0]);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>
        </member>
        <member name="M:JHSchool.Data.JHMerit.Delete(System.String)">
            <summary>
            刪除單筆學生獎勵記錄
            </summary>
            <param name="MeritID">學生獎勵記錄編號</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                  int DeleteCount = JHMerit.Delete(MeritID);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>
        </member>
        <member name="M:JHSchool.Data.JHMerit.Delete(System.Collections.Generic.IEnumerable{JHSchool.Data.JHMeritRecord})">
            <summary>
            刪除多筆學生獎勵記錄
            </summary>
            <param name="MeritRecords">多筆學生獎勵記錄物件</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHMeritRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                  List&lt;JHMeritRecord&gt; records = JHMerit.SelectByStudentIDs(StudentIDs);
                  int DeleteCount = JHMerit.Delete(records);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>
        </member>
        <member name="M:JHSchool.Data.JHMerit.Delete(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            刪除多筆學生獎勵記錄
            </summary>
            <param name="MeritIDs">多筆學生獎勵記錄編號</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                  int DeleteCount = JHMerit.Delete(MeritIDs);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>        
        </member>
        <member name="T:JHSchool.Data.JHStudentTag">
            <summary>
            學生標籤類別，提供方法用來取得、新增、修改及刪除學生標籤資訊
            </summary>
        </member>
        <member name="M:JHSchool.Data.JHStudentTag.SelectAll">
            <summary>
            取得所有學生標籤列表。
            </summary>
            <returns>List&lt;JHStudentTagRecord&gt;，代表多筆學生標籤物件。</returns>
            <seealso cref="T:JHSchool.Data.JHStudentTagRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    List&lt;JHStudentTagRecord&gt; records = JHStudentTag.SelectAll();
                    
                    foreach(JHStudentTagRecord record in records)
                        System.Console.WriteLine(record.Name);
                </code>
            </example>
        </member>
        <member name="M:JHSchool.Data.JHStudentTag.SelectByStudentID(System.String)">
            <summary>
            根據單筆學生編號取得學生標籤列表。
            </summary>
            <param name="StudentID">學生編號</param>
            <returns>List&lt;JHStudentTagRecord&gt;，代表多筆學生標籤物件。</returns>
            <seealso cref="T:JHSchool.Data.JHStudentTagRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    List&lt;JHStudentTagRecord&gt; records = JHStudentTag.SelectByStudentID(StudentID);
                    
                    foreach(JHStudentTagRecord record in records)
                      System.Console.WriteLine(record.Name);
                </code>
            </example>
        </member>
        <member name="M:JHSchool.Data.JHStudentTag.SelectByStudentIDs(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            根據多筆學生編號取得學生標籤列表。
            </summary>
            <param name="StudentIDs">多筆學生編號</param>
            <returns>List&lt;JHStudentTagRecord&gt;，代表多筆學生標籤物件。</returns>
            <seealso cref="T:JHSchool.Data.JHStudentTagRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;JHStudentTagRecord&gt; records = JHStudentTag.SelectByStudentIDs(StudentIDs);
                
                forech(JHStudentTagRecord record in records)
                    System.Console.WriteLine(record.Name);
                </code>
            </example>
        </member>
        <member name="M:JHSchool.Data.JHStudentTag.Insert(JHSchool.Data.JHStudentTagRecord)">
            <summary>
            新增單學生標籤記錄
            </summary>
            <param name="StudentTagRecord">學生標籤記錄物件</param>
            <returns>string，傳回新增物件的系統編號。</returns>
            <seealso cref="T:JHSchool.Data.JHStudentTagRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                JHStudentTagRecord  record = new JHStudentTagRecord(StudentID, TagConfigID); 
                string NewID = JHStudentTag.Insert(record);  
                </code>
            </example>
            <remarks>
            1.新增傳入的參數為學生編號以及標籤編號。
            2.回傳值為新增物件的系統編號。
            </remarks> 
        </member>
        <member name="M:JHSchool.Data.JHStudentTag.Insert(System.Collections.Generic.IEnumerable{JHSchool.Data.JHStudentTagRecord})">
            <summary>
            新增多筆學生標籤記錄
            </summary>
            <param name="StudentTagRecords">多筆學生標籤記錄物件</param> 
            <returns>List&lt;string&gt;，傳回新增物件的系統編號列表。</returns>
            <seealso cref="T:JHSchool.Data.JHStudentTagRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                JHStudentTagRecord record = new JHStudentTagRecord(StudentID, TagConfigID); 
                List&lt;JHStudentTagRecord&gt; records = new List&lt;JHStudentTagRecord&gt;();
                records.Add(record);
                List&lt;string&gt; NewIDs = JHStudentTag.Insert(records);  
                </code>
            </example>
            <remarks>
            1.新增傳入的參數為學生編號以及標籤編號。
            2.回傳值為新增物件的系統編號。
            </remarks>
        </member>
        <member name="M:JHSchool.Data.JHStudentTag.Update(JHSchool.Data.JHStudentTagRecord)">
            <summary>
            更新單筆學生標籤記錄
            </summary>
            <param name="StudentTagRecord">學生標籤記錄物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHStudentTagRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    List&lt;JHStudentTagRecord&gt; records = JHStudentTag.SelectByStudentID(StudentID);        
                    records[0].RefEntityID = StudentID;
                    records[0].RefTagID = TagConfigID;
                    int UpdateCount = JHStudentTag.Update(record[0]);
                </code>
            </example>
            <remarks>
            1.更新的欄位值只有StudentID及TagConfigID，其它為唯讀欄位。
            2.傳回值為成功更新的筆數。
            </remarks>
        </member>
        <member name="M:JHSchool.Data.JHStudentTag.Update(System.Collections.Generic.IEnumerable{JHSchool.Data.JHStudentTagRecord})">
            <summary>
            更新多筆學生標籤記錄
            </summary>
            <param name="StudentTagRecords">多筆學生標籤記錄物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHStudentTagRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    List&lt;JHStudentTagRecord&gt; records = JHStudentTag.SelectByStudentID(StudentID);        
                    records[0].RefEntityID = StudentID;
                    records[0].RefTagID = TagConfigID;
                    int UpdateCount = JHStudentTag.Update(records);
                </code>
            </example>
        </member>
        <member name="M:JHSchool.Data.JHStudentTag.Delete(System.Collections.Generic.IEnumerable{JHSchool.Data.JHStudentTagRecord})">
            <summary>
            刪除多筆學生標籤記錄
            </summary>
            <param name="StudentTagRecords">多筆標籤記錄物件</param>
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHStudentTagRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    List&lt;JHStudentTagRecord&gt; records = JHStudentTag.SelectByStudentID(StudentID);
                    int DeleteCount = StudentTag.Delete(records);
                </code>
            </example>
            <remarks>
            傳回值為成功刪除的筆數。
            </remarks>        
        </member>
        <member name="M:JHSchool.Data.JHStudentTag.Delete(JHSchool.Data.JHStudentTagRecord)">
            <summary>
            刪除單筆學生記錄
            </summary>
            <param name="StudentTagRecord">學生記錄物件</param>
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHStudentRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    List&lt;JHStudentTagRecord&gt; records = JHStudentTag.SelectByStudentID(StudentID);
                    int DeleteCount = JHStudentTag.Delete(records[0]);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>
        </member>
        <member name="T:JHSchool.Data.JHCourseTagRecord">
            <summary>
            課程標籤資訊
            </summary>
        </member>
        <member name="P:JHSchool.Data.JHCourseTagRecord.Course">
            <summary>
            取得所屬課程
            </summary>
        </member>
        <member name="T:JHSchool.Data.JHScoreCalcRuleRecord">
            <summary>
            成績計算規則資訊
            </summary>
        </member>
        <member name="T:JHSchool.Data.JHSCAttendRecord">
            <summary>
            學生修課資訊
            </summary>
        </member>
        <member name="P:JHSchool.Data.JHSCAttendRecord.Effort">
            <summary>
            修課努力程度
            </summary>
        </member>
        <member name="P:JHSchool.Data.JHSCAttendRecord.Text">
            <summary>
            修課文字描述
            </summary>
        </member>
        <member name="P:JHSchool.Data.JHSCAttendRecord.OrdinarilyEffort">
            <summary>
            平時評量努力程度
            </summary>
        </member>
        <member name="P:JHSchool.Data.JHSCAttendRecord.OrdinarilyScore">
            <summary>
            平時評量分數
            </summary>
        </member>
        <member name="P:JHSchool.Data.JHSCAttendRecord.Student">
            <summary>
            所屬學生
            </summary>
        </member>
        <member name="P:JHSchool.Data.JHSCAttendRecord.Course">
            <summary>
            所屬課程
            </summary>
        </member>
        <member name="T:JHSchool.Data.JHDemerit">
            <summary>
            學生懲戒類別，提供方法用來取得、新增、修改及刪除學生懲戒資訊
            </summary>
        </member>
        <member name="M:JHSchool.Data.JHDemerit.SelectAll">
            <summary>
            取得所有學生懲戒記錄物件列表。
            </summary>
            <returns>List&lt;JHDemeritRecord&gt;，代表多筆學生懲戒記錄物件。</returns>
            <seealso cref="T:JHSchool.Data.JHDemeritRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;JHDemeritRecord&gt; records = JHDemerit.SelectAll();
                
                foreach(JHDemeritRecord record in records)
                    System.Console.WriteLine(record.RefStudentID);
                </code>
            </example>
        </member>
        <member name="M:JHSchool.Data.JHDemerit.Select(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            根據條件取得懲戒紀錄列表
            </summary>
            <param name="StudentIDs">學生編號列表</param>
            <param name="StartDate">開始時間</param>
            <param name="EndDate">結束時間</param>
            <param name="StartRegisterDate">開始登錄時間</param>
            <param name="EndRegisterDate">結束登錄時間</param>
            <param name="SchoolYears">學年度</param>
            <param name="Semesters">學期</param>
            <returns>List&lt;JHDemeritRecord&gt;，懲戒紀錄物件列表</returns>
        </member>
        <member name="M:JHSchool.Data.JHDemerit.Select(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{K12.Data.SchoolYearSemester})">
            <summary>
            根據條件取得懲戒紀錄列表
            </summary>
            <param name="StudentIDs">學生編號列表</param>
            <param name="StartDate">發生開始時間</param>
            <param name="EndDate">發生結束時間</param>
            <param name="StartRegisterDate">開始登錄時間</param>
            <param name="EndRegisterDate">結束登錄時間</param>
            <param name="SchoolYears">學年度列表</param>
            <param name="Semesters">學期列表</param>
            <param name="SchoolYearSemesters">學年度學期列表</param>
            <returns>List&lt;JHDemeritRecord&gt;，懲戒紀錄物件列表</returns>
        </member>
        <member name="M:JHSchool.Data.JHDemerit.Select(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{K12.Data.SchoolYearSemester})">
            <summary>
            根據條件取得懲戒紀錄列表
            </summary>
            <typeparam name="T">懲戒紀錄型別，繼承至K12.Data.DemeritRecord</typeparam>
            <param name="StudentIDs">學生編號列表</param>
            <param name="StartDate">發生開始時間</param>
            <param name="EndDate">發生結束時間</param>
            <param name="StartRegisterDate">開始登錄時間</param>
            <param name="EndRegisterDate">結束登錄時間</param>
            <param name="StartClearDate">開始已銷過時間</param>
            <param name="EndClearDate">結束已銷過時間</param>
            <param name="SchoolYears">學年度列表</param>
            <param name="Semesters">學期列表</param>
            <param name="SchoolYearSemesters">學年度學期列表</param>
            <returns>List&lt;JHDemeritRecord&gt;，懲戒紀錄列表</returns>
        </member>
        <member name="M:JHSchool.Data.JHDemerit.SelectBySchoolYearAndSemester(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            根據單筆學生編號、學年度及學期取得學生懲戒記錄物件列表。
            </summary>
            <param name="StudentID">單筆學生編號</param>
            <param name="SchoolYear">學年度，傳入null代表取得所有學年度的資料</param>
            <param name="Semester">學期，傳入null代表取得所有學年度的資料</param>
            <returns>List&lt;JHDemeritRecord&gt;，代表多筆學生懲戒記錄物件。</returns>
            <seealso cref="T:JHSchool.Data.JHDemeritRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;JHDemeritRecord&gt; records = JHDemerit.SelectBySchoolYearAndSemester(StudentID,School,Semester);
                
                foreach(JHDemeritRecord record in records)
                    System.Console.WriteLine(record.RefStudentID);
                </code>
            </example>
        </member>
        <member name="M:JHSchool.Data.JHDemerit.SelectBySchoolYearAndSemester(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            根據多筆學生編號、學年度及學期取得學生懲戒記錄物件列表。
            </summary>
            <param name="StudentIDs">多筆學生編號</param>
            <param name="SchoolYear">學年度，傳入null代表取得所有學年度的資料</param>
            <param name="Semester">學期，傳入null代表取得所有學年度的資料</param>
            <returns>List&lt;DemeritRecord&gt;，代表多筆學生懲戒記錄物件。</returns>
            <seealso cref="T:JHSchool.Data.JHDemeritRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;JHDemeritRecord&gt; records = JHDemerit.SelectBySchoolYearAndSemester(StudentIDs,School,Semester);
                
                foreach(JHDemeritRecord record in records)
                    System.Console.WriteLine(record.RefStudentID);
                </code>
            </example>
        </member>
        <member name="M:JHSchool.Data.JHDemerit.SelectByStudentIDs(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            根據多筆學生編號取得學生懲戒記錄物件列表。
            </summary>
            <param name="StudentIDs">多筆學生編號</param>
            <returns>List&lt;JHDemeritRecord&gt;，代表多筆學生懲戒記錄物件。</returns>
            <seealso cref="T:JHSchool.Data.JHDemeritRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;JHDemeritRecord&gt; records = JHDemerit.SelectByStudentIDs(StudentIDs);
                
                foreach(JHDemeritRecord record in records)
                    System.Console.WriteLine(record.RefStudentID);
                </code>
            </example>
        </member>
        <member name="M:JHSchool.Data.JHDemerit.SelectByRegisterDate(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            根據多筆學生編號及登錄日期取得學生懲戒記錄物件列表。
            </summary>
            <param name="StudentIDs">多筆學生編號</param>
            <param name="StartRegisterDate">登錄開始日期</param>
            <param name="EndRegisterDate">登錄結束日期</param>
            <returns>List&lt;JHDemeritRecord&gt;，代表多筆學生懲戒記錄物件。</returns>
            <seealso cref="T:JHSchool.Data.JHDemeritRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;JHDemeritRecord&gt; records = JHDemerit.SelectByRegisterDate(StudentIDs,StartRegisterDate,EndRegisterDate);
                
                foreach(JHDemeritRecord record in records)
                    System.Console.WriteLine(record.RefStudentID);
                </code>
            </example>
            <remarks>
            1.若是StartRegisterDate傳入null，則會傳回EndRegisterDate之前的資料。
            2.若是EndRegisterDate傳入null，則會傳回StartRegisterDate之後的資料。
            </remarks>
        </member>
        <member name="M:JHSchool.Data.JHDemerit.SelectByOccurDate(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            根據多筆學生編號及發生日期取得學生懲戒記錄物件列表。
            </summary>
            <param name="StudentIDs">多筆學生編號</param>
            <param name="StartOccurDate">發生開始日期</param>
            <param name="EndOccurDate">發生結束日期</param>
            <returns>List&lt;JHDemeritRecord&gt;，代表多筆學生懲戒記錄物件。</returns>
            <seealso cref="T:JHSchool.Data.JHDemeritRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;JHDemeritRecord&gt; records = JHDemerit.SelectByOccurDate(StudentIDs,StartOccurDate,EndOccurDate);
                
                foreach(JHDemeritRecord record in records)
                    System.Console.WriteLine(record.RefStudentID);
                </code>
            </example>
            <remarks>
            1.若是StartOccurDate傳入null，則會傳回EndOccurDate之前的資料。
            2.若是EndOccurDate傳入null，則會傳回StartOccurDate之後的資料。
            </remarks>
        </member>
        <member name="M:JHSchool.Data.JHDemerit.Insert(JHSchool.Data.JHDemeritRecord)">
            <summary>
            新增單筆學生懲戒記錄
            </summary>
            <param name="DemeritRecord">學生懲戒記錄物件</param>
            <returns>string，傳回新增物件的系統編號。</returns>
            <seealso cref="T:JHSchool.Data.JHDemeritRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    JHDemeritRecord newrecord = new JHDemeritRecord();
                    newrecord.RefStudentID = RefStudentID;
                    newrecord.SchoolYear = SchoolYear;
                    newrecord.Semester = Semester;
                    newrecord.OccurDate = DateTime.Today;
                    strng NewID = JHDemerit.Insert(newrecord)
                    JHDemeritRecord record = JHDemerit.SelectByID(NewID);
                    System.Console.Writeln(record.RefStudentID);
                </code>
            </example>
            <remarks>
            1.新增一律傳回新增物件的編號。
            2.新增必填欄位為學生記錄編號（RefStudentID）、學年度（SchoolYear）、學期（Semester）、缺曠日期（OccurDate）。
            </remarks>       
        </member>
        <member name="M:JHSchool.Data.JHDemerit.Insert(System.Collections.Generic.IEnumerable{JHSchool.Data.JHDemeritRecord})">
            <summary>
            新增多筆學生懲戒記錄
            </summary>
            <param name="DemeritRecords">多筆學生懲戒記錄物件</param> 
            <returns>List&lt;string&gt;，傳回新增物件的系統編號列表。</returns>
            <seealso cref="T:JHSchool.Data.JHDemeritRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    JHDemeritRecord record = new JHDemeritRecord();
                    newrecord.RefStudentID = RefStudentID;
                    newrecord.SchoolYear = SchoolYear;
                    newrecord.Semester = Semester;
                    newrecord.OccurDate = DateTime.Today;
                    
                    List&lt;JHDemeritRecord&gt; records = new List&lt;JHDemeritRecord&gt;();
                    records.Add(record);
                    List&lt;string&gt; NewID = JHDemerit.Insert(records)
                </code>
            </example>
        </member>
        <member name="M:JHSchool.Data.JHDemerit.Update(JHSchool.Data.JHDemeritRecord)">
            <summary>
            更新單筆學生懲戒記錄
            </summary>
            <param name="DemeritRecord">學生懲戒記錄物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHDemeritRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                JHDemeritRecord record = JHDemerit.SelectByStudentIDs(StudentIDs)[0];
                record.OccurDate = DateTime.Today;
                int UpdateCount = JHDemerit.Update(record);
                </code>
            </example>
            <remarks>傳回值為成功更新的筆數。</remarks>
        </member>
        <member name="M:JHSchool.Data.JHDemerit.Update(System.Collections.Generic.IEnumerable{JHSchool.Data.JHDemeritRecord})">
            <summary>
            更新多筆學生懲戒記錄
            </summary>
            <param name="DemeritRecords">多筆學生懲戒記錄物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHDemeritRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                JHDemeritRecord record = JHDemerit.SelectByStudentIDs(StudentIDs)[0];
                record.OccurDate = DateTime.Today;
                List&lt;JHDemeritRecord&gt; records = new List&lt;JHDemeritRecord&gt;();
                records.Add(record);
                int UpdateCount = JHDemerit.Update(records);
                </code>
            </example>
            <remarks>傳回值為成功更新的筆數。</remarks>
        </member>
        <member name="M:JHSchool.Data.JHDemerit.Delete(JHSchool.Data.JHDemeritRecord)">
            <summary>
            刪除單筆學生懲戒記錄
            </summary>
            <param name="DemeritRecord">學生懲戒記錄物件</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHDemeritRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                  List&lt;JHDemeritRecord&gt; records = JHDemerit.SelectByStudentIDs(StudentIDs);
                  int DeleteCount = JHDemerit.Delete(records[0]);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>
        </member>
        <member name="M:JHSchool.Data.JHDemerit.Delete(System.String)">
            <summary>
            刪除單筆學生懲戒記錄
            </summary>
            <param name="DemeritID">學生懲戒記錄編號</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                  int DeleteCount = JHDemerit.Delete(DemeritID);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>
        </member>
        <member name="M:JHSchool.Data.JHDemerit.Delete(System.Collections.Generic.IEnumerable{JHSchool.Data.JHDemeritRecord})">
            <summary>
            刪除多筆學生懲戒記錄
            </summary>
            <param name="DermitRecords">多筆學生懲戒記錄物件</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHDemeritRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                  List&lt;JHDemeritRecord&gt; records = JHDemerit.SelectByStudentIDs(StudentIDs);
                  int DeleteCount = Demerit.Delete(records);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>
        </member>
        <member name="M:JHSchool.Data.JHDemerit.Delete(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            刪除多筆學生懲戒記錄
            </summary>
            <param name="DemeritIDs">多筆學生懲戒記錄編號</param>
            <returns>int，傳回刪除更新的筆數。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                  int DeleteCount = JHDemerit.Delete(DemeritIDs);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>
        </member>
        <member name="T:JHSchool.Data.JHParent">
            <summary>
            學生家長及監護人類別，提供方法用來取得及修改學生家長及監護人資訊
            </summary>
        </member>
        <member name="M:JHSchool.Data.JHParent.SelectAll">
            <summary>
            取得所有學生家長及監護人記錄物件列表。
            </summary>
            <returns>List&lt;JHParentRecord&gt;，代表多筆學生家長及監護人記錄物件。</returns>
            <seealso cref="T:JHSchool.Data.JHParentRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;JHParentRecord&gt; records = JHParent.SelectAll();
                
                foreach(JHParentRecord record in records)
                    Console.WrlteLine(record.Mother.Name);
                </code>
            </example>
        </member>
        <member name="M:JHSchool.Data.JHParent.SelectByStudent(JHSchool.Data.JHStudentRecord)">
            <summary>
            根據單筆學生記錄物件取得學生家長及監護人記錄物件。
            </summary>
            <param name="Student">學生記錄物件</param>
            <returns>JHParentRecord，代表學生家長及監人記錄物件。</returns>
            <seealso cref="T:JHSchool.Data.JHStudentRecord"/>
            <seealso cref="T:JHSchool.Data.JHParentRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                JHPaerntRecord record = JHParent.SelectByStudent(Student);
                
               if (record != null)
                   System.Console.WriteLine(record.Mother.Name);
                </code>
            </example>
            <remarks>若是Student不則在則會傳回null</remarks>
        </member>
        <member name="M:JHSchool.Data.JHParent.SelectByStudentID(System.String)">
            <summary>
            根據單筆學生記錄編號取得學生家長及監護人記錄物件。
            </summary>
            <param name="StudentID">學生記錄編號</param>
            <returns>JHParentRecord，代表學生家長及監護人記錄物件。</returns>
            <seealso cref="T:JHSchool.Data.JHParentRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                JHParentRecord record = JHParent.SelectByStudent(StudentID);
                
                if (record != null)
                   System.Console.WriteLine(record.Mother.Name);
                </code>
            </example>
            <remarks>若是StudentID不則在則會傳回null</remarks>
        </member>
        <member name="M:JHSchool.Data.JHParent.SelectByStudents(System.Collections.Generic.List{JHSchool.Data.JHStudentRecord})">
            <summary>
            根據多筆學生記錄物件取得學生家長及監護人記錄物件列表。
            </summary>
            <param name="Students">多筆學生記錄物件</param>
            <returns>List&lt;JHParentRecord&gt;，代表多筆學生家長及監護人記錄物件。</returns>
            <seealso cref="T:JHSchool.Data.JHParentRecord"/>
            <seealso cref="T:JHSchool.Data.JHStudentRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;JHParentRecord&gt; records = JHParent.SelectByStudents(Students);
                
                foreach(JHParentRecord record in records)
                    Console.WrlteLine(record.Mother.Name);
                </code>
            </example>
            <remarks>可能情況若是傳5筆學生，但是其中1筆沒有資料，就只會回傳4筆資料</remarks>
        </member>
        <member name="M:JHSchool.Data.JHParent.SelectByStudentIDs(System.Collections.Generic.List{System.String})">
            <summary>
            根據多筆學生記錄編號取得學生家長及監護人記錄物件列表。
            </summary>
            <param name="StudentIDs">多筆學生記錄編號</param>
            <returns>List&lt;JHParentRecord&gt;，代表多筆學生家長及監護人記錄物件。</returns>
            <seealso cref="T:JHSchool.Data.JHParentRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;JHParentRecord&gt; records = JHParent.SelectByStudentIDs(StudentIDs);
                
                foreach(JHParentRecord record in records)
                    Console.WrlteLine(record.Mother.Name);
                </code>
            </example>
            <remarks>可能情況若是傳5筆學生，但是其中1筆沒有資料，就只會回傳4筆資料</remarks>
        </member>
        <member name="M:JHSchool.Data.JHParent.Update(JHSchool.Data.JHParentRecord)">
            <summary>
            更新單筆家長及監護人記錄
            </summary>
            <param name="ParentRecord">家長及監護人記錄物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHParentRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                JHParentRecord record = JHParent.SelectByStudentID(StudentID);
                record.Mother.Name = (new System.Random()).NextDouble().ToString();
                int UpdateCount = JHParent.Update(record);
                </code>
            </example>
            <remarks>傳回值為成功更新的筆數。</remarks>
        </member>
        <member name="M:JHSchool.Data.JHParent.Update(System.Collections.Generic.IEnumerable{JHSchool.Data.JHParentRecord})">
            <summary>
            更新多筆家長及監護人記錄
            </summary>
            <param name="ParentRecords">多筆家長及監護人記錄物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHParentRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                JHParentRecord record = JHParent.SelectByStudentID(StudentID);
                record.Mother.Name = (new System.Random()).NextDouble().ToString();
                List&lt;JHParentRecord&gt; records = new List&lt;JHParentRecord&gt;();
                records.Add(record);
                int UpdateCount = JHParent.Update(records);
                </code>
            </example>
            <remarks>傳回值為成功更新的筆數。</remarks>
        </member>
        <member name="T:JHSchool.Data.JHTeacherTagRecord">
            <summary>
            教師標籤資訊
            </summary>
        </member>
        <member name="P:JHSchool.Data.JHTeacherTagRecord.Teacher">
            <summary>
            取得所屬教師
            </summary>
        </member>
        <member name="T:JHSchool.Data.JHStudentTagRecord">
            <summary>
            學生標籤資訊
            </summary>
        </member>
        <member name="P:JHSchool.Data.JHStudentTagRecord.Student">
            <summary>
            取得所屬學生
            </summary>
        </member>
        <member name="T:JHSchool.Data.JHScoreCalcRule">
            <summary>
            成績計算規則類別，適用於學生及班級，提供方法用來取得、新增、修改及刪除成績計算規則資訊
            </summary>
        </member>
        <member name="M:JHSchool.Data.JHScoreCalcRule.SelectAll">
            <summary>
            取得所有成績計算規則列表。
            </summary>
            <returns>List&lt;JHScoreCalcRuleRecord&gt;，代表多筆成績計算規則記錄物件。</returns>
            <seealso cref="T:JHSchool.Data.JHScoreCalcRuleRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;JHScoreCalcRuleRecord&gt; records = JHScoreCalcRule.SelectAll();
                </code>
            </example>
        </member>
        <member name="M:JHSchool.Data.JHScoreCalcRule.SelectByStudentIDs(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            依學生系統編號列表取得成績計算規則
            </summary>
            <param name="StudentIDs">學生系統編號列表</param>
            <returns></returns>
        </member>
        <member name="M:JHSchool.Data.JHScoreCalcRule.SelectByID(System.String)">
            <summary>
            根據單筆成績計算規則編號取得成績計算規則物件。
            </summary>
            <param name="ScoreCalcRuleID">成績計算規則編號</param>
            <returns>JHScoreCalcRuleRecord，成績計算規則物件</returns>
            <seealso cref="T:JHSchool.Data.JHScoreCalcRuleRecord"/>
        </member>
        <member name="M:JHSchool.Data.JHScoreCalcRule.SelectByIDs(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            根據多筆成績計算規則編號取得成績計算規則列表。
            </summary>
            <param name="ScoreCalcRuleIDs">多筆成績計算規則編號</param>
            <returns>List&lt;JHScoreCalcRuleRecord&gt;，代表多筆成績計算規則記錄物件。</returns>
            <seealso cref="T:JHSchool.Data.JHScoreCalcRuleRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                List&lt;JHScoreCalcRuleRecord&gt; records = JHScoreCalcRule.SelectByIDs(ScoreCalcRuleIDs);
            </example>
        </member>
        <!-- 忽略成員 "M:JHSchool.Data.JHScoreCalcRule.Insert(JHSchool.Data.JHScoreCalcRuleRecord)" 中格式錯誤的 XML 註解 -->
        <!-- 忽略成員 "M:JHSchool.Data.JHScoreCalcRule.Insert(System.Collections.Generic.IEnumerable{JHSchool.Data.JHScoreCalcRuleRecord})" 中格式錯誤的 XML 註解 -->
        <member name="M:JHSchool.Data.JHScoreCalcRule.Update(JHSchool.Data.JHScoreCalcRuleRecord)">
            <summary>
            更新單筆成績計算規則記錄
            </summary>
            <param name="ScoreCalcRuleRecord">成績計算規則記錄物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHScoreCalcRuleRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:JHSchool.Data.JHScoreCalcRule.Update(System.Collections.Generic.IEnumerable{JHSchool.Data.JHScoreCalcRuleRecord})">
            <summary>
            更新多筆成績計算規則記錄
            </summary>
            <param name="ScoreCalcRuleRecords">多筆成績計算規則記錄</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHScoreCalcRuleRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:JHSchool.Data.JHScoreCalcRule.Delete(JHSchool.Data.JHScoreCalcRuleRecord)">
            <summary>
            刪除單筆成績計算規則記錄
            </summary>
            <param name="ScoreCalcRuleRecord">成績計算規則記錄物件</param> 
            <returns>int，傳回成功刪除的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHScoreCalcRuleRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:JHSchool.Data.JHScoreCalcRule.Delete(System.String)">
            <summary>
            刪除單筆成績計算規則記錄
            </summary>
            <param name="ScoreCalcRuleID">成績計算規則編號</param> 
            <returns>int，傳回成功刪除的筆數。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:JHSchool.Data.JHScoreCalcRule.Delete(System.Collections.Generic.IEnumerable{JHSchool.Data.JHScoreCalcRuleRecord})">
            <summary>
            刪除多筆成績計算規則記錄
            </summary>
            <param name="ScoreCalcRuleRecords">多筆成績計算規則記錄物件</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHScoreCalcRuleRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="M:JHSchool.Data.JHScoreCalcRule.Delete(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            刪除多筆成績計算規則記錄
            </summary>
            <param name="ScoreCalcRuleIDs">多筆成績計算規則編號</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                
            </example>
        </member>
        <member name="T:JHSchool.Data.JHUpdateRecordBatch">
            <summary>
            異動名冊記錄類別，提供方法用來取得、新增、修改及刪除異動名冊記錄物件
            </summary>
        </member>
        <member name="M:JHSchool.Data.JHUpdateRecordBatch.SelectAll">
            <summary>
            取得所有異動名冊記錄列表。
            </summary>
            <returns>List&lt;JHUpdateRecordBatchRecord&gt;，代表多筆異動名冊記錄物件。</returns>
            <seealso cref="T:JHSchool.Data.JHUpdateReocrdBatchRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;JHUpdateRecordBatchRecord&gt; records = JHUpdateRecordBatch.SelectAll();
                
                foreach(JHUpdateRecordBatchRecord record in records)
                    Console.WrlteLine(record.Name);
                </code>
            </example>
        </member>
        <member name="M:JHSchool.Data.JHUpdateRecordBatch.SelectByID(System.String)">
            <summary>
            根據異動名冊記錄編號取得異動名冊記錄物件。
            </summary>
            <param name="UpdateRecordBatchID">異動名冊記錄編號</param>
            <returns>UpdateRecordBatchRecord，代表單筆異動名冊記錄編號。</returns>
            <seealso cref="T:JHSchool.Data.JHUpdateReocrdBatchRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                JHUpdateRecordBatchRecord record = JHUpdateRecordBatch.SelectByID("15");
                
                Console.WrlteLine(record.Name);
                </code>
            </example>
            <remarks>若是UpdateRecordBatchID不存在則會傳回null。</remarks>
        </member>
        <member name="M:JHSchool.Data.JHUpdateRecordBatch.SelectByIDs(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            根據異動名冊記錄編號取得異動名冊記錄物件列表。
            </summary>
            <param name="UpdateRecordBatchIDs">多筆異動名冊記錄編號。</param>
            <returns>List&lt;JHUpdateRecordBatchRecord&gt;，代表多筆異動名冊記錄物件。</returns>
            <example>
                <code>
                List&lt;JHUpdateRecordBatchRecord&gt; records = JHUpdateRecordBatch.SelectByIDs(UpdateRecordBatchIDs);
                
                foreach(JHUpdateRecordBatchRecord record in records)
                    Console.WrlteLine(record.Name);
                </code>
            </example>
        </member>
        <member name="M:JHSchool.Data.JHUpdateRecordBatch.SelectBySchoolYearAndSemester(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            根據學年度及學期取得異動名冊記錄物件列表。
            </summary>
            <param name="SchoolYear">學年度，若是傳入null則會傳回所有學年度資料。</param>
            <param name="Semester">學期，若是傳入null則會傳回所有學期資料。</param>
            <returns>List&lt;JHUpdateRecordBatchRecord&gt;，代表多筆異動名冊記錄物件。</returns>
            <example>
                <code>
                List&lt;JHUpdateRecordBatchRecord&gt; records = JHUpdateRecordBatch.SelectBySchoolYearAndSemester(UpdateRecordBatchIDs);
                
                foreach(JHUpdateRecordBatchRecord record in records)
                    Console.WrlteLine(record.Name);
                </code>
            </example>
            <remarks>若是學年度及學期參數皆傳入null，則會傳回所有資料。</remarks>
        </member>
        <member name="M:JHSchool.Data.JHUpdateRecordBatch.Insert(JHSchool.Data.JHUpdateReocrdBatchRecord)">
            <summary>
            新增單筆異動名冊記錄
            </summary>
            <param name="UpdateRecordBatchRecord">異動名冊記錄物件</param>
            <returns>string，傳回新增物件的系統編號。</returns>
            <seealso cref="T:JHSchool.Data.JHUpdateReocrdBatchRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    JHUpdateRecordBatchRecord newrecord = new JHUpdateRecordBatchRecord();
                    newrecord.Name ="test";
                    newrecord.SchoolYear = 95;
                    newrecord.Semester = 1;
                    strng NewID = JHUpdateRecordBatch.Insert(newrecord)
                    JHUpdateRecordBatchRecord record = JHUpdateRecordBatch.SelectByID(NewID);
                    System.Console.Writeln(record.Name);
                </code>
            </example>
            <remarks>
            1.新增一律傳回新增物件的編號。
            2.新增必填欄位為異動名冊名稱、學年度及學期。
            </remarks>
        </member>
        <member name="M:JHSchool.Data.JHUpdateRecordBatch.Insert(System.Collections.Generic.IEnumerable{JHSchool.Data.JHUpdateReocrdBatchRecord})">
            <summary>
            新增多筆異動名冊記錄
            </summary>
            <param name="UpdateRecordBatchRecords">多筆異動名冊記錄</param> 
            <returns>List&lt;string&gt;，傳回新增物件的系統編號列表。</returns>
            <seealso cref="T:JHSchool.Data.JHUpdateReocrdBatchRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    JHUpdateRecordBatchRecord record = new JHUpdateRecordBatchRecord();
                    
                    record.Name ="新生異動名冊";
                    record.SchoolYear = 96;
                    record.Semester = 1;
                    
                    List&lt;JHUpdateRecordBatchRecord&gt; records = new List&lt;JHUpdateRecordBatchRecord&gt;();
                    records.Add(record);
                    List&lt;string&gt; NewID = JHUpdateRecordBatch.Insert(records)
                </code>
            </example>
        </member>
        <member name="M:JHSchool.Data.JHUpdateRecordBatch.Update(JHSchool.Data.JHUpdateReocrdBatchRecord)">
            <summary>
            更新單筆異動名冊記錄
            </summary>
            <param name="UpdateRecordBatchRecord">異動名冊記錄物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHUpdateReocrdBatchRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                JHUpdateRecordBatchRecord record = JHUpdateRecordBatch.SelectByID(UpdateRecordBatchID);
                record.Name = "轉入異動名冊";
                int UpdateCount = JHUpdateRecordBatch.Update(record);
                </code>
            </example>
            <remarks>傳回值為成功更新的筆數。</remarks>
        </member>
        <member name="M:JHSchool.Data.JHUpdateRecordBatch.Update(System.Collections.Generic.IEnumerable{JHSchool.Data.JHUpdateReocrdBatchRecord})">
            <summary>
            更新多筆異動名冊記錄
            </summary>
            <param name="UpdateRecordBatchRecords">多筆異動名冊記錄物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHUpdateReocrdBatchRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                JHUpdateRecordBatchRecord record = JHUpdateRecordBatch.SelectByID(UpdateRecordBatchID);
                record.Name = "畢業異動名冊";
                List&lt;JHUpdateRecordBatchRecord&gt; records = new List&lt;JHUpdateRecordBatchRecord&gt;();
                records.Add(record);
                int UpdateCount = JHUpdateRecordBatch.Update(records);
                </code>
            </example>
            <remarks>傳回值為成功更新的筆數。</remarks>
        </member>
        <member name="M:JHSchool.Data.JHUpdateRecordBatch.Delete(System.Collections.Generic.IEnumerable{JHSchool.Data.JHUpdateReocrdBatchRecord})">
            <summary>
            刪除多筆異動名冊記錄
            </summary>
            <param name="UpdateRecordBatchRecords">多筆異動名冊記錄物件</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHUpdateReocrdBatchRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                  List&lt;JHUpdateRecordBatchRecord&gt; records = JHUpdateRecordBatch.SelectByIDs(UpdateRecordIDs);
                  int DeleteCount = JHUpdateRecordBatch.Delete(records);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>
        </member>
        <member name="M:JHSchool.Data.JHUpdateRecordBatch.Delete(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            刪除多筆異動名冊記錄
            </summary>
            <param name="UpdateRecordBatchIDs">多筆異動名冊記錄編號</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
               <code>
               int DeleteCount = JHUpdateRecordBatch.Delete(UpdateRecordBatchIDs);
               </code>
            </example>
        </member>
        <member name="M:JHSchool.Data.JHUpdateRecordBatch.Delete(JHSchool.Data.JHUpdateReocrdBatchRecord)">
            <summary>
            刪除單筆異動名冊記錄
            </summary>
            <param name="UpdateRecordBatchRecord">單筆異動名冊記錄物</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                  JHUpdateRecordBatchRecord&gt; record = JHUpdateRecordBatch.SelectByID(UpdateRecordBatchID);
                  int DeleteCount = JHUpdateRecordBatch.Delete(record);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>
        </member>
        <member name="M:JHSchool.Data.JHUpdateRecordBatch.Delete(System.String)">
            <summary>
            刪除單筆異動名冊記錄
            </summary>
            <param name="UpdateRecordBatchID">單筆異動名冊記錄編號</param>
            <returns>int，傳回成功刪除的筆數。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                  int DeleteCount = JHUpdateRecordBatch.Delete(UpdateRecordID);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>
        </member>
        <member name="T:JHSchool.Data.JHLeaveIfno">
            <summary>
            學生離校資訊類別，提供方法用來取得及修改學生地址資訊
            </summary>
        </member>
        <member name="M:JHSchool.Data.JHLeaveIfno.SelectAll">
            <summary>
            取得所有學生離校資訊物件列表。
            </summary>
            <returns>List&lt;JHLeaveInfoRecord&gt;，代表多筆學生離校資訊物件。</returns>
            <seealso cref="T:JHSchool.Data.JHLeaveInfoRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;JHLeaveInfoRecord&gt; records = JHLeaveInfo.SelectAll();
                
                foreach(JHLeaveInfoRecord record in records)
                    Console.WrlteLine(record.Reason);
                </code>
            </example>
        </member>
        <member name="M:JHSchool.Data.JHLeaveIfno.SelectByStudent(JHSchool.Data.JHStudentRecord)">
            <summary>
            根據單筆學生記錄物件取得學生離校資訊物件。
            </summary>
            <param name="Student">學生記錄物件</param>
            <returns>JHLeaveInfoRecord，代表學生離校資訊物件。</returns>
            <seealso cref="T:JHSchool.Data.JHStudentRecord"/>
            <seealso cref="T:JHSchool.Data.JHLeaveInfoRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                JHLeaveInfoRecord record = JHLeaveInfo.SelectByStudent(Student);
                
               if (record != null)
                   System.Console.WriteLine(record.Reason);
                </code>
            </example>
            <remarks>若是Student不則在則會傳回null</remarks>
        </member>
        <member name="M:JHSchool.Data.JHLeaveIfno.SelectByStudentID(System.String)">
            <summary>
            根據單筆學生記錄編號取得學生離校資訊物件。
            </summary>
            <param name="StudentID">學生記錄編號</param>
            <returns>JHLeaveInfoRecord，代表學生離校資訊物件。</returns>
            <seealso cref="T:JHSchool.Data.JHLeaveInfoRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                JHLeaveInfoRecord record = JHLeaveInfo.SelectByStudentID(StudentID);
                
                if (record != null)
                   System.Console.WriteLine(record.Reason);
                </code>
            </example>
            <remarks>若是StudentID不則在則會傳回null</remarks>
        </member>
        <member name="M:JHSchool.Data.JHLeaveIfno.SelectByStudents(System.Collections.Generic.IEnumerable{JHSchool.Data.JHStudentRecord})">
            <summary>
            根據多筆學生記錄物件取得學生離校資訊物件列表。
            </summary>
            <param name="Students">多筆學生記錄物件</param>
            <returns>List&lt;JHLeaveInfoRecord&gt;，代表多筆學生離校資訊物件。</returns>
            <seealso cref="T:JHSchool.Data.JHLeaveInfoRecord"/>
            <seealso cref="T:JHSchool.Data.JHStudentRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;JHLeaveInfoRecord&gt; records = JHLeaveInfo.SelectByStudents(Students);
                
                foreach(JHLeaveInfoRecord record in records)
                    Console.WrlteLine(record.Reason);
                </code>
            </example>
            <remarks>可能情況若是傳5筆學生，但是其中1筆沒有資料，就只會回傳4筆資料</remarks>
        </member>
        <member name="M:JHSchool.Data.JHLeaveIfno.SelectByStudentIDs(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            根據多筆學生記錄編號取得學生離校資訊物件列表。
            </summary>
            <param name="StudentIDs">多筆學生記錄編號</param>
            <returns>List&lt;JHLeaveInfoRecord&gt;，代表多筆學生離校資訊物件。</returns>
            <seealso cref="T:JHSchool.Data.JHLeaveInfoRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;JHLeaveInfoRecord&gt; records = JHLeaveInfo.SelectByStudentIDs(StudentIDs);
                
                foreach(JHLeaveInfoRecord record in records)
                    Console.WrlteLine(record.Reason);
                </code>
            </example>
            <remarks>可能情況若是傳5筆學生，但是其中1筆沒有資料，就只會回傳4筆資料</remarks>
        </member>
        <member name="M:JHSchool.Data.JHLeaveIfno.Update(JHSchool.Data.JHLeaveInfoRecord)">
            <summary>
            更新單筆學生離校資訊
            </summary>
            <param name="LeaveInfoRecord">學生離校資訊物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHLeaveInfoRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                JHLeaveInfoRecord record = JHLeaveInfo.SelectByStudentID(StudentID);
                record.Reason = (new System.Random()).NextDouble().ToString();
                int UpdateCount = JHLeaveInfo.Update(record);
                </code>
            </example>
            <remarks>傳回值為成功更新的筆數。</remarks>
        </member>
        <member name="M:JHSchool.Data.JHLeaveIfno.Update(System.Collections.Generic.IEnumerable{JHSchool.Data.JHLeaveInfoRecord})">
            <summary>
            更新多筆學生離校資訊
            </summary>
            <param name="LeaveInfoRecords">多筆學生離校資訊物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHLeaveInfoRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                JHLeaveInfoRecord record = JHLeaveInfo.SelectByStudentID(StudentID);
                record.Reason = (new System.Random()).NextDouble().ToString();
                List&lt;JHLeaveInfoRecord&gt; records = new List&lt;JHLeaveInfoRecord&gt;();
                records.Add(record);
                int UpdateCount = JHLeaveInfo.Update(records);
                </code>
            </example>
            <remarks>傳回值為成功更新的筆數。</remarks>
        </member>
        <member name="T:JHSchool.Data.JHStudentRecord">
            <summary>
            學生資訊
            </summary>
        </member>
        <member name="P:JHSchool.Data.JHStudentRecord.OverrideProgramPlan">
            <summary>
            覆蓋後的課程規劃
            </summary>
        </member>
        <member name="P:JHSchool.Data.JHStudentRecord.ProgramPlan">
            <summary>
            自動判斷所屬課程規劃，若是學生身上有課程規劃，則用學生的，否則取得班級的課程規劃
            </summary>
        </member>
        <member name="P:JHSchool.Data.JHStudentRecord.OverrideScoreCalcRule">
            <summary>
            覆蓋後的成績計算規則
            </summary>
        </member>
        <member name="P:JHSchool.Data.JHStudentRecord.ScoreCalcRule">
            <summary>
            自動判斷所屬成績計算規則，若是學生身上有成績計算規則，則用學生的，否則取得班級的課程規劃
            </summary>
        </member>
        <member name="P:JHSchool.Data.JHStudentRecord.Class">
            <summary>
            所屬班級
            </summary>
        </member>
        <member name="T:JHSchool.Data.JHTCInstructRecord">
            <summary>
            教師教授課程資訊
            </summary>
        </member>
        <member name="P:JHSchool.Data.JHTCInstructRecord.Teacher">
            <summary>
            所屬學生
            </summary>
        </member>
        <member name="P:JHSchool.Data.JHTCInstructRecord.Course">
            <summary>
            所屬課程
            </summary>
        </member>
        <member name="T:JHSchool.Data.JHMoralScoreRecord">
            <summary>
            學期德行評量資訊
            </summary>
        </member>
        <member name="P:JHSchool.Data.JHMoralScoreRecord.Student">
            <summary>
            所屬學生物件
            </summary>
        </member>
        <member name="T:JHSchool.Data.JHAssessmentSetupRecord">
            <summary>
            評量設定資訊
            </summary>
        </member>
        <member name="M:JHSchool.Data.JHAssessmentSetupRecord.Load(System.Xml.XmlElement)">
            <summary>
            從XML參數載入設定值
            </summary>
            <param name="element"></param>
        </member>
        <member name="P:JHSchool.Data.JHAssessmentSetupRecord.OrdinarilyStartTime">
            <summary>
            平時評量開始時間
            </summary>
        </member>
        <member name="P:JHSchool.Data.JHAssessmentSetupRecord.OrdinarilyEndTime">
            <summary>
            平時評量結束時間
            </summary>
        </member>
        <member name="P:JHSchool.Data.JHAssessmentSetupRecord.TextStartTime">
            <summary>
            文用評量開始時間
            </summary>
        </member>
        <member name="P:JHSchool.Data.JHAssessmentSetupRecord.TextEndTime">
            <summary>
            文字評量結束時間
            </summary>
        </member>
        <member name="T:JHSchool.Data.JHMeritRecord">
            <summary>
            學生獎勵資訊
            </summary>
        </member>
        <member name="P:JHSchool.Data.JHMeritRecord.Student">
            <summary>
            所屬學生
            </summary>
        </member>
        <member name="T:JHSchool.Data.JHAttendance">
            <summary>
            學生缺曠類別，提供方法用來取得、新增、修改及刪除學生缺曠資訊
            </summary>
        </member>
        <member name="M:JHSchool.Data.JHAttendance.SelectAll">
            <summary>
            取得所有缺曠紀錄
            </summary>
            <returns>List&lt;JHAttendanceRecord&gt;，一個 JHAttendanceRecord物件代表一個學生在某一天的缺曠紀錄。</returns>
            <seealso cref="T:JHSchool.Data.JHAttendanceRecord"/>
            <example>
                <code>
                List&lt;JHAttendanceRecord&gt; records = JHAttendance.SelectAll();
                
                foreach(JHAttendanceRecord record in records)
                    System.Console.WriteLine(record.RefStudentID);
                </code>
            </example>    
            <exception cref="T:System.Exception">
            </exception>
        </member>
        <member name="M:JHSchool.Data.JHAttendance.Select(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            根據條件取得缺曠紀錄列表
            </summary>
            <param name="StudentIDs">學生編號列表</param>
            <param name="StartDate">缺曠發生開始時間</param>
            <param name="EndDate">缺曠發生結束時間</param>
            <param name="OccurDate">缺曠發生時間</param>
            <param name="SchoolYears">學年度列表</param>
            <param name="Semesters">學期列表</param>
            <returns>List&lt;JHAttendanceRecord&gt;，一個 AttendanceRecord物件代表一個學生在某一天的缺曠紀錄。</returns>
        </member>
        <member name="M:JHSchool.Data.JHAttendance.Select(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Collections.Generic.IEnumerable{System.DateTime},System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{K12.Data.SchoolYearSemester})">
            <summary>
            根據條件取得缺曠紀錄列表
            </summary>
            <param name="StudentIDs">學生編號列表</param>
            <param name="StartDate">缺曠發生開始時間</param>
            <param name="EndDate">缺曠發生結束時間</param>
            <param name="OccurDates">缺曠發生時間列表</param>
            <param name="SchoolYears">學年度列表</param>
            <param name="Semesters">學期列表</param>
            <param name="SchoolYearSemesters">學年度學期列表</param>
            <returns>List&lt;JHAttendanceRecord&gt;，一個 AttendanceRecord物件代表一個學生在某一天的缺曠紀錄。</returns>
        </member>
        <member name="M:JHSchool.Data.JHAttendance.SelectBySchoolYearAndSemester(System.Collections.Generic.IEnumerable{JHSchool.Data.JHStudentRecord},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            取得指定學生在某學年度學期的學生缺曠紀錄
            </summary>
            <param name="Students">學生記錄物件列表</param>
            <param name="SchoolYear">學年度，傳入null代表取得所有學年度資料。</param>
            <param name="Semester">學期，傳入null代表取得所有學期資料。</param>
            <returns>List&lt;JHAttendanceRecord&gt;，一個 AttendanceRecord物件代表一個學生在某一天的缺曠紀錄。</returns>
            <seealso cref="T:JHSchool.Data.JHAttendanceRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                List&lt;JHAttendanceRecord&gt; records = JHAttendance.SelectBySchoolYearAndSemester(Students, 98,1);
                
                foreach(JHAttendanceRecord record in records)
                    System.Console.WriteLine(record.RefStudentID);
                </code>
            </example>    
        </member>
        <member name="M:JHSchool.Data.JHAttendance.SelectByDate(System.Collections.Generic.IEnumerable{JHSchool.Data.JHStudentRecord},System.DateTime,System.DateTime)">
             <summary>
             取得指定學生在日期區間的學生缺曠紀錄
             </summary>
             <param name="Students">學生記錄物件列表</param>
             <param name="BeginDate">開始日期</param>
             <param name="EndDate">結束日期</param>
             <returns>List&lt;JHAttendanceRecord&gt;，一個 AttendanceRecord物件代表一個學生在某一天的缺曠紀錄。</returns>
             <seealso cref="T:JHSchool.Data.JHAttendanceRecord"/>
             <remarks></remarks>
             <example>
                 <code>
                 DateTime beginDate = new DateTime(2009, 4, 1);
                 DateTime endDate = DateTime.Now ;
            
                 ListList&lt;JHAttendanceRecord&gt; records = JHAttendance.SelectByDate(Students, beginDate, endDate );
                 
                 foreach(JHAttendanceRecord record in records)
                     System.Console.WriteLine(record.RefStudentID);
                 </code>
             </example>
        </member>
        <member name="M:JHSchool.Data.JHAttendance.SelectByDate(System.DateTime,System.DateTime)">
             <summary>
             取得指定日期區間的學生缺曠紀錄
             </summary>
             <param name="BeginDate">開始日期</param>
             <param name="EndDate">結束日期</param>
             <returns>List&lt;JHAttendanceRecord&gt;，一個 AttendanceRecord物件代表一個學生在某一天的缺曠紀錄。</returns>
             <seealso cref="T:JHSchool.Data.JHAttendanceRecord"/>
             <example>
                 <code>
                 DateTime beginDate = new DateTime(2009, 4, 1);
                 DateTime endDate = DateTime.Now ;
            
                 List&lt;JHAttendanceRecord&gt; records = JHAttendance.SelectByDate(StudentIDs,beginDate, endDate );
                 foreach(JHAttendanceRecord record in records)
                     System.Console.WriteLine(record.RefStudentID);
                 </code>
             </example>
        </member>
        <member name="M:JHSchool.Data.JHAttendance.SelectByStudents(System.Collections.Generic.IEnumerable{JHSchool.Data.JHStudentRecord})">
            <summary>
            取得指定學生歷年所有的學生缺曠紀錄
            </summary>
            <param name="Students">學生記錄物件列表</param>
            <returns>List&lt;JHAttendanceRecord&gt;，一個 AttendanceRecord物件代表一個學生在某一天的缺曠紀錄。</returns>
            <seealso cref="T:JHSchool.Data.JHAttendanceRecord"/>
            <example>
                <code>
                List&lt;JHAttendanceRecord&gt; records = JHAttendance.SelectByStudents(Students);
                
                foreach(JHAttendanceRecord record in records)
                    System.Console.WriteLine(record.RefStudentID);
                </code>
            </example>
        </member>
        <member name="M:JHSchool.Data.JHAttendance.SelectByStudentIDs(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            根據多筆學生編號取得學生缺曠紀錄
            </summary>
            <param name="StudentIDs">多筆學生記錄編號</param>
            <returns>List&lt;JHAttendanceRecord&gt;，一個 JHAttendanceRecord物件代表一個學生在某一天的缺曠紀錄。</returns>
            <seealso cref="T:JHSchool.Data.JHAttendanceRecord"/>
            <example>
                <code>
                List&lt;JHAttendanceRecord&gt; records = JHAttendance.SelectByStudentIDs(StudentIDs);
                
                foreach(JHAttendanceRecord record in records)
                    System.Console.WriteLine(record.RefStudentID);
                </code>
            </example>
        </member>
        <member name="M:JHSchool.Data.JHAttendance.Insert(JHSchool.Data.JHAttendanceRecord)">
            <summary>
            新增單筆學生缺曠記錄
            </summary>
            <param name="AttendanceRecord">學生缺曠記錄</param>
            <returns>string，傳回新增物件的系統編號。</returns>
            <seealso cref="T:JHSchool.Data.JHAttendanceRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    JHAttendanceRecord newrecord = new JHAttendanceRecord();
                    newrecord.RefStudentID = RefStudentID;
                    newrecord.SchoolYear = SchoolYear;
                    newrecord.Semester = Semester;
                    newrecord.OccurDate = DateTime.Today;
                    strng NewID = JHAttendance.Insert(newrecord)
                    JHAttendanceRecord record = JHAttendance.SelectByID(NewID);
                    System.Console.Writeln(record.RefStudentID);
                </code>
            </example>
            <remarks>
            1.新增一律傳回新增物件的編號。
            2.新增必填欄位為學生記錄編號（RefStudentID）、學年度（SchoolYear）、學期（Semester）、缺曠日期（OccurDate）。
            </remarks>
        </member>
        <member name="M:JHSchool.Data.JHAttendance.Insert(System.Collections.Generic.IEnumerable{JHSchool.Data.JHAttendanceRecord})">
            <summary>
            新增多筆學生缺曠記錄
            </summary>
            <param name="AttendanceRecords">多筆班級記錄物件</param> 
            <returns>List&lt;string&gt;，傳回新增物件的系統編號列表。</returns>
            <seealso cref="T:JHSchool.Data.JHAttendanceRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                    JHAttendanceRecord record = new JHAttendanceRecord();
                    newrecord.RefStudentID = RefStudentID;
                    newrecord.SchoolYear = SchoolYear;
                    newrecord.Semester = Semester;
                    newrecord.OccurDate = DateTime.Today;
                    
                    List&lt;JHAttendanceRecord&gt; records = new List&lt;JHAttendanceRecord&gt;();
                    records.Add(record);
                    List&lt;string&gt; NewID = JHAttendance.Insert(records)
                </code>
            </example>
        </member>
        <member name="M:JHSchool.Data.JHAttendance.Update(JHSchool.Data.JHAttendanceRecord)">
            <summary>
            更新單筆學生缺曠記錄
            </summary>
            <param name="AttendanceRecord">學生缺曠記錄物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHAttendanceRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                JHAttendanceRecord record = JHAttendance.SelectByStudentID(Student)[0];
                record.OccurDate = DateTime.Today;
                int UpdateCount = JHAttendance.Update(record);
                </code>
            </example>
            <remarks>傳回值為成功更新的筆數。</remarks>
        </member>
        <member name="M:JHSchool.Data.JHAttendance.Update(System.Collections.Generic.IEnumerable{JHSchool.Data.JHAttendanceRecord})">
            <summary>
            更新多筆學生缺曠記錄
            </summary>
            <param name="AttendanceRecords">多筆學生缺曠記錄物件</param> 
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHAttendanceRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                JHAttendanceRecord record = JHAttendance.SelectByStudentID(Student)[0];
                record.Date = DateTime.Today;
                List&lt;JHAttendanceRecord&gt; records = new List&lt;JHAttendanceRecord&gt;();
                records.Add(record);
                int UpdateCount = JHAttendance.Update(records);
                </code>
            </example>
            <remarks>傳回值為成功更新的筆數。</remarks>
        </member>
        <member name="M:JHSchool.Data.JHAttendance.Delete(JHSchool.Data.JHAttendanceRecord)">
            <summary>
            刪除單筆學生缺曠記錄
            </summary>
            <param name="AttendanceRecord">學生缺曠記錄物件</param>
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHAttendanceRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                  List&lt;JHAttendanceRecord&gt; records = JHAttendance.SelectByStudentIDs(StudentIDs);
                  int DeleteCount = JHAttendance.Delete(records[0]);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>
        </member>
        <member name="M:JHSchool.Data.JHAttendance.Delete(System.String)">
            <summary>
            刪除單筆學生缺曠記錄
            </summary>
            <param name="AttendanceRecordID">學生缺曠記錄編號</param>
            <returns>int，傳回成功更新的筆數。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                  int DeleteCount = JHAttendance.Delete(AttendanceID);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>
        </member>
        <member name="M:JHSchool.Data.JHAttendance.Delete(System.Collections.Generic.IEnumerable{JHSchool.Data.JHAttendanceRecord})">
            <summary>
            刪除多筆學生缺曠記錄
            </summary>
            <param name="AttendanceRecords">多筆學生缺曠記錄物件</param>
            <returns>int，傳回成功更新的筆數。</returns>
            <seealso cref="T:JHSchool.Data.JHAttendanceRecord"/>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                  List&lt;JHAttendanceRecord&gt; records = JHAttendance.SelectByStudentIDs(StudentIDs);
                  int DeleteCount = JHAttendance.Delete(records);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>
        </member>
        <member name="M:JHSchool.Data.JHAttendance.Delete(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            刪除多筆學生缺曠記錄
            </summary>
            <param name="AttendanceRecordIDs">多筆學生缺曠記錄編號</param>
            <returns>int，傳回成功更新的筆數。</returns>
            <exception cref="T:System.Exception">
            </exception>
            <example>
                <code>
                  int DeleteCount = JHAttendance.Delete(AttendanceIDs);
                </code>
            </example>
            <remarks>傳回值為成功刪除的筆數。</remarks>
        </member>
        <member name="T:JHSchool.Data.JHMeritDemeritReduce">
            <summary>
            取得及更新功過換算表
            </summary>
        </member>
        <member name="M:JHSchool.Data.JHMeritDemeritReduce.Select">
            <summary>
            取得功過換算表
            </summary>
            <returns>功過換算表記錄物件</returns>
        </member>
    </members>
</doc>
